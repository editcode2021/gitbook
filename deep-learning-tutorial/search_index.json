{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["0.1","algorithm","allow","autoencoders(da)）","autoencoders(sda))","belif","boltzmann","carlo","chines","code","code.","coder","cpu","deep","deeplearn","denois","develop","digit","documentation.","embed","famou","gener","gpu","hua,","hybrid","lab,","learn","library,","lifeng","lisa","logist","machines(rbm)）","miscellan","mnist","model","mont","montreal","music","network","networks(lenet)）","neural","parti","perceptron）","polyphon","python","rbm","recurr","regression)","rnn","run","sampl","sequenc","started）","team,","theano","theano.","third","translat","tutori","tutorial,","univers","us","word","zhejiang","作者/author","使用逻辑回归进行mnist分类(classifi","入门（get","内容/content","卷积神经网络（convolut","受限波尔兹曼机（restrict","多层感知机（multilay","层叠自动编码机(stcake","深度学习教程中文版","版权/copyright","简介","翻译者/translat","这是一个翻译自深度学习0.1文档的中文教程。在这个教程里面所有的算法和模型都是通过pyhton和theano实现的。theano是一个著名的第三方库，允许程序员使用gpu或者cpu去运行他的python代码。","降噪自动编码机器（denois"],"1_Getting_Started_入门.html":["\"\"\"","#","',","'int32')","'rb')","'wb')","(``shared_y``","(epoch","(if","(see","(share","(the","(we","(when","(x_batch,","(x_batch,y_batch)","(x_i,y_i)","*","**","+","..","...","...,","0","0.","0.995","1","1)","1.入门","1损失函数","1损失函数不可微分，在大型模型中对它优化会造成巨大开销。因此我们通过最大化给定数据标签的似然函数来训练模型。","2","2)","5000",":",";","=",">>>","[(params,","[0,1,...,k],","[0,1,2,...,len(y)].","[a,b,...,k]","``floatx``","``shared_y``","actual","allow","around","arrays;","assum","b(i)：向量内的（i）点的数据符号和缩略语表","befor","behaviour","best","best_param","best_validation_loss","borrow=true)","b：小些字母表示向量（除非特殊说明）","case","cast","check","clone","code","compil","comput","consid","content","copi","correct","cpickl","cpickle,","cpickle.dump(u.get_value(borrow=true),","cpickle.dump(v.get_value(borrow=true),","cpickle.dump(w.get_value(borrow=true),","cpickle.load(f)","current","d_h(i)：第i层个隐层的输入单元数目","d_loss_wrt_param","d_loss_wrt_params)]","data","data_i","data_x,","data_xi","dataset","decay）”。","decreas","def","default","descent","descript","details)","doesn't","done_loop","dtype=theano.config.floatx))","dure","d：输入维度的数目","earli","effici","element","epoch","everytim","exactli","exampl","express","f","f(params)","f(params,","f.close()","fals","finit","float","found","function","gener","git","git://github.com/lisa","given","go","gpu","gpu).","gradient","gzip,","gzip.open('mnist.pkl.gz',","hack","here","here,","highest_protocol","imagin","import","improv","improvement_threshold","index","index,","infinit","instead","int","int.","integ","issu","l1","l1/l2正则化","l1/l2正则化就是在损失函数中添加额外的项，用以惩罚一定的参数结构。对于l2正则化，又被称为“权制递减（weight","l2","l2_sqr","lab/deeplearningtutorials.git","label","labels,","lambda_1","lambda_2","larg","lead","learning_r","let","littl","load","log","longer","look","loss","loss,","l：标签的数目","m","m[0,a],","m[1,b],","m[k,k]","make","mani","matrix","memori","min(","min(n_train_batches,","minibatch","mnist数据集(mnist.pkl.gz)","mnist是一个包含60000个训练样例和10000个测试样例的手写数字图像的数据集。在许多论文，包括本教程，都将60000个训练样例分为50000个样例的训练集和10000个样例的验证集（为了超参数，例如学习率、模型尺寸等等）。所有的数字图像都被归一化和中心化为2828的像素，256位图的灰度图。","more","msgd","msgd(x_batch,","much","need","network","new","nll","nll,","nll：负对数似然函数","none","note","numpi","numpy'","numpy.inf","on","open('path')","open('path',","overwrit","param","paramet","params)","patienc","patience/2)","patience/2.的原因。","patience_increas","performance.","print('curr","probabl","python命名空间","reason","regardless","regular","rel","repeat","repres","respect","retriev","return","run","save_fil","save_file,","save_file.close()","sense)","set)","set;","share","shared_dataset(data_xy):","shared_i","shared_x","shared_x,","signific","slow,","squar","start_tim","started）","step","stochast","stop","stopping_condition_is_met:","stopping。","stopping技术需要我们将数据分割为训练集、验证集、测试集。测试集使用minibatch的随机梯度下降来对目标函数进行逼近。同时引入l1/l2正则项来应对过拟合。","stopping通过监控模型在验证集上的表现来应对过拟合。验证集是一个我们从未在梯度下降中使用，也不在测试集的数据集合，它被认为是为了测试数据的一个表达。当在验证集上，模型的表现不再提高，或者表现更差，那么启发式算法应该放弃继续优化。","storag","store","symbol","syntax","syntax:","t","t.arange(y.shape[0])","t.cast(shared_y,","t.grad(loss,","t.sum(abs(param))","t.sum(param","t.sum(t.log(p_y_given_x)[t.arange(y.shape[0]),","t.sum(t.neq(t.argmax(p_y_given_x),","term","test_scor","test_set","that).","theano","theano.function([x_batch,y_batch],","theano.shared(numpy.asarray(data_x,","theano.shared(numpy.asarray(data_y,","theano.tensor","theano/python技巧","therefor","theta：给定模型的参数集合","through","time.clock()","train","train_batch","train_batches:","train_set,","training_set:","trigger","true:","tutori","two","u.set_value(cpickle.load(save_file),","updat","updates=updates)","us","v.set_value(cpickle.load(save_file),","valid","valid_set,","validation_frequ","valu","value,","variabl","variable)","variable),","variables），通过minibatch的索引（一个固定的被告知的batch的尺寸）来存取它们。使用共享变量的原因是为了使用gpu。因为往gpux显存中复制数据是一个巨大的开销。如果不使用共享变量，gpu代码的运行效率将不会比cpu代码快。如果你将自己的数据定义为共享变量，当共享变量被构建的时候，你就给了theano在一次请求中将整个数据复制到gpu上的可能。之后，gpu就可以通过共享变量的slice（切片）来存取任何一个minibatch，而不必再从cpu上拷贝数据。同时，因为数据向量（实数）和标签（整数）通常是不同属性的，测试集、验证集和训练集是不同目的的，所以我们建议通过不同的共享变量来储存（这就产生了6个不同的共享变量）。","vector","vector.","w(.j)：矩阵的一列","w(i,j)：矩阵内（i，j）点的数据","w(i.)：矩阵的一行","w.set_value(cpickle.load(save_file),","wait","well","w：大写字母表示矩阵（除非特殊说明）","x_batch","x_batch,","x_i,","y))","y.","y])","y_batch","y_batch)","y_batch))","y_batch;","y_i)","zero","zero_one_loss","下载","为了方便在python中的使用，我们对数据集进行了处理。你可以在这里下载。这个文件被表示为包含3个lists的tuple：训练集、验证集和测试集。每个lists都是都是两个list的组合，一个list是有numpy的1维array表示的784（2828）维的0～1（0是黑，1是白）的float值，另一个list是0～9的图像标签。下面的代码显示了如何去加载这个数据集。","什么是普通的梯度下降？梯度下降是一个简单的算法，利用负梯度方向来决定每次迭代的新的搜索方向，使得每次迭代能使待优化的目标函数逐步减小。","伪代码如下。","伪代码如下所示。","使用pickle在共享变量中储存numpy的ndarray","入门（get","原则上来说，增加一个正则项，可以平滑神经网络的网络映射（通过惩罚大的参数值，可以减少网络模型的非线性参数数）。因而最小化这个和，就可以寻找到与训练数据最贴合同时范化性更好的模型。更具奥卡姆剃刀原则，最好的模型总是最简单的。","在每一个学习算法的页面，你都需要去下载相关的文件。加入你想要一次下载所有的文件，你可以克隆本教程的git仓库。","在选择minibatch的尺寸b时中有个权衡。当尺寸比较大时，在梯度估计时就要花费更多时间计算方差；当尺寸比较小的时候呢，就要进行更多的迭代，也更容易波动。因而尺寸的选择要结合模型、数据集、硬件结构等，从1到几百不等。","在选择何时终止优化方面，主要基于主观判断和一些启发式的方法，但在这个教程里，我们使用一个几何级数增加的patience量的策略。","如果你再gpu上跑代码，并且数据集太大，可能导致内存崩溃。在这个时候，你就应当把数据存储为共享变量。你可以将数据储存为一个充分小的大块（几个minibatch）在一个共享变量里面，然后在训练的时候使用它。一旦你使用了这个大块，更新它储存的值。这将最小化cpu和gpu的内存交换。","如果过训练数据的batch批次。","学习一个分类器","当你做实验的时候，用梯度下降算法可能要好几个小时去发现一个最优解。你可能在发现解的时候，想要保存这些权值。你也可能想要保存搜索进程中当前最优化的解。","当我们使用这个数据集的时候，通常将它分割维几个minibatch。我们建议你将数据集储存为共享变量（shar","当然，事实上，简单模型并不一定意味着好的泛化。但从经验上看，这个正则化方案可以提高神经网络的泛化能力，尤其是对于小数据集而言。下面的代码我们分别给两个正则项一个对应的权重。","总结","我们不止一次的在深度学习中提及这个变体——“minibatches”。minibatch随机梯度下降区别与随机梯度下降，在每次梯度估计时使用一个minibatch的数据。这个技术减小了每次梯度估计时的方差，也适合现代电脑的分层内存构架。","我们依据在验证集上表现最好的参数作为模型的参数，去在测试集上进行测试。","我们定义数据集为d,包括3个部分，d_train，d_valid，d_test三个集合。d内每个索引都是一个(x,y)对。","数学约定","数据集","数据集标记","标记","正则化","正则化是为了防止在msgd训练过程中出现过拟合。为了应对过拟合，我们提出了几个方法：l1/l2正则化和earli","测试","深度学习的监督优化入门","由于0","由于我们通常说最小化损失函数，所以我们给对数似然函数添加负号，来使得我们可以求解最小化负对数似然损失函数。","由于现在的数据再一个变量里面，一个minibatch被定义为这个变量的一个切片。通过指定它的索引和它的尺寸，可以更加自然的来定义一个minibatch。下面的代码展示了如何去存取数据和如何存取一个minibatch。","负对数似然损失函数","载入和保存模型","这个validation_frequency应该要比patience更小。这个代码应该至少检查了两次，在使用patience之前。这就是我们使用这个等式validation_frequ","这个教程并不是为了巩固研究生或者本科生的机器学习课程，但我们确实对一些重要的概念（和公式）做了的快速的概述，来确保我们在谈论同个概念。同时，你也需要去下载数据集，以便可以跑未来课程的样例代码。","这个数据以float的形式被存储在gpu上（dtype被定义为theano.confug.floatx）。然后再将标签转换为int型。","这个算法可能会有更好的表现，当我们通过统计显著性的测试来代替简单的比较来决定是否增加patient。","这是对优化章节的总结。earli","随机梯度下降","随机梯度下降则是普通梯度下降的优化。通过使用一部分样本来优化梯度代替所有样本优化梯度，从而得以更快逼近结果。下面的代码，我们一次只用一个样本来计算梯度。"],"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":["!=","![loss_function](/images/2_defining_a_loss_function_1.png)","![probality](/images/2_the_model_1.png)","![y_prediction](/images/2_the_model_2.png)","\"\"","\"\"\"","\"\"\"multi","\"\"\"return","\"..\",","\"data\",","\"pattern","#","#############","###############","######################","#input","#numpy.ndarray","#target","#the","#train_set,","#witch","%","%,with","%.1fs'","%s'","&=","'","'''","'...","'__main__':","'download","'http://www.iro.umontreal.ca/~lisa/deep/data/mnist/mnist.pkl.gz'","'int32')","'mnist.pkl.gz':","'rb')","'restructedtext","'y","'y_pred',","(","('the","('y',","((end_tim","(\\theta=\\{w,b\\},","(``shared_y``","(a","(across","(call","(classifier.b,","(epoch","(factor","(here","(index","(n_in,","(n_out,),","(not","(one","(symbolically)","(test_set_x,","(the","(valid_set_x,","(variable,","(vector))","(w,b)","(we","(when","(x",")","),","*","+","..","...","...,","/","0","0.","0.995","0s","1","1)","1,y[n","1.936983","1]","1]]]","1d","1s,","2","2)","2.逻辑回归进行mnist分类","28*28","28,","3","3.00","4.3.2","5000","7.489583","7.500000","7.510417","72,","73,","74","83/83,",":math:`b`.",":math:`w`",":param",":type",";","=","==",">","@","[(classifier.w,","[(train_set_x,","[0,1,2,...","[int]","[lp[0,y[0]],","[mini]batch","[self.w,","\\\\","\\ell","\\frac","\\frac{1}{|\\mathcal{d}|}","\\log(p(y=y^{(i)}|x^{(i)},","\\mathcal{d})","\\mathcal{l}","\\sum_{i=0}^{|\\mathcal{d}|}","__docformat__","__init__(self,","__name__","``floatx``","``shared_y``","`train_model`","`updates`","actual","alloc","allow","architectur","argmax","argmax_i","arithmet","around","as:","axis=1)","b","b)","b_i}}","b_j}}","bais","base","batch","batch_siz","batch_size:","batch_size=600):","batch_size]","batch_size],","befor","behaviour","best","best_validation_loss","bia","bishop,","borrow=borrow)","borrow=tru","borrow=true):","build","case","cast","check","christoph","class","classif","classifi","classifier.","classifier.b","classifier.negative_log_likelihood(y)","classifier.w","code","column","compil","complet","comput","consid","construct","contain","copi","core(tm)2","correct","correspond","cost","cost,","cpickl","cpickle.load(f)","cpu","data","data'","data,","data_dir","data_dir,","data_fil","data_i","data_x,","data_xi","datapoint","dataset","dataset)","dataset:","dataset='mnist.pkl.gz',","datasets.","datasets[0]","datasets[1]","datasets[2]","datatyp","decreas","def","default","defin","demonstr","depend","descent","descent.","describ","descript","determin","dimens","directory.","distanc","distribution.","doesn't","done","done_loop","download","dtype=theano.config.floatx","dtype=theano.config.floatx),","duo","dure","e8400","e^{w_j","each","earli","element","else:","en'","end","epoch","epochs,","epochs/sec","epochs/sec在这个实例中我们定义为batch的大小为600。","epochs/sec然后跑75","epochs，得到测试错误率为7.489%。在gpu上为10.0","error","errors(self,","everytim","exactli","exampl","example.","examples)","express","expression)","f","f.close()","fals","file","float","floatx(默认为float64)。假如你想要在你的gpu上跑你的代码，你也需要看gpu。","format","format:","found","free","fulli","function","g_b","g_b)]","g_w","g_w),","gener","ghz上，这个代码的速度是1.936","give","given","givens={","go","gpu","gpu).","gradient","gradient)","gzip","gzip.open(dataset,","hack","http://www.iro.umontreal.ca/~lisa/deep/data/mnist/mnist.pkl.gz","hyper","hyperplanes,","i'th","i.e.,","imag","import","improv","improvement_threshold","index","index,","initi","input","input,","input.","input:","inputs=[index],","instead","int","int.","introduc","issu","j","k","label","labels,","larg","lead","learn","learning\"","learning_r","learning_rate:","length","less","let","lie","likelihood","linear","list","littl","load","load_data(dataset)","load_data(dataset):","log","logist","logisticregression(input=x,","logisticregression(object):","longer","look","loss","lp)","lp[1,y[1]],","lp[2,y[2]],","lp[n","lp[t.arange(y.shape[0]),y]","m.","machin","made","make","mani","math::","mathematically,","matrix","matrix)","maxim","mean","membership","memori","method","min(n_train_batches,","minibatch","minibatch)","minibatch.","minim","mistak","mnist","mnist)","mnist.","model","model'","much","n","n)","n_epochs:","n_epochs=1000,","n_in,","n_in:","n_in=28","n_out","n_out)","n_out),","n_out):","n_out:","n_out=10)","n_test_batch","n_train_batch","n_valid_batch","name='b',","name='w',","need","neg","negative_log_likelihood(self,","network","new","new_path","note:","notimplementederror()","number","numpi","numpy.inf","numpy.ndarray","on","onto","oper","ops）,","optim","origin","os","os.path.isfile(dataset))","os.path.isfile(dataset):","os.path.isfile(new_path)","os.path.join(","os.path.split(__file__)[0],","os.path.split(__file__)[1]","os.path.split(dataset)","ou","output","outputs=classifier.errors(y),","outputs=cost,","over","p(y=i|x).","p(y=i|x,","p(y=i|x,w,b)","pairs.","paramet","parametr","path","patienc","patience_increas","per","perform","performance.","plain","point","predict","present","print","probabilistic,","probability.","probabl","project","rais","ran","raster","rate","reason","recognit","references:","regardless","regress","regressing）","rel","repres","respect","return","row","row'","rule","run","rval","same","sampl","score","section","self.b","self.b)","self.b]","self.p_y_given_x","self.param","self.w","self.w)","self.y_pr","self.y_pred',","self.y_pred.ndim:","self.y_pred.type)","sense)","separ","set","set;","sgd_optimization_mnist()","sgd_optimization_mnist(learning_rate=0.13,","shape","share","shared_dataset(data_xy,","shared_dataset(test_set)","shared_dataset(train_set)","shared_dataset(valid_set)","shared_i","shared_x","shared_x,","signific","size","slow,","snippet","softmax_i(w","space","specifi","start","start_tim","start_time)))","stochast","stop","stopping的关键。它们都是来统计minibatch中分类错误的样例数。","store","string","suitabl","sum","sy","symbol","sys.stderr,","t","t.arange(y.shape[0])","t.argmax(self.p_y_given_x,","t.cast(shared_y,","t.grad(cost=cost,","t.ivector('y')","t.log(self.p_y_given_x)","t.lscalar()","t.matrix('x')","t.mean(lp[t.arange(y.shape[0]),y])","t.mean(t.log(self.p_y_given_x)[t.arange(y.shape[0]),","t.mean(t.neq(self.y_pred,","t.neq","t.nnet.softmax(t.dot(input,","take","target","target)","test","test_model","test_scor","test_set","test_set_i","test_set_x,","test_set_x.get_value(borrow=true).shape[0]","test_set_x[index","test_set_y)]","test_set_y[index","textbooks:","that).","theano","theano.function(","theano.shared(","theano.shared(numpy.asarray(data_x,","theano.shared(numpy.asarray(data_y,","theano.tensor","theano.tensor.tensortyp","theano代码如下。","theano的进阶（t.grad）,","therefor","theta","through","time","time.clock()","total","train","train_model","train_set,","train_set_i","train_set_x,","train_set_x.get_value(borrow=true).shape[0]","train_set_x[index","train_set_y),","train_set_y[index","training,","tuple(input,","tutori","typeerror(","under","units,","updat","updates=updates,","update是一个list，用以更新每一步的参数。given是一个字典，用以表示象征变量，和你在该步中表示的数据。这个train_model定义如下：","urllib","urllib.urlretrieve(origin,","us","v","v,","valid","valid_set,","valid_set_i","valid_set_x,","valid_set_x.get_value(borrow=true).shape[0]","valid_set_x[index","valid_set_y),","valid_set_y[index","validate_model","validation_frequ","value=numpy.zeros(","variabl","variable)","variable）,","vector","w","w,b)","w,b))","wait","weight","well","where:","whose","written","wrt=classifier.b)","wrt=classifier.w)","x","x:","y","y))","y):","y,","y.dtype.startswith('int'):","y.ndim","y.shape[0]","y.type,","y:","y])","y_pred","y_{pred}","zero","{\\sum_j","{e^{w_i","}","下面的代码定义了一个对给定的minibatch的损失函数。","为了获得实际的模型预测，我们使用t_argmax操作，来返回p_y_given_x的最大值对应的y。","使用逻辑回归进行mnist分类（classifi","创建一个逻辑回归类","在intel(r)","在theano中呢，这是非常简单的。它自动微分，并且使用了一定的数学转换来提高数学稳定性。","在之前论述中所说，我们对分类错误的样本感兴趣（不仅仅是可能性）。因此模型中增加了一个额外的实例方法，来纪录每个minibatch中的错误分类样例数。","在实现msgd的许多语言中，需要通过手动求解损失函数对每个参数的梯度（微分）来实现。","在给定模型下，输入x，输出为y的概率，可以用如下公式表示","在这一节，我们将展示theano如何实现最基本的分类器：逻辑回归分类器。我们以模型的快速入门开始，复习(refresher)和巩固(anchor)数学负号，也展示了数学表达式如何映射到theano图中。","在这里我们使用错误的平均来表示损失函数，以减少minibatch尺寸对我们的影响。","基本数学算子（basic","如果想要获得完整的theano算子，看算子列表","学习优化模型参数需要最小化一个损失参数。在多分类的逻辑回归中，很显然是使用负对数似然函数作为损失函数。似然函数和损失函数定义如下：","学习模型","定义一个损失函数","我们创建了test_model函数，然后也创建了validate_model来调用去修正这个值。当然validate_model是earli","我们通过如下代码来实例化这个类。","把它们组合起来","最后的代码如下。","最后，我们定义了一个cost变量来最小化。","本节假定读者属性了下面的theano概念：共享变量（shar","本节的所有代码可以在这里下载。","模型","每一次函数调用，它都先用index对应的训练集的切片来更新x，y。然后计算该minibatch下的cost，以及申请update操作。","每次train_model(inedx)被调用，它都计算并返回该minibatch的cost，当然这也是msgd的一步。整个学习算法因循环了数据集所有样例。","现在，我们要定义一个逻辑回归的类，来概括逻辑回归的基本行为。代码已经是我们之前涵盖的了，不再进行过多解释。","由于模型的参数需要不断的存取和修正，所以我们把w和b定义为共享变量。这个dot（点乘）和softmax运算用以计算这个p(y|x,w,b)。这个结果p_y_given_x(probability)是一个vector类型的概率向量。","虽然整本书都致力于探讨最小化话题，但梯度下降是迄今为止最简单的最小化非线性函数的方法。在这个教程中，我们使用minibatch随机梯度下降算法。可以看随机梯度下降来获得更多细节。","训练模型","输入是minibatch的index，batch的大小之前已经固定，以此被定义为x，以及其相关的y。","返回是该index下与x，y相关的cost/损失函数。","这个函数train_model可以被定义如下。","这个输出将是如下的格式","逻辑回归模型是一个线性概率模型。它由一个权值矩阵w和偏置向量b参数化。分类通过将输入向量提交到一组超平面，每个超平面对应一个类。输入向量和超平面的距离是这个输入属于该类的一个概率量化。","需要注意的是，输入向量x，和其相关的标签y都是定义在logisticregression实体外的。这个类需要将输入数据作为__init__函数的参数。这在将这些类的实例连接起来构建深网络方面非常有用。一层的输出可以作为下一层的输入。"],"3_Multilayer_Perceptron_多层感知机.html":["\"\"\"","\"\"\"initi","\"\"\"multi","\"pattern","#","###############","######################","%","%.2fm'","'","'...","'__main__':","'restructedtext","(","('the","((end_tim","(a2,","(a3,","(a4,","(among","(defin","(epoch","(factor","(index","(l1","(n_examples,","(n_in","(n_in,n_out)","(n_out,).","(one","(param,","(see","(self.hiddenlayer.w","(self.logregressionlayer.w","(sotr","(usual","(variable,",")","),","*","**","*=","+",".","..","/","0","0.","0.995","1","1)","1.650000","1.690000","10000","1d","2","2)","2).sum()","2070000,","2600k","28,","3","3.40ghz的机器上，这个代码跑了10.3","3.多层感知机","4","4.7节讲述了网络中每个参数学习速率选择的方法，然后基于分类错误率自适应的选择它们。","5","6./(n_in+n_hidden))","60.))","97.34m",":",":param",":type",";","=","==",">","@","[","[(a1,","[a1,","[b1,","[int]","[mini]batch","[self.w,","[t.grad(cost,","[xavier10]","]","__docformat__","__init__(self,","__name__","``hiddenlayer``","``logisticregression``","`train_model`","`updates`","`w_values`","`w`","a2,","a3,","a4]","abs(self.hiddenlayer.w).sum()","abs(self.logregressionlayer.w).sum()","activ","activation(lin_output)","activation:","activation=t.tanh","activation=t.tanh):","activations.","actual","ad","alloc","appli","architectur","artifici","asarray","b","b)","b1),","b2),","b2,","b3),","b3,","b4)]","b4]","b=none,","b^{(1)}","b^{(2)}","b_valu","backpro中阅读，这是一个好的综述。这里，我们将总结下我们的代码中用到的几个重要的方法和技术。","base","batch_siz","batch_size:","batch_size:(index","batch_size=20,","batch_size]","batch_size],","befor","best","best_it","best_validation_loss","bia","bishop,","borrow=true)","build","by:","c","call","case","check","christoph","class","class)","class).","classifi","classification.","classifier.l1","classifier.l2_sqr","classifier.negative_log_likelihood(y)","classifier.params]","code","compar","compil","complete.","comput","connect","consid","construct","convert","core(tm)","cost","cost,","cpu","data","datapoint","dataset","dataset:","dataset='mnist.pkl.gz',","datasets[0]","datasets[1]","datasets[2]","deal","deep.","def","defin","demonstr","depend","descent","describ","digit","dimens","dimension","done_loop","dtype","dtype=theano.config.floatx","dtype=theano.config.floatx)","dure","each","earli","element","en'","end","enforc","epoch","epoch/minute然后花了828","epochs得到了1.65%的测试错误率。","error","exampl","example,","express","expression)","f(x)","fals","feed","feedforward","file","float","form","found","fulli","function","function,","function.","g(","gener","get","given","givens={","go","gparam","gparam)","gparams)","gpu","gradient","here","hidden","hiddenlay","hiddenlayer(","hiddenlayer(object):","high=numpy.sqrt(6.","hold","http://www.iro.umontreal.ca/~lisa/deep/data/mnist/mnist.pkl.gz","i7","imag","import","improv","improvement_threshold","index","info","initi","input","input,","input:","input=input,","input=self.hiddenlayer.output,","input=x,","inputs=[index],","insert","instead","int","intermedi","introduc","iter","l1","l1_reg","l1_reg:","l1_reg=0.00,","l2","l2);","l2_reg","l2_reg:","l2_reg=0.0001,","label","larger","layer","layer,","layer;","learn","learning\"","learning_r","learning_rate:","length,","lie","likelihood","lin_output","linear","list","load_data","load_data(dataset)","log","logist","logistic_sgd","logisticregress","logisticregression(","logisticregression,","longer","look","low=","m.","machin","made","make","mani","math::","matrix","maxim","min(n_train_batches,","minibatch","minibatch)","minim","mistak","mlp","mlp(","mlp(object):","mlp,","mlp.pi","mlp:","mnist","mnist.","model","model'","model,","more","much","multilay","n_epochs:","n_epochs=1000,","n_hidden,","n_hidden:","n_hidden=500):","n_hidden=n_hidden,","n_in)","n_in,","n_in:","n_in=28","n_in=n_hidden,","n_in=n_in,","n_out)","n_out)),","n_out):","n_out,","n_out:","n_out=10","n_out=n_hidden,","n_out=n_out","n_test_batch","n_train_batch","n_valid_batch","name='b',","name='w',","neg","network","neural","new","non","none","none:","nonlinear","norm","norm'","note","number","numpi","numpy.asarray(","numpy.inf","numpy.random.randomst","numpy.random.randomstate(1234)","numpy.sqrt(6.","numpy.zeros((n_out,),","obtain","on","optim","option","os","os.path.split(__file__)[1]","out","output","outputs=classifier.errors(y),","outputs=cost,","pair","param","param)","param,","paramet","params)","path","patienc","patience_increas","perceptron","perceptron）","perform","plu","present","print","problem","ran","random","raster","rate","recognit","references:","regardless","regress","regressor","regular","regularization)","rel","replac","respect","result","return","rng","rng,","rng.uniform(","rng:","rng=rng,","rule","run","runabl","s(","same","sampl","score","section","self.b","self.b]","self.error","self.hiddenlay","self.hiddenlayer.param","self.input","self.l1","self.l2_sqr","self.logregressionlay","self.logregressionlayer.error","self.logregressionlayer.negative_log_likelihood","self.logregressionlayer.param","self.negative_log_likelihood","self.output","self.param","self.w","self.w)","set;","shape","sigmoid","sigmoid)","signific","size,","size=(n_in,","small","snippet","softamx","space","specifi","sqrt(","sqrt(6./(n_in+n_hidden))","squar","start","start_tim","start_time)","stochast","stop","stopping或l1/l2惩罚），隐藏节点数和泛化表现的分布图，将呈现u型（即隐藏节点越多，在后期并不能提高泛化性）。","store","string","such","suggest","sy","symbol","sys.stderr,","t","t.dot(input,","t.ivector('y')","t.lscalar()","t.matrix('x')","tackl","tanh","tanh(dot(input,w)","tanh.","tensor","term","test","test_mlp()","test_mlp(learning_rate=0.01,","test_model","test_scor","test_set_i","test_set_x,","test_set_x.get_value(borrow=true).shape[0]","test_set_x[index","test_set_y[index","textbooks:","theano","theano.","theano.config.floatx","theano.function(","theano.op","theano.shared(value=b_values,","theano.shared(value=w_values,","theano.tensor","theano.tensor.dmatrix","theano.tensor.nnet.sigmoid:","theano.tensor.tensortyp","theta","things).","through","time","time.clock()","top","train","train_model","train_set_i","train_set_x,","train_set_x.get_value(borrow=true).shape[0]","train_set_x[index","train_set_y[index","training'","training,","translat","tutori","two","typic","uniform","unit","units,","updat","updates=updates,","us","usual","valid","valid_set_i","valid_set_x,","valid_set_x.get_value(borrow=true).shape[0]","valid_set_x[index","valid_set_y[index","validate_model","validation_frequ","variabl","vector","w","w=none,","w^{(1)}","w^{(2)}(","w_valu","wait","weight","x","x))),","x:","y","y:","zip","zip(classifier.params,","}","一个多层感知机（或者说人工神经网络——ann）,在只有一个隐藏层时可以被表示为如下的图：","一个隐藏层的权值初始化，应当从基于激活函数的均匀间隔中均匀采样。对于sigmoid函数而言，这个间隔是。其中fan_in是第（i－1）层的单元数目，fan_out是第（i）层单元的数目，结论出自这里。","下一个我们将在theano中使用的结构是单隐层的多层感知机（mlp）。mlp可以被看作一个逻辑回归分类器。这个中间层被称为隐藏层。一个单隐层对于mlp成为通用近似器是有效的。然而在后面，我们将讲述使用多个隐藏层的好处，例如深度学习的前提。这个课程介绍了mlp，反向误差传导，如何训练mlps。","事实上，一个单隐藏层的mlp是一个如下的函数，其中x是输入向量的维度，l是输出向量的维度。我们用下面的公式来表示mlp模型：","从逻辑回归到多层感知机","其中b_1，w_1是输出层到隐藏层的偏置向量和权值矩阵，s是该层的激活函数。而b_2，w_2是隐藏层到输出层的偏置向量和权值矩阵，g是该层的激活函数。通常选择s为sigmoid函数，g为softmax函数。","典型的方法是使用l1/l2正则化，同时lambda设为0.01，0.001等。尽管在我们之前提及的框架里面，它并没有显著提高性能，但它仍然是一个值得探讨的方法。","在一台intel(r)","在上面的代码中国，有一些是不能进行梯度下降来优化的。严格意义上将，发现最优的超参集合是不可能的任务。第一，我们不能独立的优化每一个参数。第二，我们不能很容易的求解所有参数的梯度（有些是离散的值，有些是实数）。第三，这个优化问题是非凸的，容易陷入局部最优。","在初始化权值的时候，我们一般需要它们在0附近，要足够小（在激活函数的近似线性区域可以获得最大的梯度）。另一个特性，尤其对深度网络而言，是可以减小层与层之间的激活函数的方差和反向传导梯度的方差。这就可以让信息更好的向下和向上的传导，减少层间差异。数学推倒，请看xavier10。","在本节中，假设你已经了解了使用逻辑回归进行mnist分类。同时本节的所有代码可以在这里下载.","在本节中，我们也使用l1/l2正则化（l1/l2正则化）。所以我们需要去计算w_1和w_2矩阵的l1正则和l2平方正则。","在此之前，我们使用minibatch的随机梯度下降来训练这个模型。不同的是，我们现在在cost函数里面添加了正则项。l1_reg和l2_reg可以控制权值矩阵的正则化。计算新cost的代码如下：","在训练mlp模型的参数时，我们使用minibatch的随机梯度下降，在获得梯度后使用反向误差传导算法来实现参数的训练。由于theano提供自动的微分，我们不需要在这个教程里面谈及这个方面。","多层感知机（multilay","好消息是，过去25年，研究者发明了一些在神经网络中选择超参数的方法和规则。你可以在lecun等人的effici","如果你已经阅读了上面的隐藏层输出和使用逻辑回归进行mnist分类。那么你可以看下面的mlp类的实现了。","学习率","已经解释了所有的基本该概念，下面的代码就是一个完整的mlp类。","我们使用梯度来更新模型参数，这基本和逻辑回归里面的一样。我们从模型的params中获取参数列表，然后分析它，并计算每一步的梯度。","把它组合起来","最常见的就是sigmoid和tanh函数。在第4.4节中解释的，非线性是关于原点对称的，它倾向去输出0均值的输出（这是被期望的属性）。根据我们的经验，tanh(双曲函数)拥有更好的收敛性。","有许多文献专注在好的学习速率的选择上。最简单的方案就是选择一个固定速率。经验法则：尝试对数间隔的值(0.1，001，。。)，然后缩小（对数）网络搜索的范围（你获得最低验证错误的区域）。","本教程将专注于单隐藏层的mlp。我们以隐藏层的类的实现开始，如果要构建一个mlp，只需要在此基础上添加一个逻辑回归就好。","权值初始化","模型","正则化参数","注意，我们通过会将一个给定的非线性函数作为隐藏层的激活函数。默认是tanh函数，当然很多时候你可能需要其他函数。","训练mlps的技巧","读者也可以在这个页面查看mnist的识别结果。","这个超参数是非常基于数据集的。模糊的来说就是，输入分布越复杂，去模拟它的网络就需要更大的容量，那么隐藏单元的数目就要更大。事实上，一个层的权值矩阵就是可以直接度量的（输入维度＊输出维度）。","这样的初始化，保证了在训练的早期，每个神经元都可以工作在它激活函数的控制范围内，从而使得信息可以更简单的前向传导（从输入到输出的激活）和后向传导（从输出到输入的梯度）。","除非我们去使用正则选项（earli","随着时间的推移减小学习速率有时候也是一个好主意。一个简单的方法是使用这个公式：u/(1+d*t)，u是初始速率（可以使用上面讲的网格搜索选择），d是减小常量，用以控制学习速率，可以设为0.001或者更小，t是迭代次数或者时间。","隐藏节点数","非线性","预计将会得到这样的输出："],"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":["\"\"\"","\"\"\"pool","\"minibatch\",","\"num","\"simulate\"","#","######################","#cols)","%","&","',","'...","'invals[0,","'invals[1,","'output[0,","'output[1,","'with","'x')","'x'))","'x',","(#rows,","(1,","(12","(12,","(1d","(2,","(2,)","(20,","(24,","(24/2,","(28","(28,","(4,","(500,","(8,","(8/2,","(axbxc","(batch","(batch_size,","(fan_in","(filter","(filter_shape[0]","(i.e","(index","(n","(nkerns[0],","(number","(param_i,","(params[i],","(pooling)","(scalar)",")","),","*","+",",",".5,","/","0","0)","0,","0.01936696","0.04995346]","0.05336255","0.10233443","0.1374747","0.13927635","0.14672857","0.21162812","0.26554666","0.39676747]","0.39767684]]","0.41405599","0.41417927","0.49157316]","0.51488911","0.53589641","0.57411761","0.58655504]","0.58930554","0.66379465","0.67883553","0.6852195","0.69440016","0.69975836]","0.72032449","0.80739129","0.87811744]]","0.90340192","0.910000","0.920000","0.930000","0.94459476","01","01]","01]]","02","02]","04","0d","1","1)","1)*k_l。因此，cnns中滤波器的数量通常比mlps中隐单元的数量小很多，通常是基于特征映射的尺寸（输入图像的尺寸和滤波器的形状）。","1).","1);","1)个特征映射和m*n个像素点（例如，位置数乘以特征映射数），然后第l层有k(l)个滤波器，尺寸为mn。那么计算一个特征映射（在(m","1)的计算量。然后总共要计算k_l次。如果不是所有的特征只与前一层的所有特征相连，那么事情就变得更加复杂啦。","1,","1.0","1.14374817e","1.40386939e","1.46755891e","1.86260211e","1.98101489e","1/fan","12","12)","12),","12,","15500,with","16400,with","17800,with","1d","1xcx1xaxb","1xn)","1层中2*2的感受野计算而言（相同颜色区域）。注意，感受野包含了所有的4个输入特征映射。w_0，w_1，h_0，h_1因此都是3维权值张量。第一个维度指定输入特征映射，剩下两个表示参考坐标。","1层包含4个特征映射，第m层包含2个特征映射（h_0和h_1）。h_0和h_1中红蓝色区域的像素（输出值）由第m","1层包含k(l","1层特征映射的数目，滤波器高度，滤波器宽度]。","1层的l个特征映射的(i,j)参考坐标的连接权值。","2","2)","2)):","2).reshape(1,","2).swapaxes(1,","2);","2,","2.04452250e","2.73875932e","20,","24)","24/2)","256.","2600k","28","28)","28))","28),","28,","285上，我们获得了如下：","2d","3);","3,","3.02332573e","3.13424178e","3.40ghz上，我们使用floatx=float32，获得如下的输出：","3.45560727e","3.96767474e","30).","30,","32.52m","380.28m","3d","4","4)","4),","4,","4.17022005e","4.17304802e","4.19194514e","4.卷积神经网络","40),","40,","46.76m","480上，获得如下：","4d","5)","5),","5+1","5+1)","5+1,","5,","5.38816734e","5.58689828e","50","516)","5，这是本教程需要着重讲解的。","6.70467510e","6.85219500e","6.92322616e","639,","639x516","7.20324493e","8)","8.00744569e","8.76389152e","8.78117436e","8/2)","800)","9","9)","9,","9.23385948e","9.68261576e",":",":,",":]",":])",":param",":type","=","='b')","='w')","==","=\\n","=\\n',",">","[","[[","[index],","[int]","[self.w,","]","__init__(self,","``dimshuffle``","activ","activation=t.tanh","actual","add","alloc","allow","along","appli","application,","around","array),","assert","automat","ax1xb","axb","axbxc","b","b.dimshuffle('x',","b_shp","b_valu","batch","batch_size:","batch_size]","batch_size],","batch的大小，输入特征映射的数目，图像高度，图像宽度]。","be","below)的特征映射的集合。","best","bia","bias","borrow=tru","borrow=true)","broadcast","broadcastable,","broadcastable;","build","bx1xa","class","classifi","clock","code","column","compat","complete.","compon","comput","connect","connected,","construct","conv","conv.conv2d(","conv.conv2d(input,","conv_out","convolut","convolutional_mlp.pi","convolv","convop","cost","cost,","cpu","creat","cxaxb","data","def","default","descent","dimens","dimension:","dimensions.","dimshuffle('x')","dimshuffle('x',","dimshuffle(0,","dimshuffle(1,","dimshuffle(2,","downsampl","downsample.max_pool_2d(","downsample.max_pool_2d(input,","ds=poolsize,","dtype='float64')","dtype=input.dtype),","dtype=theano.config.floatx","dtype=theano.config.floatx)","dure","each","etc.","examples:","express","f","f(img_)","f(invals)[0,","f(invals)[1,","factor","false:","false:'","fan_in","fan_out","fan_out))","featur","few","file","filter","filter_shape,","filter_shape:","filter_shape=(nkerns[0],","filter_shape=(nkerns[1],","filter_shape=filter_shape,","filter_shape[1]","filtered_img","filters,","filters=self.w,","first","fit","from:","fulli","function","function,","further","gener","givens={","grad","grad_i","grad_i)","gradient","grads)","grads[i])","gtx","height","height,","here,","hidden","hiddenlay","hiddenlayer(","high=.5,","high=1.0","high=w_bound,","i.e.","i7","ident","ignore_bord","ignore_border=false)","ignore_border=tru","ignore_border=true)","imag","image)","image.open(open('/images/3wolfmoon.jpg'))","image_shap","image_shape,","image_shape:","image_shape=(batch_size,","image_shape=image_shap","image_shape[1]","images).","images.","img","img.swapaxes(0,","img_","import","important:","in,","in]的均匀分布中随机取样，fan","index","individually,","initi","input","input,","input:","input=conv_out,","input=input,","input=layer0.output,","input=layer0_input,","input=layer2_input,","insert","instanti","intern","inval","invals[0,","invals[1,","invert","in是一个隐单元的输入数。对mlp，它是下一层单元的数目。对cnns，我不得不需要去考虑到输入特征映射的数目和感受野的大小。","in是由感受野和输入特征映射数决定的。","iter","label","layer","layer0","layer0.param","layer0_input","layer1","layer1.output.flatten(2)","layer1.param","layer2","layer2.param","layer2_input","layer3","layer3.errors(y),","layer3.negative_log_likelihood(y)","layer3.param","layer:","learn","learning.","learning_r","lenetconvpoollay","lenetconvpoollayer(","lenetconvpoollayer(object):","lenet）","length","list","logisticregression(input=layer2.output,","loop","low=","lower","m)(n","made","make","mani","manual","map","maps,","map）。梯度下降算法在小改动后可以学习这种共享参数。这个被共享权值的梯度就是被共享的参数的梯度的简单求和。","matric","matrix","maxpool","maxpool_shap","maxpool_shape,","mini","minim","mistak","mnist","model","model'","more","n)mn*k_(l","n)个像素位置应用每个mn大小的滤波器）将消耗(m","n_filters,","n_in=500,","n_in=nkerns[1]","n_out=10)","n_out=500,","name","net","network","neural","new","nkerns[0],","nkerns[1]","nkerns[1],","nll","num","num_pixels)","number","numpi","numpy.asarray(","numpy.asarray(img,","numpy.prod(filter_shape[1:])","numpy.prod(filter_shape[2:])","numpy.prod(poolsize))","numpy.random.randomst","numpy.random.randomstate(1).rand(3,","numpy.random.randomstate(23455)","numpy.sqrt(3","numpy.sqrt(6.","numpy.zeros((filter_shape[0],),","nx1)","obtain","on","open","oper","optim","origin","out","output","output)","output[0,","output[1,","over","pairs.","param","param_i","param_i,","paramet","parameter.","parameters,","parameters.","params)","particular","per","perform","pil","plot","pool","pool_out","pooled_out","poolsize:","poolsize=(2,","power","present","print","produc","put","pylab","pylab.axis('off');","pylab.gray();","pylab.imshow(filtered_img[0,","pylab.imshow(img)","pylab.show()","pylab.subplot(1,","ran","random","raster","recal","receiv","reduc","reshap","result","rng","rng,","rng.uniform(","rng.uniform(low=","rng:","row","rule","score","second","self.b","self.b.dimshuffle('x',","self.b]","self.input","self.output","self.param","self.w","set","sgd","shape","share","shuffl","sigmoid","simpli","size","size,","size=b_shp),","size=filter_shape),","size=w_shp),","stopping代码取出了。因为它和mlp中是一样的。有兴趣的读者，可以阅读教程开头的源代码。","store","symbol","t.dtensor4('input')","t.grad(cost,","t.ivector('y')","t.matrix('x')","t.nnet.sigmoid(conv_out","t.tanh(pooled_out","t.tensor4(name='input')","take","tediou","tensor","tensor)","tensor,","tensor;","term.","test","test_model","test_set_x[index","test_set_y[index","theano","theano.function(","theano.function([input],","theano.function([input],pool_out)","theano.shared(","theano.shared(numpy.asarray(","theano.shared(value=b_values,","theano.tensor.dtensor4","theano.tensor.nnet","theano.tensor.sign","therefor","third","thu","tool","train","train_model","train_set_x[index","train_set_y[index","true:","true:'","tupl","unit","updat","updates=updates,","us","usual","valid","valid_set_x[index","valid_set_y[index","validate_model","valu","values.","variabl","vector","w","w)","w_bound","w_bound,","w_shp","weight","weights.","width","width\"","width)","without","word","work","x","x.reshape((batch_size,","x:","y","y:","zero.","zip(params,","}","一个特征映射是由一个函数在整个图像的某一子区域重复使用来获得的，换句话说，就是通过线性滤波器来卷积输入图像，加上偏置后，再输入到非线性函数。如果我们定义第k个特征映射是为h_k，滤波器有w_k，b_k定义，则特征映射可以被表现为如下形式：","上图显示了一个cnn的两层，第m","下面的theano代码实现了类似图1的卷积层。输入包括大小为120160的3个特征映射（1一个rgb彩图）。我们使用2个大小为99感受野的卷积滤波器。","与权值矩阵w相关的4维张量，尺寸包括如下：[m层特征映射的数目，m","与输入的minibatch有关的4维张量，尺寸包括如下：[mini","为了形成数据更丰富的表达，隐藏层有多层特征映射组成｛h_k,k=0..k｝。一个隐层的权值矩阵w可以用一个4维张量来表示，包含了每个目标特征映射、源目标特征映射、源水平位置，源垂直位置的元素。偏置b则是一个向量，纪录每个目标特征映射的元素。我们可以用如下的图来表示：","从上图的实现来看，较低层的操作都是建立在4维张量上的。然后它需要被压缩为2维的特征映射，来适应之后的mlp实现。","假如你想要在新的数据集上采用这个模型，下面的一些小技巧可能能让你获得更好的结果：","假设第l","其中对于2维卷积有如下定义：","动机","卷积操作","卷积操作是theano实现卷积层的主要消耗。卷积操作通过theano.tensor.signal.conv2d，它包括两个输入符号：","卷积神经网络另一个重大的概念是最大池化，一个非线性的降采样形式。最大池化就是将输入图像分割为一系列不重叠的矩阵，然后对每个子区域，输出最大值。","卷积神经网络是多层感知机的生物灵感变种。从hubel和wiesel先前对猫的视觉皮层的研究，我们知道视皮层中含有细胞的复杂分布。这些细胞只对小的视觉子区域敏感，称为感受野。这些子区域平铺来覆盖整个视场。这些细胞表现为输入图像空间的局部滤波器，非常适合检测自然图像中的强空间局部相关性。","卷积神经网络的训练相比与标准的mlp是相当困难的，因为它添加了更多的超参数。当我们在应用学习率和正则化的规则下，下面的方法也需要在优化cnns被考虑：","卷积神经网络通过在相邻层的神经元之间实施局部连接模式来检测局部空间相关性。换句话说就是，第m层的隐藏单元的输入来自第m－1层单元的子集，单元拥有空间上的感受野连接。我们可以通过如下的图来表示：","卷积神经网络（convolut","可以观察到不同实验下验证误差和测试误差的不同，这是由不同硬件的取整结构不同造成的。可以忽略。","因为特征映射的尺寸会随着深度的增加而减小，靠近输入层的层将趋向于有更少的滤波器，而更高的层有更多的滤波器。事实上，为了平衡每一层的计算量，特征数和图像位置数的乘积在层的传递过程中都是基本一致的。为了保护输入信息，我们需要保证总的激活数量（特征映射数*像素位置数）在层间传递的时候是至于减少（当然我们在做监督学习的时候当然是希望它减小的）。特征映射的数量直接控制整个容量，同时它依赖于可用样例的数目和任务的复杂度。","因此这个技巧事实上是去寻找正确等级的“粒度”，以便对给定的数据集去形成合适范围内的抽象。","在geforc","在一台core","在这一节假设读者已经阅读了之前的两章使用逻辑回归进行mnist分类和多层感知机。","复制单元使得特征可以无视其在视觉野中的位置而被检测到。此外，权值共享增加了学习效率，减少了需要被学习的自由参数的数目。这样的设定，使得cnns在视觉问题上有更好的泛化性。","如果你想要在gpu上跑样例，你需要一个好的gpu。至少是1gb显存的。当显示器连接在显卡上时，你可能需要更大的显存。","对标准mlp而言，第l层如果有kl个神经元，那计算量只有k(k","将产生这样的输出：","将会产生下面的输出：","将它组合起来","当gpu连接在显示器上时，每次gpu的调用会有几秒钟的限制。这是必须的，因为gpus不能在计算的时候，同时被用于显示器。如果没有这个限制，屏幕会长时间不动，就像死机一样。这个例子会说中中等质量的gpus。当gpu不连接显示器时，没有这个时间限制。你可以通过降低batch的大小来出来延时问题。","当选择每层滤波器数量的时候，需要记住计算单卷积层的活性比传统的mlp会更加昂贵。","想象一下，第m－1层是输入视网膜。在上图总，第m层的单元有宽度为3的对输入视网膜的感受野，因此它们只连接视网膜层中3个相邻的神经元。第m层的单元与下一层有相似的连接。我们说，感受野连接于下一层的数目也是3，但是感受野连接于输入的则更大（5）。每个单元对视网膜上于自己感受野相异的地方都是不会有响应的。这个结构保证了被学习的滤波器对一个空间局部输入图案有最强的响应。","我们把进行实际训练和earli","技巧","把它们都放一起就是，w_k_l(i,j)，表示第m层的第k个特征映射，在第m","提供了一种平移不变性。想象一下，一个最大池化层级联在一个卷积层。这里有8个方向，一个输入图像可以通过单个像素平移。假如说最大池化是22的区域，8个可能的方向中有3个可能会产生相同的输出（3/8）。当池化层为33时，概率增加到5/8。","整个模型","最后，我们通过使用在使用逻辑回归进行mnist分类中定义的logisticregression类，和多层感知机中的hiddenlayer类来实例化我们的网络：","最大池化","最大池化在theano中通过theano.tensor.signal.downsample.max_pool_2d。这个函数被设计为可以接受n维的张量和一个缩减因子，然后对张量的最后2维执行最大池化。","最大池化在视觉中是有用的，由如下2个原因：","最大池化的尺寸","本节的所有代码，可以在这里下载，还有3狼月亮图。","权值共享","模型比较低的层是由卷积和最大池化层的交替来构建的，较高的层则是全连接的传统mlp（隐藏层＋逻辑回归）。第一个全连接层的输入是前一层(the","此外，两类基础细胞类型被定义：简单细胞使用它们的感受野，最大限度的响应特定的棱状图案。复杂细胞有更大的感受野，可以局部不变的确定图案精确位置。动物视觉皮层是现存的最强大的视觉处理系统，很显然，我们需要去模仿它的行为。因此，许多类神经模型在文献中出现，包括neocognitron，hmax和lenet","此外，在cnns中，每一只滤波器共享同一组权值，这样该滤波器就可以形成一个特征映射（feaatur","注意我们使用了与mlp相同得权值初始化方案。权值在一个范围为[","注意，一个随机的初始化滤波器表现得很像一个特征检测器。","注意，与其他theano代码相比，max_pool_2d操作有点特殊。它需要缩减因子ds(长度维2的tuple，班汉图像长度和宽度的缩减因子)在图构建的时候被告知。这在未来可能会发生改变。","注意，当初始化权重值的时候，fan","滤波器的尺寸","滤波器的数量","然而，就像上面展示的，将这些层叠加起来去形成（非线性）滤波器，就可以变得越来越全局化。举例而言，第m＋1层的单元可以编码一个宽度为5的非线性特征。","现在我们已经知道了在theano中实现lenet的所有方法。那我们先实现一个lenetconvpoollayer类，它是{卷积＋最大池化}层。","白化(whitening)数据（例如，使用主成分分析）","稀疏性、卷积层和最大池化时lenet系列模型的核心。而准确的模型细节有很大的差异，下图显示了一个lenet模型。","稀疏连接","细节和注解","经典的是22，或者没有最大池化。非常大的图可以在较低的层使用44的池化。但是需要记住的是，池化在通过16个因子减少信号维度的同时，也可能导致信号细节的大量丢失。","衰减每次迭代的学习速率。","让我们让它变得有趣点...","超参的选择","运行代码","通常在每个文献中滤波器的尺寸都有很大的不同，它常常是基于数据库的。mnist在第一层的最好结果是55层滤波器。当自然图像（每维有几百个像素）趋向于使用更大的滤波器，例如1212，15*15。","通过消除非最大值，减少了更上层的计算量"],"5_Denoising_Autoencoders_降噪自动编码.html":["\"\"\"","\"\"\"comput","\"\"\"denois","#","############","######################","%","%d,","%f","'","'train","(","('train","(1","(1)","(2)","(3)","(4)","(cost,","(da)","(end_tim","(for","(index","(n_hidden","(param,","(pretraining_tim","(the",")","),","):","*","**","+","..","/","0","0s","1","1)","1)))","1,","10),","1s","1之间）。","2","28),","28,","30))","4","4*sqrt(6./(n_hidden+n_visible))th","4*sqrt(6./(n_visible+n_hidden))","4.*sqrt(6./(n_hidden+n_visible))","4.*sqrt(6./(n_visible+n_hidden))","5.降噪自动编码","60.))",":",":param",":paran",":type","=","==","[","[]","[index],","[mini]batch","[self.w,","[x_k","\\log","\\log(","\\tilde{x}","]","__init__(","__init__(self,","``1","``corruption_level``","``coruption_level``","`b_prime`","`da`","`initial_w`","`rng`","`w_prime`","afterward","al.,2008","alloc","alway","anoth","architecture;","argument","array","asarray","auto","autoencod","autoencoders)","autoencoders)是经典自动编码机的扩展。它在vincent08中作为深度网络的一个构建块被介绍。我们通过简短的自动编码机来开始本教程。","averag","axis=1","axis=1)","b","b'","b')","b)","b_prime","back","base","batch_index","batch_size:","batch_size]","batch_size]})","be","belong","between","bhid","bhid:","bhid=none,","bia","bias","bias.","boltzmann","borrow=tru","borrow=true)","build","bvi","bvis:","bvis=non","bvis=none):","c","c.append(train_da(batch_index))","class","code","compression)，它不可能对所有的x有好的压缩。优化可以使得训练样本有好的压缩，同时也希望对别的输入有好的压缩，但是不是对于任意输入。这里有一个对自动编码机的概括定义：它对于与训练样本有相似分布的测试样本有较低的重建误差，但对于随机的输入会有较高的重构误差。","comput","computations,","construct","constructor","convert","correspond","corrupt","corruption_level)","corruption_level):","corruption_level,","corruption_level=0.,","corruption_level``","cost","cost,","creat","cross","d","d'","da","da(","da(numpy_rng=rng,","da(object):","da.get_cost_updates(","da.get_cost_updates(corruption_level=0.2,","data","datapoint;","deal","def","denois","descript","destroy","details.","dimens","drawn","dtype","dtype=theano.config.floatx","dtype=theano.config.floatx)","dtype=theano.config.floatx),","each","element","else:","encod","encoders，在hinton06中被用以构建一个深度自动编码机)。","end_tim","entri","entropi","entropy)可以被表示如下：","epoch","epoch,","equat","error.","et","exampl","examples,","expect","filters)，所以我们强烈建议读者去了解它。当然，也在pil(python","first","function","gener","generator;","get","get_corrupted_input(self,","get_cost_updates(self,","get_hidden_values(self,","get_reconstructed_input(self,","give","given","given,","givens={","go","gparam","gparam)","gparam))","gparams)","gparams):","gpu","gradient","happens,","hidden","hidden):","high=4","imag","image.fromarray(tile_raster_images(x=da.w.get_value(borrow=true).t,","image.save('filters_corruption_30.png')","img_shape=(28,","import","index","initi","initial_w","input","input):","input,","input:","input=none,","input=x,","int","keep","l","l(x,z)","latent","layer","layer.","learning_r","learning_rate):","learning_rate=learning_r","learning_rate=learning_rate)","level.","library)的帮助下，下面行的代码将把滤波器保存为图像：","list","low=","machines，在后面的章节中讨论），还有降噪自动编码机，在后面讨论。","map","math::","matrix","mean","minibatch","minibatch.","minibatches,","minutes'","mlp","mlp.","model","more","multipl","n=1,","n_hidden","n_hidden)","n_hidden)),","n_hidden,","n_hidden:","n_hidden=500","n_hidden=500)","n_hidden=500,","n_visibl","n_visible)),","n_visible,","n_visible:","n_visible=28","n_visible=784,","name='b',","name='bhid')","name='bvis')","name='w')","name='w',","need","none","none:","note","now","number","numpy.asarray(","numpy.asarray(numpy_rng.uniform(","numpy.mean(c)","numpy.random.randomst","numpy.random.randomstate(123)","numpy.sqrt(6.","numpy.zeros(n_visible,","numpy_rng,","numpy_rng.uniform(","numpy_rng:","numpy_rng=rng,","on","out","output","over","p=1","param","param,","paramet","partial","per","pleas","point","present","print","probabl","produc","project","q_d(\\tilde{x}|x)","q_d.","random","randomli","randomstream","randomstreams(numpy_rng.randint(2","randomstreams(rng.randint(2","raster","receiv","reconstruct","refer","repres","reproject","respect","result","return","rng","row","runabl","s(w","s(w'","same","sampl","sda","second","seed","select","self,","self.b","self.b)","self.b,","self.b_prim","self.b_prime)","self.b_prime]","self.get_corrupted_input(self.x,","self.get_hidden_values(","self.get_hidden_values(tilde_x)","self.get_reconstructed_input(y)","self.n_hidden","self.n_vis","self.param","self.params)","self.theano_rng","self.theano_rng.binomial(size=input.shape,","self.w","self.w)","self.w.t","self.w_prim","self.w_prime)","self.x","self.x)","set","sever","shape(size)","share","size","size=(n_visible,","space","space.","specifi","stage","standalon","start_tim","start_time)","step","stochast","stopping的随机梯度下降是与参数的l2正则化相似的。为了去实现对连续性输入有更好的重建，包含非线性隐藏单元的单隐藏层的自动编码机需要非常小的权值在第一（编码）层，以使得将非线性隐藏单元进入他们的线性区域（参考sigmoid函数），然后在第二（解码）层有更大的权值。对于二进制输入，非常大的权值也需要彻底的最小化重构误差。因为隐性的或者显性的正则化将使得获得大权值的解决方案变得困难，这个最优化算法发现在训练样本中表现好的编码。这意味着，表达是利用训练集的统计规律来实现的，而不仅仅是复制输入。","subset","success","such","sum","sum_{k=1}^d","symbol","t.dmatrix(name='input')","t.grad(cost,","t.log(1","t.log(z)","t.lscalar()","t.matrix('x')","t.mean(l)","t.nnet.sigmoid(t.dot(hidden,","t.nnet.sigmoid(t.dot(input,","t.sum(self.x","theano","theano.config.floatx","theano.function(","theano.function([index],","theano.rng.binomi","theano.shared(","theano.shared(valu","theano.shared(value=initial_w,","theano.shared(value=numpy.zeros(n_hidden,","theano.tensor.shared_randomstream","theano.tensor.shared_randomstreams.randomstream","theano.tensor.tensortyp","theano_rng","theano_rng:","theano_rng=none,","theano_rng=theano_rng,","therefor","third","through","ti","tilde_x","tilde_x)","tile_shape=(10,","tile_spacing=(1,","time.clock","time.clock()","took","train","train_da","train_set_x[index","training_tim","trainng","transpos","tri","trial","uniform","unit","units)","updat","updates)","updates.append((param,","updates=updates,","us","valu","value=numpy.zeros(","variabl","vector,","version","vincent","visibl","w","w'","w:","w=none,","w_prime","weight","weights,","when,","written","x","x:","x_k)","xrange(n_train_batches):","xrange(training_epochs):","y","z","z),","z_k","z_k)]","zero","zip(self.params,","z||^2，可以被使用。假如这个输入是通过比特向量或者比特概率向量来表述，重构交叉熵([cross","{x:","}","~","一个简单的解释是，使用earli","为了了解网络学习了什么东西，我们将会描述出滤波器（通过权值矩阵来定义）。记住，事实上它没有提供完整的情况，因为我们忽略了偏置，并且画出的权值被乘以了常数（权值被转换到了0","从自动编码机的类转换为降噪自动编码机，我们需要去增加一个随机误差步骤去应用到输入中。这个输入可以通过许多方法来污染，但在这个教程中，我们将支持以输入的随机性来腐化原始数据，使它趋向于0。代码如下：","假设除了最小化重构误差外没有别的的限制，一个有n个输入和n（或者更大）维编码学习能力的自动编码机定义函数，将倾向于去映射出它的输入副本。这种自动编码机将无法从训练样本的分布中区分任何测试样例。（无效编码机：输出与输入完全相同）。","去画出我们的滤波器，我们需要title_raster_images(看plot","因为y是视为x的有损压缩(lossi","在bengio09的第4.6节中，有自动编码机的简介。一个自动编码机，由d维的[0,1]之间的输入向量x，通过第一层映射（使用一个编码器）来获得隐藏的d‘维度的[0,1]的输出表达y。通过如下的决定性映射：","在vincent08中，随机差错进程随机的设定部分（也可以是一半）输入为0。因此降噪自动编码机尝试去从未被污染的值中去预测被污染的（丢失）的值，通过随机的选择丢失模式下的仔鸡。注意如何能预测从剩下的变量的任意子集是一个充分条件，去完全捕获一组变量之间的联合分布（这是gibbs采样工作）。","在层叠自动编码机类(层叠自动编码机)中，da类中的权值不得不和相应的sigmoid层共享。因为这个原因，da的构建也将theano变量指向了共享参数。假如这些参数被设置为none，新的参数会被构建。","将它组合起来","当我们不使用任何噪声的时候，获得的滤波器如下：","我们希望这样，这个编码y是一个分布式表达，可以捕捉数据中主要因子变化的位置。这就类似与主成分凸出，金额也捕捉数据中主要因子的变化。事实上，假如这里有一个线性隐藏层（这个编码），并且平均平方误差准则被用以训练这个网络，然后这k个隐藏单元学习去凸出这个输入，在该数据的前k个主成分的范围中。假如这个隐藏层是非线性的，这个自动编码机表现的是与pca不同的，它有着捕捉输入分布的多模态方面的能力。从pca开始变得更加重要，当我们考虑堆叠混合编码机(stack","我们希望通过theano中来实现自动编码机，作为一个类的形式，它可以在未来去构建一个层叠自动编码机。这个第一步是去创建自动编码机的共享变量参数（w，b，b‘）。","我们现在可以定义一个函数来实现重复的更新参数w，b，b‘，直到这个重构消耗大约是最小的。","最后的降噪自动编码机类就变成了这样：","有30%噪声的时候，滤波器如下：","本节所有的代码都可用在这里下载。","注意，我们将input作为一个参数来传递给自动编码机。我们可以串联自动编码机来实现深度网络：第k层的输出(y)可以变成第k+1层的输入。","然后我们通过这些函数可以计算一个随机梯度下降步骤的cost和更新。","现在去构建一个da类和训练它变得很简单了。","现在，我们可以预计去重构信号的潜在表达的计算量。","自动编码机","让人惊讶地，在bengio07的实验指出，在实践中，当通过随机梯度下降训练时，有比输入更多的隐藏单元（称为超完备）的非线性的自动编码机可以产生有效的表达。（这里，有效指的是编码作为网络的输入获得了更低的分类误差）。","运行这个代码","这一节假设读者一节阅读了使用逻辑回归进行mnist分类，多层感知机。如果你需要在gpu上跑代码，你也需要阅读gpu。","这个降噪自动编码机是自动编码机的随机版本。直观上讲，一个降噪自动编码机做2件事情：尝试对输入进行编码（保护输入信息），然后尝试去消除输入中的随机差错产生的影响。后者可以通过捕捉输入间的统计相关性来实现。降噪自动编码机可以从不到的角度来理解（流行学习角度，随机操作角度，自下而上的信息论角度，自上而下的生成模型角度），所有的这些在vincent08中被解释。在bengio09的第7.2节有自动编码机的综述。","这里s是一个非线性的函数，例如sigmoid。这个潜在的表达y，或者码，被映射回一个重构机z，来重构x。这个映射通过下面的简单转换来实现：","这里有其他方法，使得一个有比输入有更多隐藏单元的自动编码机，去避免只学习它本身，而是在输入的隐藏表达中捕捉到有用的东西。一个是添加稀疏性（迫使许多隐单元是0或者接近0）。稀疏性已经被很成功的发挥了ranzato07lee08。另一个是，在输入到重建过程中，增加从输入到重建的转换中的随机性。这个技术在受限玻尔兹曼机中被使用（restrict","重建误差可以通过许多方法来度量，基于输入的分布假设。这个传统的平方误差是l(x,z)=||x","降噪自动编码机","降噪自动编码机(denois","降噪自动编码机的思想是很简单饿。为了迫使隐藏层去发现更加鲁棒性的特征，避免它只是去简单的学习定义，我们训练自动编码机去重建被破坏的输入版本的数据。","（这里撇号不代表矩阵转置）当y被给定时，z被看着是对x的预测。可选的，这个权重矩阵w‘的逆映射可用被约束为正向映射的转置：，这被称为捆绑权重。这个模型的所有参数（w，b，b‘，或者不使用捆绑权重w’）通过优化最小平均重构误差来实现训练。"],"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":["\"\"\"","\"\"\"stack","#","##","#########################","%","%.2fm'","%d,","%i,","'","'''","'''gener","'...","'pre","('the","((end_tim","(i,","(index","(param,","(sda)","(sda)）","(test_set_x,","(train_set_x,","(valid_set_x,",")","):","*","**","+",".2,",".3]","/","/=","0","0.1]","0:","1)","1000,","1000],","1]","1],","1].output","1].output,","1d","1层时）如何转换你的数据。换句话说，你通过训练你的第一个da层来开始。一旦它被训练，你就可以为每一个数据节点计算隐单元的值然后将它们储存为一个新的数据集，以便你在第2层中训练da。一旦你训练完第2层的da，你以相同的方式计算第三层的数据。现在你可以明白，在这个时候，这个das被分开训练了，它们仅仅提供（一对一的）对输入的非线性转换。一旦所有的das被训练，你就可以开始微调整个模型了。","2.66ghz","28,","30))","500],","6.层叠降噪自动编码机","60.))",":param",":type","=","==",">",">>","@","[","[.1,","[]","[index],","[int]","[mini]batch","[test_score_i(i)","[valid_score_i(i)","]","],","__init__(","`fn`","`i+1`.","`i`","`index`","`rng`","`test`","`train`","`train`,","`valid`,","`validate`","activ","activation=t.nnet.sigmoid)","add","alloc","amount","append","arguabl","assert","auto","autoencod","autoencoder，sda）是层叠自动编码机（bengio07）的一个扩展，在vincent08中被介绍。","base","batch","batch,","batch_begin","batch_end","batch_end]","batch_index","batch_siz","batch_size):","batch_size,","batch_size:","batch_size=batch_size)","becom","begin","below","bhid=sigmoid_layer.b)","bias","build","build_finetune_functions(self,","c","c.append(pretraining_fns[i](index=batch_index,","call","class","code","compil","comput","construct","contain","correspond","corrupt","corruption=corruption_levels[i],","corruption_level","corruption_levels:","corruption_levels=[0.1,","cost","cost,","cpu，gotoblas下得出。","creat","da","da(numpy_rng=numpy_rng,","da,","da.get_cost_updates(corruption_level,","da_lay","das.","data","datapoint","datapoints,","datasets,","datasets:","datasets;","datasets[0]","datasets[1]","datasets[2]","dealt","declar","def","default=0.1)","default=0.2),","defin","denois","dimens","draw","drawn","dure","e5430","each","else:","encod","end","end_tim","entir","epoch","epoch),","error","file","fine","finetun","finetunin","finetuning,","first","float","fn","form","function","functions'","functions,","gener","generator;","get","given","givens={","go","gparam","gparams)","gradient","hidden","hidden_layers_sizes=[1000,","hidden_layers_sizes=[500,","hidden_layers_sizes[i","hiddenlayer(rng=numpy_rng,","imag","implement","index","index,","index.","indexes.","initi","input","input=layer_input,","input=self.sigmoid_layers[","input_s","inputs=[","inputs=[index],","int","intermedi","iterate,","label","last","layer","layer_input","layers.","learn","learning_r","learning_rate)","learning_rate):","learning_rate:","len(hidden_layers_sizes)","level）在第一层被设为0.1，第二层被设为0.2，第三层被设为0.3。预训练的学习速率为0.001，微调学习速率为0.1。预训练花了585.01分钟，平均每层13分钟。微调在36次迭代，444.2分钟后完成。平均每层迭代12.34分钟。最后的验证得分为1.39%，测试得分为1.3%。所有的结果都是在intel","likelihood","list","log","logist","logisticregression(","lr=pretrain_lr))","made","minibatch","mlp","mlp,","model","model'","n_hidden=hidden_layers_sizes[i],","n_in","n_in=hidden_layers_sizes[","n_in=input_size,","n_ins:","n_ins=28","n_ins=784,","n_layers_sizes:","n_out=hidden_layers_sizes[i],","n_out=n_out","n_outs:","n_outs=10","n_outs=10,","n_test_batch","n_valid_batch","n_visible=input_size,","name='test'","name='train'","name='valid'","need","neg","network","none","normal","note","now","number","numpi","numpy.mean(c)","numpy.random.randomst","numpy.random.randomstate(89677)","numpy_rng","numpy_rng,","numpy_rng:","numpy_rng=numpy_rng,","obtain","on","order,","os.path.split(__file__)[1]","output","output.","outputs=cost,","outputs=self.finetune_cost,","pair","pairs,","param","param,","paramet","phase","philosoph","point","pre","present","pretrain","pretrain_fn","pretrain_fns.append(fn)","pretraining,","pretraining_fn","pretraining_functions(self,","print","question...","ran","random","randomstreams(numpy_rng.randint(2","raster","rate","repres","requir","respect","return","same","scan","sda","sda(","sda(object):","sda,","sda.pretraining_functions(train_set_x=train_set_x,","second","seed","self,","self.da_lay","self.da_layers.append(da_layer)","self.da_layers:","self.error","self.errors,","self.finetune_cost","self.i","self.loglay","self.loglayer.errors(self.y)","self.loglayer.negative_log_likelihood(self.y)","self.n_lay","self.param","self.params)","self.params.extend(self.loglayer.params)","self.params.extend(sigmoid_layer.params)","self.sigmoid_lay","self.sigmoid_layers.append(sigmoid_layer)","self.sigmoid_layers[","self.sigmoid_layers将会储存多层感知机的sigmoid层，self.da_layers将会储存连接多层感知机层的降噪自动编码机。","self.x","self.x:","self.y:","set","set,","sever","share","sigmoid","sigmoid_lay","size","size,","stack","stackeddaa","stage","start_tim","start_time)","step","support","symbol","sys.stderr,","t.grad(self.finetune_cost,","t.ivector('y')","t.lscalar('index')","t.matrix('x')","t.scalar('corruption')","t.scalar('lr')","test","test_scor","test_score():","test_score_i","test_set_x.get_value(borrow=true).shape[0]","test_set_x[","test_set_y)","test_set_y[","theano","theano.function(","theano.param(corruption_level,","theano.param(learning_rate,","theano.tensor.shared_randomstreams.randomstream","theano.tensor.tensortyp","theano_rng","theano_rng:","theano_rng=none,","theano_rng=theano_rng,","those","three","through","time.clock()","top","train","train_fn","train_fn,","train_set_x,","train_set_x:","train_set_x[","train_set_x[batch_begin:","train_set_y)","train_set_y[","training,","trainnig","tune","tuning）。这里，我们考虑监督微调，当我们需要最小化一个监督任务的预测误差吧。为此我们现在网络的顶端添加一个逻辑回归层（使输出层的编码更加精确）。然后我们像训练多层感知器一样训练整个网络。这里，我们考虑每个自动编码的机的编码模块。这个阶段是有监督的，因为我们在训练的时候使用了目标类别（更多细节请看多层感知机）","tuning）循环和多层感知机中的非常类似，唯一的不同是我们将使用在build_funetune_functions中给定的新函数。","tuning）时需要的构建函数（train_model，validate_model，test_model函数）。","two","unit","updat","updates=updates,","us","valid","valid_score():","valid_score,","valid_score_i","valid_set_x.get_value(borrow=true).shape[0]","valid_set_x[","valid_set_y)","valid_set_y[","valu","variabl","variables,","vector","visibl","w=sigmoid_layer.w,","weight","weights.","wise","x))）和n_layers个降噪自动编码机，当然n_layers就是我们模型的深度。我们连接sigmoid函数，使得他们形成一个mlp，构建每一个自动编码机和他们对应的sigmoid层，去共享编码部分的权值矩阵和偏执","xeon","xrange(n_test_batches)]","xrange(n_train_batches):","xrange(n_valid_batches)]","xrange(pretraining_epochs):","xrange(sda.n_layers):","xrange(self.n_layers):","zip(self.params,","}","},","下一步，我们构建n_layers个sigmoid层（我们使用在多层感知机中介绍的hiddenlayer类，唯一的更改是将原本的非线性函数tanh换成了logistic函数s=1/(1+exp(","下面的几行代码去构建层叠自动编码机：","为了有能力在训练时，改变差错等级或者训练速率。我们用一个theano变量来联系它们。","以相同的方式（fashion），我们创建了一个方法用于在微调（fin","在训练这个网络时，有两个阶段，一层是预训练，之后是微调。","在这一节，我们假设读者已经了解了使用逻辑回归进行mnist分类和多层感知机。如果你需要在gpu上进行运算，你还需要了解gpu。","对于预训练阶段，我们将循环网络中的所有层。对于每一层，我们将使用编译的theano函数来实现sgd(随机梯度下降)，以实现权值优化，来见效每层的重构损失。这个函数将在训练集中被应用，并且是以pretraining_epochs中给出的固定次数的迭代。","将它组合起来","层叠自动编码机","层叠降噪自动编码机（stack","技巧","本节的所有代码可以在这里下载。","注意，这里返回的valid_score和test_score并不是theano函数，而是python函数，在整个验证集和测试集循环，以产生这些集合的损失数的list。","现在任何一个pretrain_fns[i]函数，可以将index，corruption——差错等级，lr——学习速率作为参数。注意，这些参数的名字是theano变量的名字，而不是python变量的名字（learning_rate或者corruption_level）。在使用theano时，注意这一点。","现在，我们需要在sigmoid层的上方添加逻辑层，所以我们将有一个mlp。我们将使用在使用逻辑回归进mnist分类的logisticregression类。","运行这个代码","这个微调（fine","这个教程建立在前一个降噪自动编码机之上。我们建议，对于没有自动编码机经验的人应该阅读上述章节。","这个类也提供一个方法去产生与不同层相关的降噪自动编码机的训练函数。它们以list的形式返回，第i个元素就是一个实现训练第i层的da的函数。","这在theano里面，使用之前定义的降噪自动编码机，可以轻易的被实现。我们可以将层叠降噪自动编码机看作两部分，一个是自动编码机链表，另一个是一个多层感知机。在预训练阶段，我们使用了第一部分，例如我们将模型看作一系列的自动编码机，然后分别训练每一个自动编码机。在第二阶段，我们使用第二部分。这个两个部分通过分享参数来实现连接。","这里有一个方法去提高代码的运行速度（假定你有足够的可用内存），是去计算这个网络（直到第k","降噪自动编码机可以被叠加起来形成一个深度网络，通过反馈前一层的降噪自动编码机的潜在表达（输出编码）作为当前层的输入。这个非监督的预学习结构一次只能学习一个层。每一层都被作为一个降噪自动编码机以最小化重构误差来进行训练。当前k个层被训练完了，我们可以进行k+1层的训练，因此此时我们才可以计算前一层的编码和潜在表达。当所有的层都被训练了，整个网络进行第二阶段训练，称为微调（fine","默认情况下，这个代码以块数目为1，每一层循环15次来进行预训练预训练。错差等级（corrupt"],"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":["\"\"\"","\"\"\"restrict","\"\"\"thi","#","'''","'''thi","(","(and","(batch","(n_hidden","(rbm)","(see",")","),","):","*","**","****","+","/","1]","1])","1个随机变量。","2","30))","4","4*sqrt(6./(n_hidden+n_visible))","4*sqrt(6./(n_visible+n_hidden))","6th","7.受限波尔兹曼机",":",":param","=","[","[pre_sigmoid_activation,","[pre_sigmoid_h1,","[pre_sigmoid_v1,","[self.w,","],","__init__(","`initial_w`","activ","actual","ai的第五节。在这里，我们将不使用这些等式，而是通过theano的t.grad来获取梯度。","along","architectur","asarray","axis=1)","base","basic","better","between","bia","bias","boltzmann","borrow=tru","borrow=true)","case","cd","cd,","cd.","chain","chain,","chain.","chain:","chain_end","chain_start","chain_start],","class","code","comput","consider_constant=[chain_end])","construct","constructor.","contain","convert","correspond","cost","creat","cross","dbn","dbn,","deal","decid","deep","def","default.","defin","detail","determin","dictionari","dictionary.","differ","down","downward","dtype","dtype=theano.config.floatx","dtype=theano.config.floatx)","due","else:","end","energi","energy）：","entir","entropi","floatx","free","free_energy(self,","function","function)","function.","gener","get_cost_updates(self,","gibb","gibbs_hvh(self,","gibbs_hvh表示从隐藏单元中开始gibbs采样的步骤。这个函数再实现cd和pcd更新中是非常有用的。","gibbs_vhv(self,","gibbs_vhv表示从可视单元中开始的gibbs采样的步骤。我们将可以看到这对于从rbm中采样是非常有用的。","given","good","gparam","gparam,","gpu","gradient","graph","graph.","h0_sample):","h1_mean","h1_mean,","h1_sampl","h1_sample,","h1_sample]","hbia","hbias:","hbias=none,","hid):","hidden","hidden_term","high=4","holders,","http://deeplearning.net/software/theano/library/scan.html","i)，其中","idea","implement","infer","inform","initi","initial_w","input","input:","input=none,","int64","i表示集合s中除si的n","k","k/pcd","k:","k=1):","keep","k和pcd","k的更新的象征性梯度。","k）","larger","later,","layer","layer.","layer0","learn","likeihood,pl）更加简于计算，因为它假设所有的比特都是相互独立的，因此有：","likelihood","list","low=","lr,","lr:","lr=0.1,","machin","machines）","make","matrix","mlp","model","models）","monitoring_cost","monitoring_cost,","more","n=1,","n_hidden","n_hidden)","n_hidden,","n_hidden:","n_hidden=500,","n_steps=k","n_visibl","n_visible)),","n_visible,","n_visible:","n_visible=784,","name='hbias',","name='vbias',","name='w',","need","neg","network","network;","newli","nh_means,","nh_sampl","nh_samples[","none","none,","none:","note","number","numpy.asarray(","numpy.random.randomstate(1234)","numpy.sqrt(6.","numpy_rng","numpy_rng.uniform(","numpy_rng=none,","nv_means,","nv_samples,","nv_samples[","old","on","oper","optimizations,","order","out","output","outputs_info=[none,","over","p(x)的样本可以通过运行马尔可夫链的汇聚、gibbs采样的过渡来得到。","p=h1_mean,","p=v1_mean,","param","paramet","part","pcd","pcd,","perform","persist","persistent:","persistent=none,","ph_mean,","ph_sampl","phase","place","point","posit","pre","pre_sigmoid_activ","pre_sigmoid_h1,","pre_sigmoid_nhs,","pre_sigmoid_nvs,","pre_sigmoid_nvs[","pre_sigmoid_ph,","pre_sigmoid_v1,","propag","propdown(self,","propup(self,","proxi","pseudo","put","randomstreams(numpy_rng.randint(2","rate","rbm","rbm(object):","rbms的训练是特别困难的。由于归一化函数z，我们无法在训练的时候估计对数似然函数log(p(x))。因而我们没有直接可以度量超参数优化与否的方法。","rbm的能量函数可以被定义如下：","read","reconstruct","return","right","rule","runabl","sampl","sample_h_given_v(self,","sample_v_given_h(self,","sampling,","say","scan","self,","self.free_energy(chain_end))","self.get_pseudo_likelihood_cost(updates)","self.get_reconstruction_cost(updates,","self.gibbs_hvh,","self.hbia","self.hbias,","self.input","self.n_hidden","self.n_vis","self.param","self.params):","self.params,","self.propdown(h0_sample)","self.propup(v0_sample)","self.sample_h_given_v(self.input)","self.sample_h_given_v(v0_sample)","self.sample_h_given_v(v1_sample)","self.sample_v_given_h(h0_sample)","self.sample_v_given_h(h1_sample)","self.theano_rng","self.theano_rng.binomial(size=h1_mean.shape,","self.theano_rng.binomial(size=v1_mean.shape,","self.vbia","self.vbias)","self.vbias]","self.w","self.w)","self.w.t)","share","sigmoid","sigmoid。","size","size,","size=(n_visible,","snippet","specifi","stabl","standalon","start","state","state'''","step","store","sure","symbol","t.cast(","t.dot(hid,","t.dot(v_sample,","t.dot(vis,","t.exp(wx_b)),","t.grad(cost,","t.matrix('input')","t.mean(","t.mean(self.free_energy(self.input))","t.nnet.sigmoid(pre_sigmoid_activation)]","t.sum(t.log(1","theano","theano.config.floatx","theano.scan(","theano.shared(","theano.shared(value=initial_w,","theano_rng","theano_rng.binomi","theano_rng=non","thing","through","times.","train","turn","tutori","uniform","unit","units).","updat","updates.","updates[param]","updates[persistent]","upward","us","used.","v0_sample):","v1_mean","v1_mean,","v1_sampl","v1_sample,","v1_sample]","v_sample):","value=numpy.zeros(","variabl","vbia","vbias:","vbias=none,","vbias_term","vector","versa),","vice","vis):","visibl","w","w:","w=none,","want","warning:","weight","well","work","write","wx_b","zip(gparams,","一般直觉的是，如果参数的更新是足够小相比链的混合率，那么马尔科夫链应该能够“赶上”模型的变化。","下一步就是去定义函数来构建s图。代码如下：","主循环","二进制单元rbms的自由能力为：","二进制单元的rbm","二进制单元的更新公式","代码如下：","似然估计的替代","假如persistent为none，则我们使用正相位时产生的隐藏样本来初始化gibbs链，以此实现cd。当我们已经建立了这个链的开始点的时候，我们就可以计算这个gibbs链的终点的样本，以及我们需要的去获得梯度的样本。为了获得这些，我们使用theano提供的sacn操作，我们建议读者去阅读这个链接。","其中’表示转置，b,c,w为模型的参数，b,c分别为可见层和隐含层的偏置，w为可见层与隐含层的链接权重。","其中归一化因子z被称为分割函数：","其中随机梯度为，其中theta为模型的参数。","分布，迭代的对其分量依次采样，随着采样次数的增加，随机变量[x1(n),x2(n),…,xk(n)]的概率分布将以n的几何级数的速度收敛于x的联合","包含隐藏单元的ebm","受限波尔兹曼机（rbm）","受限波尔兹曼机（restrict","同时我们受物理启发定义了自由能量（free","因为我们希望p(v)=p_train(v)（数据的真实、底层分布），所以我们使用一个训练样本来初始化马尔可夫链（例如，从一个被预计接近于p的分布，所以这个链已经开始去收敛这个最终的分布p）。","在rbm中进行采样","在使用二进制单元（v和h都属于{0,1}）的普通研究情况时，概率版的普通神经激活函数表示如下：","在很多情况下，我们无法观察到x样本的全部分布，或者我们需要引进一些没有观察到的变量，以增加模型的表达能力。因而我们考虑将模型分为2部分，一个可见部分（x的观察分布）和一个隐藏部分h，这样得到的就是包含隐含变量的ebm：","在训练中获得的负样本是可以可视化的。在训练进程中，我们知道由rbm定义的模型不断逼近真实分布，p_train(x)。负样例就可以视为训练集中的样本。显而易见的，坏的超参数将在这种方式下被丢弃。","在这一章节，我们假设读者已经阅读了使用逻辑回归进行mnist分类和多层感知机。当然，假如你要使用gpu来运行代码，你还需要阅读gpu。","在这个理论里面，每个参数在学习进程中的更新都需要运行这样几个链来趋近。毫无疑问这将耗费很大的计算量。一些新的算法已经被提出来，以有效的学习p(v,h)中的样本情况。","基于能量模型（energi","基于能量的模型可以利用使用梯度下降或随机梯度下降的方法来学习，具体而言，就是以先验（训练集）的负对数似然函数作为损失函数，就像在逻辑回归中我们定义的那样，","基于能量的模型（ebm）把我们所关心变量的各种组合和一个标量能量联系在一起。训练模型的过程就是不断改变标量能量的过程，使其能量函数的形状满足期望的形状。比如，如果一个变量组合被认为是合理的，它同时也具有较小的能量。基于能量的概率模型通过能量函数来定义概率分布：","实现","对于rbms来说，s包含了可视和隐藏单元的集合。然而，由于它们的条件独立性，可以执行块gibbs抽样。在这个设定中，可视单元被采样，同时给出隐藏单元的固定值，同样的，隐藏单元也是如此：","对比散度算法（cd","对比散度算法，是一种成功的用于求解对数似然函数关于未知参数梯度的近似的方法。它使用两个技巧来技术采样过程：","对比梯度不需要等待链的收敛。样本在k步gibbs采样后就可以获得。在实际中，k=1时就可以获得惊人的好的效果。","当t趋向于无穷时，(v(t),h(t))将越加逼近正确样本的概率分布p(v,h)。","当你已经产生了这个链，我们在链的末尾的样例获得负相位的自由能量。注意，这个chain_end是模型参数项中的一个的象征性的theano变量，当我们简单的求解t.grad的时候，这个函数将通过gibbs链来得到这个梯度。这不是我们想要的（它会搞乱我们的梯度），因此我们需要指示t.grad，chain_end是一个常量。我们通过t.grad的consider_constant来做这个事情。","我们只能通过一些采样方法（如gibbs采样）获取其近似值，其具体方法将在后文中详述。","我们可以从x的一个任意状态(比如[x1(0),x2(0),…,xk(0)])开始，利用上述条件","我们可以获得如下的一个二进制单元rbm的对数似然梯度：","我们构建一个rbm类。这个网络的参数既可以通过构造函数初始化，也可以作为参数进行传入。当rbm被用于构建一个深度网络时，这个选项——权重矩阵和隐藏层偏置与一个mlp网络的相应的s形层共享，就是非常有用的。","我们随后添加一个get_cost_update方法，目的是产生cd","持续的对比散度","持续的对比散度tieleman08使用了另外一种近似方法来从p(v,h)中采样。它建立在一个拥有持续状态的单马尔可夫链上（例如，不是对每个可视样例都重启链）。对每一次参数更新，我们通过简单的运行这个链k步来获得新的样本。然后保存链的状态以便后续的更新。","推倒公式如下：","数据的服对数似然函数梯度就有如下有趣的形式：","最后，我们增加由scan返回的更新字典（包含了随机状态的theano_rng更新规则）来获取参数更新。在pcd例子中，也需要更新包含gibbs链状态的共享变量。","本节的所有代码都可以在这里下载。","概率分布p(x)。也就是说，我们可以在未知联合概率分布的条件下对其进行采样。","此外，更加容易处理的函数可以被用于做似然估计的替代。当我们使用pcd来训练rbm的时候，可以使用伪似然估计来替代。伪似然估计（pseudo","波尔兹曼机是对数线性马尔可夫随机场（mrf）的一种特殊形式，例如这个能量函数在它的自由参数下是线性的。为了使得它们能更强力的表达复杂分布（从受限的参数设定到一个非参数设定），我们认为一些变量是不可见的（被称为隐藏）。通过拥有更多隐藏变量（也称之为隐藏单元），我们可以增加波尔兹曼机的模型容量。受限波尔兹曼机限制波尔兹曼机可视层和隐藏层的层内连接。rbm模型可以由下图描述：","注意get_cost_update作为参数被变量化为persistent。这允许我们去使用相同的代码来实现cd和pcd。为了使用pcd，persistent需要被关联到一个共享变量，它包含前一次迭代的gibbs链的状态。","滤波器的可视化跟踪","然后我们可以写成如下公式：","现在，我们可以使用这些函数来定义一个gibbs采样步骤的符号图。我们定义如下两个函数：","由n个随机变量（s=(s1,s2,...sn)）的联合分布的gibbs采样，可以通过n个采样子步骤来实现,形式如si～p(si|","由于rbm的特殊结构，可视层和隐藏层层间单元是相互独立的。利用这个特性，我们定义如下：","由模型训练的滤波器是可以可视化的。我们可以将每个单元的权值以灰度图的方式展示。滤波器应该选出数据中强的特征。对于任意的数据集，这个滤波器都是不确定的。例如，训练mnist，滤波器就表现的像“stroke”检测器，而训练自然图像的稀疏编码的时候，则像gabor滤波器。","结果","而下面的几个选项对用户是有用的。","自由能量为如下形式：","负样本的检查","这个公式的更多细节推倒，读者可以阅读这一页，或者learn","这个类还有一个函数去计算模型的自由能量，以便去计算参数的梯度。注意我们也会返回pre","这里，h(n)表示马尔可夫链中第n布的隐藏单元的集合。这意味着，h(n+1)根据概率simg(w‘v(n)+ci)来随机地被选为0/1。类似地v(n+1)也是如此。这个过程可以通过下面地图来展现：","进展跟踪","通常我们很难精确计算这个梯度，因为式中第一项涉及到可见单元与隐含单元的联合分布，由于归一化因子z(θ)的存在，该分布很难获取。","需要注意的是上述的梯度包含2个项，包括正相位和负相位。正和负的术语不指公式中的每个项的符号，而是反映其对模型所定义的概率密度的影响。第一项增加训练数据的概率（通过减少相关的自由能量），而第二项减小模型产生的样本的概率。"]},"length":8},"tokenStore":{"root":{"0":{"1":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.012720848056537103}},"]":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}},"]":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}},"2":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"]":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"4":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},".":{"0":{"1":{"9":{"3":{"6":{"6":{"9":{"6":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"4":{"9":{"9":{"5":{"3":{"4":{"6":{"docs":{},"]":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"5":{"3":{"3":{"6":{"2":{"5":{"5":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"0":{"2":{"3":{"3":{"4":{"4":{"3":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"3":{"7":{"4":{"7":{"4":{"7":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"9":{"2":{"7":{"6":{"3":{"5":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"4":{"6":{"7":{"2":{"8":{"5":{"7":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{"./":{"ref":"./","tf":0.011494252873563218}},"]":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"2":{"1":{"1":{"6":{"2":{"8":{"1":{"2":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"6":{"5":{"5":{"4":{"6":{"6":{"6":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"3":{"9":{"6":{"7":{"6":{"7":{"4":{"7":{"docs":{},"]":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"7":{"6":{"7":{"6":{"8":{"4":{"docs":{},"]":{"docs":{},"]":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"4":{"1":{"4":{"0":{"5":{"5":{"9":{"9":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"7":{"9":{"2":{"7":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"9":{"1":{"5":{"7":{"3":{"1":{"6":{"docs":{},"]":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"5":{"1":{"4":{"8":{"8":{"9":{"1":{"1":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"3":{"5":{"8":{"9":{"6":{"4":{"1":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"7":{"4":{"1":{"1":{"7":{"6":{"1":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"8":{"6":{"5":{"5":{"5":{"0":{"4":{"docs":{},"]":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"9":{"3":{"0":{"5":{"5":{"4":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"6":{"6":{"3":{"7":{"9":{"4":{"6":{"5":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"7":{"8":{"8":{"3":{"5":{"5":{"3":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"8":{"5":{"2":{"1":{"9":{"5":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"9":{"4":{"4":{"0":{"0":{"1":{"6":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"9":{"7":{"5":{"8":{"3":{"6":{"docs":{},"]":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"7":{"2":{"0":{"3":{"2":{"4":{"4":{"9":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"8":{"0":{"7":{"3":{"9":{"1":{"2":{"9":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"7":{"8":{"1":{"1":{"7":{"4":{"4":{"docs":{},"]":{"docs":{},"]":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"9":{"0":{"3":{"4":{"0":{"1":{"9":{"2":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"0":{"0":{"0":{"0":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"2":{"0":{"0":{"0":{"0":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"3":{"0":{"0":{"0":{"0":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"4":{"4":{"5":{"9":{"4":{"7":{"6":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"9":{"5":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}},"docs":{}},"docs":{}},"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}},"s":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.012014134275618375}}},"d":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},":":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}}},"1":{"0":{"0":{"0":{"0":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}},"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}},"]":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}},"docs":{}},"docs":{},")":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}},"2":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}},"5":{"5":{"0":{"0":{"docs":{},",":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"6":{"4":{"0":{"0":{"docs":{},",":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"7":{"8":{"0":{"0":{"docs":{},",":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0037019898195279964},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.003949967083607637}},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.004901960784313725},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.005552984729291994},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.004415011037527594},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.006564551422319475}},"*":{"docs":{},"k":{"docs":{},"_":{"docs":{},"l":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"c":{"docs":{},"n":{"docs":{},"n":{"docs":{},"s":{"docs":{},"中":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"通":{"docs":{},"常":{"docs":{},"比":{"docs":{},"m":{"docs":{},"l":{"docs":{},"p":{"docs":{},"s":{"docs":{},"中":{"docs":{},"隐":{"docs":{},"单":{"docs":{},"元":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"小":{"docs":{},"很":{"docs":{},"多":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"是":{"docs":{},"基":{"docs":{},"于":{"docs":{},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"的":{"docs":{},"尺":{"docs":{},"寸":{"docs":{},"（":{"docs":{},"输":{"docs":{},"入":{"docs":{},"图":{"docs":{},"像":{"docs":{},"的":{"docs":{},"尺":{"docs":{},"寸":{"docs":{},"和":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"的":{"docs":{},"形":{"docs":{},"状":{"docs":{},"）":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},";":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"个":{"docs":{},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"和":{"docs":{},"m":{"docs":{},"*":{"docs":{},"n":{"docs":{},"个":{"docs":{},"像":{"docs":{},"素":{"docs":{},"点":{"docs":{},"（":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"位":{"docs":{},"置":{"docs":{},"数":{"docs":{},"乘":{"docs":{},"以":{"docs":{},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"数":{"docs":{},"）":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"第":{"docs":{},"l":{"docs":{},"层":{"docs":{},"有":{"docs":{},"k":{"docs":{},"(":{"docs":{},"l":{"docs":{},")":{"docs":{},"个":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"，":{"docs":{},"尺":{"docs":{},"寸":{"docs":{},"为":{"docs":{},"m":{"docs":{},"n":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"计":{"docs":{},"算":{"docs":{},"一":{"docs":{},"个":{"docs":{},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"（":{"docs":{},"在":{"docs":{},"(":{"docs":{},"m":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"计":{"docs":{},"算":{"docs":{},"量":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"总":{"docs":{},"共":{"docs":{},"要":{"docs":{},"计":{"docs":{},"算":{"docs":{},"k":{"docs":{},"_":{"docs":{},"l":{"docs":{},"次":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"是":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"特":{"docs":{},"征":{"docs":{},"只":{"docs":{},"与":{"docs":{},"前":{"docs":{},"一":{"docs":{},"层":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"特":{"docs":{},"征":{"docs":{},"相":{"docs":{},"连":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"事":{"docs":{},"情":{"docs":{},"就":{"docs":{},"变":{"docs":{},"得":{"docs":{},"更":{"docs":{},"加":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"啦":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}},".":{"0":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"1":{"4":{"3":{"7":{"4":{"8":{"1":{"7":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"4":{"0":{"3":{"8":{"6":{"9":{"3":{"9":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"6":{"7":{"5":{"5":{"8":{"9":{"1":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"6":{"5":{"0":{"0":{"0":{"0":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"9":{"0":{"0":{"0":{"0":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"8":{"6":{"2":{"6":{"0":{"2":{"1":{"1":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"9":{"3":{"6":{"9":{"8":{"3":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"8":{"1":{"0":{"1":{"4":{"8":{"9":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"入":{"docs":{},"门":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":10}}}}},"损":{"docs":{},"失":{"docs":{},"函":{"docs":{},"数":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}},"不":{"docs":{},"可":{"docs":{},"微":{"docs":{},"分":{"docs":{},"，":{"docs":{},"在":{"docs":{},"大":{"docs":{},"型":{"docs":{},"模":{"docs":{},"型":{"docs":{},"中":{"docs":{},"对":{"docs":{},"它":{"docs":{},"优":{"docs":{},"化":{"docs":{},"会":{"docs":{},"造":{"docs":{},"成":{"docs":{},"巨":{"docs":{},"大":{"docs":{},"开":{"docs":{},"销":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"通":{"docs":{},"过":{"docs":{},"最":{"docs":{},"大":{"docs":{},"化":{"docs":{},"给":{"docs":{},"定":{"docs":{},"数":{"docs":{},"据":{"docs":{},"标":{"docs":{},"签":{"docs":{},"的":{"docs":{},"似":{"docs":{},"然":{"docs":{},"函":{"docs":{},"数":{"docs":{},"来":{"docs":{},"训":{"docs":{},"练":{"docs":{},"模":{"docs":{},"型":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.004240282685512367},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},"y":{"docs":{},"[":{"docs":{},"n":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}},"]":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}},"]":{"docs":{},"]":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}},".":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}},")":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}},"d":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0035335689045936395},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}},"s":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}},"/":{"docs":{},"f":{"docs":{},"a":{"docs":{},"n":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}}}},"x":{"docs":{},"c":{"docs":{},"x":{"1":{"docs":{},"x":{"docs":{},"a":{"docs":{},"x":{"docs":{},"b":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}},"docs":{}}},"n":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}},"层":{"docs":{},"中":{"2":{"docs":{},"*":{"2":{"docs":{},"的":{"docs":{},"感":{"docs":{},"受":{"docs":{},"野":{"docs":{},"计":{"docs":{},"算":{"docs":{},"而":{"docs":{},"言":{"docs":{},"（":{"docs":{},"相":{"docs":{},"同":{"docs":{},"颜":{"docs":{},"色":{"docs":{},"区":{"docs":{},"域":{"docs":{},"）":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"感":{"docs":{},"受":{"docs":{},"野":{"docs":{},"包":{"docs":{},"含":{"docs":{},"了":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"4":{"docs":{},"个":{"docs":{},"输":{"docs":{},"入":{"docs":{},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"。":{"docs":{},"w":{"docs":{},"_":{"0":{"docs":{},"，":{"docs":{},"w":{"docs":{},"_":{"1":{"docs":{},"，":{"docs":{},"h":{"docs":{},"_":{"0":{"docs":{},"，":{"docs":{},"h":{"docs":{},"_":{"1":{"docs":{},"因":{"docs":{},"此":{"docs":{},"都":{"docs":{},"是":{"3":{"docs":{},"维":{"docs":{},"权":{"docs":{},"值":{"docs":{},"张":{"docs":{},"量":{"docs":{},"。":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"维":{"docs":{},"度":{"docs":{},"指":{"docs":{},"定":{"docs":{},"输":{"docs":{},"入":{"docs":{},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"，":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"两":{"docs":{},"个":{"docs":{},"表":{"docs":{},"示":{"docs":{},"参":{"docs":{},"考":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}},"包":{"docs":{},"含":{"4":{"docs":{},"个":{"docs":{},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"，":{"docs":{},"第":{"docs":{},"m":{"docs":{},"层":{"docs":{},"包":{"docs":{},"含":{"2":{"docs":{},"个":{"docs":{},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"（":{"docs":{},"h":{"docs":{},"_":{"0":{"docs":{},"和":{"docs":{},"h":{"docs":{},"_":{"1":{"docs":{},"）":{"docs":{},"。":{"docs":{},"h":{"docs":{},"_":{"0":{"docs":{},"和":{"docs":{},"h":{"docs":{},"_":{"1":{"docs":{},"中":{"docs":{},"红":{"docs":{},"蓝":{"docs":{},"色":{"docs":{},"区":{"docs":{},"域":{"docs":{},"的":{"docs":{},"像":{"docs":{},"素":{"docs":{},"（":{"docs":{},"输":{"docs":{},"出":{"docs":{},"值":{"docs":{},"）":{"docs":{},"由":{"docs":{},"第":{"docs":{},"m":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{},"k":{"docs":{},"(":{"docs":{},"l":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"，":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"高":{"docs":{},"度":{"docs":{},"，":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"宽":{"docs":{},"度":{"docs":{},"]":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"l":{"docs":{},"个":{"docs":{},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"的":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{},"j":{"docs":{},")":{"docs":{},"参":{"docs":{},"考":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"的":{"docs":{},"连":{"docs":{},"接":{"docs":{},"权":{"docs":{},"值":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"）":{"docs":{},"如":{"docs":{},"何":{"docs":{},"转":{"docs":{},"换":{"docs":{},"你":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{},"换":{"docs":{},"句":{"docs":{},"话":{"docs":{},"说":{"docs":{},"，":{"docs":{},"你":{"docs":{},"通":{"docs":{},"过":{"docs":{},"训":{"docs":{},"练":{"docs":{},"你":{"docs":{},"的":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"d":{"docs":{},"a":{"docs":{},"层":{"docs":{},"来":{"docs":{},"开":{"docs":{},"始":{"docs":{},"。":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"它":{"docs":{},"被":{"docs":{},"训":{"docs":{},"练":{"docs":{},"，":{"docs":{},"你":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"为":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"节":{"docs":{},"点":{"docs":{},"计":{"docs":{},"算":{"docs":{},"隐":{"docs":{},"单":{"docs":{},"元":{"docs":{},"的":{"docs":{},"值":{"docs":{},"然":{"docs":{},"后":{"docs":{},"将":{"docs":{},"它":{"docs":{},"们":{"docs":{},"储":{"docs":{},"存":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"集":{"docs":{},"，":{"docs":{},"以":{"docs":{},"便":{"docs":{},"你":{"docs":{},"在":{"docs":{},"第":{"2":{"docs":{},"层":{"docs":{},"中":{"docs":{},"训":{"docs":{},"练":{"docs":{},"d":{"docs":{},"a":{"docs":{},"。":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"你":{"docs":{},"训":{"docs":{},"练":{"docs":{},"完":{"docs":{},"第":{"2":{"docs":{},"层":{"docs":{},"的":{"docs":{},"d":{"docs":{},"a":{"docs":{},"，":{"docs":{},"你":{"docs":{},"以":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"计":{"docs":{},"算":{"docs":{},"第":{"docs":{},"三":{"docs":{},"层":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{},"现":{"docs":{},"在":{"docs":{},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"明":{"docs":{},"白":{"docs":{},"，":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"d":{"docs":{},"a":{"docs":{},"s":{"docs":{},"被":{"docs":{},"分":{"docs":{},"开":{"docs":{},"训":{"docs":{},"练":{"docs":{},"了":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"提":{"docs":{},"供":{"docs":{},"（":{"docs":{},"一":{"docs":{},"对":{"docs":{},"一":{"docs":{},"的":{"docs":{},"）":{"docs":{},"对":{"docs":{},"输":{"docs":{},"入":{"docs":{},"的":{"docs":{},"非":{"docs":{},"线":{"docs":{},"性":{"docs":{},"转":{"docs":{},"换":{"docs":{},"。":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"d":{"docs":{},"a":{"docs":{},"s":{"docs":{},"被":{"docs":{},"训":{"docs":{},"练":{"docs":{},"，":{"docs":{},"你":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"开":{"docs":{},"始":{"docs":{},"微":{"docs":{},"调":{"docs":{},"整":{"docs":{},"个":{"docs":{},"模":{"docs":{},"型":{"docs":{},"了":{"docs":{},"。":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"之":{"docs":{},"间":{"docs":{},"）":{"docs":{},"。":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}},"个":{"docs":{},"随":{"docs":{},"机":{"docs":{},"变":{"docs":{},"量":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}},"2":{"0":{"7":{"0":{"0":{"0":{"0":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"4":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"/":{"2":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}}},"5":{"6":{"docs":{},".":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"6":{"0":{"0":{"docs":{},"k":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"8":{"5":{"docs":{},"上":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"获":{"docs":{},"得":{"docs":{},"了":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}},"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}},"*":{"2":{"8":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}},"docs":{}},"docs":{}},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}},"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0016556291390728477},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797}}}}}},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"x":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}}}}}}}}}},")":{"docs":{},":":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},";":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},".":{"0":{"4":{"4":{"5":{"2":{"2":{"5":{"0":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"6":{"6":{"docs":{},"g":{"docs":{},"h":{"docs":{},"z":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}},"docs":{}},"7":{"3":{"8":{"7":{"5":{"9":{"3":{"2":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"逻":{"docs":{},"辑":{"docs":{},"回":{"docs":{},"归":{"docs":{},"进":{"docs":{},"行":{"docs":{},"m":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"分":{"docs":{},"类":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":10}}}}}}}}}}}}}}}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}},"d":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"3":{"0":{"docs":{},")":{"docs":{},".":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0019749835418038184},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"2":{"docs":{},".":{"5":{"2":{"docs":{},"m":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}}},"8":{"0":{"docs":{},".":{"2":{"8":{"docs":{},"m":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}},".":{"0":{"0":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},"2":{"3":{"3":{"2":{"5":{"7":{"3":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"3":{"4":{"2":{"4":{"1":{"7":{"8":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"4":{"0":{"docs":{},"g":{"docs":{},"h":{"docs":{},"z":{"docs":{},"的":{"docs":{},"机":{"docs":{},"器":{"docs":{},"上":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"代":{"docs":{},"码":{"docs":{},"跑":{"docs":{},"了":{"1":{"0":{"docs":{},".":{"3":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}},"上":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},"x":{"docs":{},"=":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"3":{"2":{"docs":{},"，":{"docs":{},"获":{"docs":{},"得":{"docs":{},"如":{"docs":{},"下":{"docs":{},"的":{"docs":{},"输":{"docs":{},"出":{"docs":{},"：":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"5":{"5":{"6":{"0":{"7":{"2":{"7":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"9":{"6":{"7":{"6":{"7":{"4":{"7":{"4":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"多":{"docs":{},"层":{"docs":{},"感":{"docs":{},"知":{"docs":{},"机":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":10}}}}}}}},")":{"docs":{},";":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.004240282685512367}}},"d":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"4":{"0":{"docs":{},")":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"6":{"docs":{},".":{"7":{"6":{"docs":{},"m":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}}},"8":{"0":{"docs":{},"上":{"docs":{},"，":{"docs":{},"获":{"docs":{},"得":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}},"docs":{}},"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0033112582781456954},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0035335689045936395},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},".":{"1":{"7":{"0":{"2":{"2":{"0":{"0":{"5":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"3":{"0":{"4":{"8":{"0":{"2":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"9":{"1":{"9":{"4":{"5":{"1":{"4":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"3":{"docs":{},".":{"2":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},"docs":{}}},"7":{"docs":{},"节":{"docs":{},"讲":{"docs":{},"述":{"docs":{},"了":{"docs":{},"网":{"docs":{},"络":{"docs":{},"中":{"docs":{},"每":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"学":{"docs":{},"习":{"docs":{},"速":{"docs":{},"率":{"docs":{},"选":{"docs":{},"择":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"基":{"docs":{},"于":{"docs":{},"分":{"docs":{},"类":{"docs":{},"错":{"docs":{},"误":{"docs":{},"率":{"docs":{},"自":{"docs":{},"适":{"docs":{},"应":{"docs":{},"的":{"docs":{},"选":{"docs":{},"择":{"docs":{},"它":{"docs":{},"们":{"docs":{},"。":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{},"卷":{"docs":{},"积":{"docs":{},"神":{"docs":{},"经":{"docs":{},"网":{"docs":{},"络":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":10}}}}}}}},"*":{"docs":{},"s":{"docs":{},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"6":{"docs":{},".":{"docs":{},"/":{"docs":{},"(":{"docs":{},"n":{"docs":{},"_":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"+":{"docs":{},"n":{"docs":{},"_":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"+":{"docs":{},"n":{"docs":{},"_":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}},"d":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0035335689045936395}}},"*":{"docs":{},"s":{"docs":{},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"6":{"docs":{},".":{"docs":{},"/":{"docs":{},"(":{"docs":{},"n":{"docs":{},"_":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"+":{"docs":{},"n":{"docs":{},"_":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"t":{"docs":{},"h":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"+":{"docs":{},"n":{"docs":{},"_":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"5":{"0":{"0":{"0":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},"docs":{},"]":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}},"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"1":{"6":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0016556291390728477}},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}},"+":{"1":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}}},".":{"3":{"8":{"8":{"1":{"6":{"7":{"3":{"4":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"5":{"8":{"6":{"8":{"9":{"8":{"2":{"8":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"降":{"docs":{},"噪":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":10}}}}}}}}},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"本":{"docs":{},"教":{"docs":{},"程":{"docs":{},"需":{"docs":{},"要":{"docs":{},"着":{"docs":{},"重":{"docs":{},"讲":{"docs":{},"解":{"docs":{},"的":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}},"6":{"0":{"docs":{},".":{"docs":{},")":{"docs":{},")":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}},"3":{"9":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"x":{"5":{"1":{"6":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{},".":{"7":{"0":{"4":{"6":{"7":{"5":{"1":{"0":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"8":{"5":{"2":{"1":{"9":{"5":{"0":{"0":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"9":{"2":{"3":{"2":{"2":{"6":{"1":{"6":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"/":{"docs":{},"(":{"docs":{},"n":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"+":{"docs":{},"n":{"docs":{},"_":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}}}}}}}}}},"层":{"docs":{},"叠":{"docs":{},"降":{"docs":{},"噪":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":10}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"7":{"2":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}}},"3":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}}},"4":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},"docs":{},".":{"2":{"0":{"3":{"2":{"4":{"4":{"9":{"3":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"4":{"8":{"9":{"5":{"8":{"3":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"5":{"0":{"0":{"0":{"0":{"0":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"1":{"0":{"4":{"1":{"7":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"受":{"docs":{},"限":{"docs":{},"波":{"docs":{},"尔":{"docs":{},"兹":{"docs":{},"曼":{"docs":{},"机":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":10}}}}}}}}}}},"8":{"0":{"0":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"3":{"docs":{},"/":{"8":{"3":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982}}}},"docs":{}},"docs":{}}},"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},".":{"0":{"0":{"7":{"4":{"4":{"5":{"6":{"9":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"7":{"6":{"3":{"8":{"9":{"1":{"5":{"2":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"8":{"1":{"1":{"7":{"4":{"3":{"6":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"/":{"2":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}}},"9":{"7":{"docs":{},".":{"3":{"4":{"docs":{},"m":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}},"docs":{}},"docs":{}}},"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},".":{"2":{"3":{"3":{"8":{"5":{"9":{"4":{"8":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"6":{"8":{"2":{"6":{"1":{"5":{"7":{"6":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{},"a":{"2":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}},"3":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}},"4":{"docs":{},"]":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}},"docs":{},"l":{"docs":{},"g":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"./":{"ref":"./","tf":0.011494252873563218},"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"c":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},".":{"docs":{},",":{"2":{"0":{"0":{"8":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"w":{"docs":{},"a":{"docs":{},"y":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.00437636761487965}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},")":{"docs":{},"）":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}}},"s":{"docs":{},"d":{"docs":{},"a":{"docs":{},")":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}}}}},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}},"是":{"docs":{},"经":{"docs":{},"典":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"的":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"。":{"docs":{},"它":{"docs":{},"在":{"docs":{},"v":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"0":{"8":{"docs":{},"中":{"docs":{},"作":{"docs":{},"为":{"docs":{},"深":{"docs":{},"度":{"docs":{},"网":{"docs":{},"络":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"构":{"docs":{},"建":{"docs":{},"块":{"docs":{},"被":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"通":{"docs":{},"过":{"docs":{},"简":{"docs":{},"短":{"docs":{},"的":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"来":{"docs":{},"开":{"docs":{},"始":{"docs":{},"本":{"docs":{},"教":{"docs":{},"程":{"docs":{},"。":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"s":{"docs":{},"d":{"docs":{},"a":{"docs":{},"）":{"docs":{},"是":{"docs":{},"层":{"docs":{},"叠":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"（":{"docs":{},"b":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"o":{"0":{"7":{"docs":{},"）":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"，":{"docs":{},"在":{"docs":{},"v":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"0":{"8":{"docs":{},"中":{"docs":{},"被":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"。":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"i":{"docs":{},"v":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.010485651214128035},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.007423117709437964}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},")":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}}}}},":":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797}}},"=":{"docs":{},"t":{"docs":{},".":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"h":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},")":{"docs":{},":":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},"s":{"docs":{},";":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}},")":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0016556291390728477},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"e":{"docs":{},";":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.003949967083607637}}}}}}}}}}}}},"g":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}},"_":{"docs":{},"i":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.003949967083607637}}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}},"x":{"1":{"docs":{},"x":{"docs":{},"b":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}},"docs":{},"i":{"docs":{},"s":{"docs":{},"=":{"1":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}},"docs":{}}}},"b":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}},"x":{"docs":{},"c":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"w":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"w":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},")":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}},"d":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}}},"p":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}},"f":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"t":{"docs":{},"h":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.003949967083607637}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}},"i":{"docs":{},"的":{"docs":{},"第":{"docs":{},"五":{"docs":{},"节":{"docs":{},"。":{"docs":{},"在":{"docs":{},"这":{"docs":{},"里":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"不":{"docs":{},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"些":{"docs":{},"等":{"docs":{},"式":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"的":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"来":{"docs":{},"获":{"docs":{},"取":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"1":{"docs":{},")":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}},"2":{"docs":{},")":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}},"3":{"docs":{},")":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}},"4":{"docs":{},")":{"docs":{},"]":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}},"]":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}},"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.005518763796909493},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},"l":{"docs":{},"i":{"docs":{},"f":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}},"o":{"docs":{},"w":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}},")":{"docs":{},"的":{"docs":{},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.003949967083607637}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}},"h":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}},"s":{"docs":{},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}},"i":{"docs":{},"t":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}},"t":{"docs":{},"w":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}},"o":{"docs":{},"l":{"docs":{},"t":{"docs":{},"z":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.011494252873563218},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}},"e":{"docs":{},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.004901960784313725},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}}}}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},"：":{"docs":{},"向":{"docs":{},"量":{"docs":{},"内":{"docs":{},"的":{"docs":{},"（":{"docs":{},"i":{"docs":{},"）":{"docs":{},"点":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"符":{"docs":{},"号":{"docs":{},"和":{"docs":{},"缩":{"docs":{},"略":{"docs":{},"语":{"docs":{},"表":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}},"：":{"docs":{},"小":{"docs":{},"些":{"docs":{},"字":{"docs":{},"母":{"docs":{},"表":{"docs":{},"示":{"docs":{},"向":{"docs":{},"量":{"docs":{},"（":{"docs":{},"除":{"docs":{},"非":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"说":{"docs":{},"明":{"docs":{},"）":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}},"_":{"docs":{},"i":{"docs":{},"}":{"docs":{},"}":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}},"j":{"docs":{},"}":{"docs":{},"}":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}},"s":{"docs":{},"h":{"docs":{},"p":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}},"a":{"docs":{},"i":{"docs":{},"s":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}},"s":{"docs":{},"e":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},"i":{"docs":{},"c":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373}},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0016556291390728477},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.010940919037199124}},"e":{"docs":{},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.005552984729291994},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.004240282685512367},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.010940919037199124}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797}}}}}}}}},"=":{"2":{"0":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}},"docs":{}},"6":{"0":{"0":{"docs":{},")":{"docs":{},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}},"docs":{}},"docs":{}},"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}},"]":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}}},"}":{"docs":{},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}},")":{"docs":{},":":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"]":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"，":{"docs":{},"输":{"docs":{},"入":{"docs":{},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"，":{"docs":{},"图":{"docs":{},"像":{"docs":{},"高":{"docs":{},"度":{"docs":{},"，":{"docs":{},"图":{"docs":{},"像":{"docs":{},"宽":{"docs":{},"度":{"docs":{},"]":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}},"c":{"docs":{},"k":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"中":{"docs":{},"阅":{"docs":{},"读":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"好":{"docs":{},"的":{"docs":{},"综":{"docs":{},"述":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"总":{"docs":{},"结":{"docs":{},"下":{"docs":{},"我":{"docs":{},"们":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"用":{"docs":{},"到":{"docs":{},"的":{"docs":{},"几":{"docs":{},"个":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"和":{"docs":{},"技":{"docs":{},"术":{"docs":{},"。":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"a":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0049469964664310955},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0042417815482502655}},"s":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}},".":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"p":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0028268551236749115},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"=":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}},"^":{"docs":{},"{":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"}":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}},"2":{"docs":{},")":{"docs":{},"}":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}},"docs":{}}}},"y":{"docs":{},":":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"x":{"docs":{},"'":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},";":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}},"x":{"1":{"docs":{},"x":{"docs":{},"a":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}},"docs":{}},"'":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576}},":":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.003949967083607637}}},"=":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"b":{"docs":{},")":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576}},"s":{"docs":{},":":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.003949967083607637}}},"=":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}},"e":{"docs":{},")":{"docs":{},":":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}},"c":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"a":{"docs":{},"r":{"docs":{},"l":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}},"s":{"docs":{},"e":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}},"l":{"docs":{},"l":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.022988505747126436}}}}}},"e":{"docs":{},"c":{"docs":{},"k":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0041647385469689956},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"h":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.003181336161187699}},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},".":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},":":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.003181336161187699}},"]":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.011494252873563218},"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},".":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}},"r":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}},"m":{"docs":{},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.004901960784313725},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0016556291390728477},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"u":{"docs":{},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.008169934640522876},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.005090236001850995},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.004415011037527594},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.01119157340355497},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.007658643326039387},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.009544008483563097}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}},"e":{"docs":{},".":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}}}}}}},"a":{"docs":{},"r":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}},"t":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"o":{"docs":{},"n":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},"，":{"docs":{},"它":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"对":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"x":{"docs":{},"有":{"docs":{},"好":{"docs":{},"的":{"docs":{},"压":{"docs":{},"缩":{"docs":{},"。":{"docs":{},"优":{"docs":{},"化":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"得":{"docs":{},"训":{"docs":{},"练":{"docs":{},"样":{"docs":{},"本":{"docs":{},"有":{"docs":{},"好":{"docs":{},"的":{"docs":{},"压":{"docs":{},"缩":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"也":{"docs":{},"希":{"docs":{},"望":{"docs":{},"对":{"docs":{},"别":{"docs":{},"的":{"docs":{},"输":{"docs":{},"入":{"docs":{},"有":{"docs":{},"好":{"docs":{},"的":{"docs":{},"压":{"docs":{},"缩":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"对":{"docs":{},"于":{"docs":{},"任":{"docs":{},"意":{"docs":{},"输":{"docs":{},"入":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"的":{"docs":{},"概":{"docs":{},"括":{"docs":{},"定":{"docs":{},"义":{"docs":{},"：":{"docs":{},"它":{"docs":{},"对":{"docs":{},"于":{"docs":{},"与":{"docs":{},"训":{"docs":{},"练":{"docs":{},"样":{"docs":{},"本":{"docs":{},"有":{"docs":{},"相":{"docs":{},"似":{"docs":{},"分":{"docs":{},"布":{"docs":{},"的":{"docs":{},"测":{"docs":{},"试":{"docs":{},"样":{"docs":{},"本":{"docs":{},"有":{"docs":{},"较":{"docs":{},"低":{"docs":{},"的":{"docs":{},"重":{"docs":{},"建":{"docs":{},"误":{"docs":{},"差":{"docs":{},"，":{"docs":{},"但":{"docs":{},"对":{"docs":{},"于":{"docs":{},"随":{"docs":{},"机":{"docs":{},"的":{"docs":{},"输":{"docs":{},"入":{"docs":{},"会":{"docs":{},"有":{"docs":{},"较":{"docs":{},"高":{"docs":{},"的":{"docs":{},"重":{"docs":{},"构":{"docs":{},"误":{"docs":{},"差":{"docs":{},"。":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"=":{"docs":{},"[":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"]":{"docs":{},")":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.00437636761487965},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"o":{"docs":{},"r":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},".":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.00437636761487965},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}},"v":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"v":{"2":{"docs":{},"d":{"docs":{},"(":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}},"docs":{}}}}}},"_":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0035335689045936395}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"m":{"docs":{},"l":{"docs":{},"p":{"docs":{},".":{"docs":{},"p":{"docs":{},"i":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}}}}}}}}}}}}}}}},"v":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"p":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}},"p":{"docs":{},"i":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.004901960784313725},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0037019898195279964}}}},"s":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.003949967083607637},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576}},":":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}},"=":{"0":{"docs":{},".":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}},"docs":{}},"`":{"docs":{},"`":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}},"s":{"docs":{},":":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}},"=":{"docs":{},"[":{"0":{"docs":{},".":{"1":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"docs":{}}},"docs":{}}}}}}}}}},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"(":{"docs":{},"t":{"docs":{},"m":{"docs":{},")":{"2":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}},"l":{"docs":{},"u":{"docs":{},"m":{"docs":{},"n":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}},"s":{"docs":{},"t":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0023137436372049976},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.005518763796909493},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.007241606319947334},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0042417815482502655}},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}},"p":{"docs":{},"u":{"docs":{"./":{"ref":"./","tf":0.011494252873563218},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"，":{"docs":{},"g":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"下":{"docs":{},"得":{"docs":{},"出":{"docs":{},"。":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"l":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}},"e":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}},".":{"docs":{},"d":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"(":{"docs":{},"u":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"f":{"docs":{},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}},"c":{"docs":{},"k":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.01064322073114299},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.003863134657836645},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.003949967083607637},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.00437636761487965},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"i":{"docs":{},"f":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}},"i":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}},"b":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}},"n":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"k":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"h":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{},"(":{"docs":{},"y":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}},"l":{"1":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}},"2":{"docs":{},"_":{"docs":{},"s":{"docs":{},"q":{"docs":{},"r":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}},"docs":{}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},"]":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}},")":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}},".":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.004240282685512367},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0042417815482502655}}}}},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}},"x":{"docs":{},"a":{"docs":{},"x":{"docs":{},"b":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},")":{"docs":{},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"f":{"docs":{},"n":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"=":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.005302226935312832}},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},".":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"d":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.022988505747126436},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}}}},".":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}},"n":{"docs":{},"o":{"docs":{},"i":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.011494252873563218},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.006564551422319475}}}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}}}},"c":{"docs":{},"a":{"docs":{},"y":{"docs":{},"）":{"docs":{},"”":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}},"i":{"docs":{},"d":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"f":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.004627487274409995},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0027593818984547464},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0065832784726793945},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.005470459518599562},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.009544008483563097}},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"=":{"0":{"docs":{},".":{"1":{"docs":{},")":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"2":{"docs":{},")":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}},"docs":{}}},"docs":{}},".":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}}},"i":{"docs":{},"n":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.004901960784313725},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},".":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}},"b":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"y":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}},"s":{"docs":{},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504}}},".":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}},"a":{"docs":{},"l":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}},"t":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.011494252873563218},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0041647385469689956},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.004240282685512367},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}},":":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"s":{"docs":{},".":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}}}},"1":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}},"2":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{},"'":{"docs":{},"x":{"docs":{},"'":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"y":{"docs":{},".":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}}}}}}}}}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}},"y":{"docs":{},".":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"n":{"docs":{},"'":{"docs":{},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}},"n":{"docs":{},"e":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982}},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"o":{"docs":{},"p":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}},"w":{"docs":{},"n":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"_":{"2":{"docs":{},"d":{"docs":{},"(":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}},"_":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},"：":{"docs":{},"第":{"docs":{},"i":{"docs":{},"层":{"docs":{},"个":{"docs":{},"隐":{"docs":{},"层":{"docs":{},"的":{"docs":{},"输":{"docs":{},"入":{"docs":{},"单":{"docs":{},"元":{"docs":{},"数":{"docs":{},"目":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{},"_":{"docs":{},"w":{"docs":{},"r":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.011437908496732025}},"s":{"docs":{},")":{"docs":{},"]":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}},"a":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.018433179723502304},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.012035010940919038}},"t":{"docs":{},"a":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.004901960784313725},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.004627487274409995},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}},"_":{"docs":{},"i":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},"x":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},"i":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}},"d":{"docs":{},"i":{"docs":{},"r":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.004901960784313725},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.005090236001850995},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}},"=":{"docs":{},"'":{"docs":{},"m":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"k":{"docs":{},"l":{"docs":{},".":{"docs":{},"g":{"docs":{},"z":{"docs":{},"'":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},"[":{"0":{"docs":{},"]":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"1":{"docs":{},"]":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"2":{"docs":{},"]":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"docs":{}},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}},":":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}},";":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}},"'":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},";":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}},"s":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}}},"(":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"y":{"docs":{},"_":{"docs":{},"r":{"docs":{},"n":{"docs":{},"g":{"docs":{},"=":{"docs":{},"r":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"y":{"docs":{},"_":{"docs":{},"r":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"=":{"0":{"docs":{},".":{"2":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}},"docs":{}}},"docs":{}},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}},"s":{"docs":{},".":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.006362672322375398}},"=":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},"x":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0019749835418038184},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0042417815482502655}},")":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504}}},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}}}}}}}}}}}}}}}}}},"'":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"6":{"4":{"docs":{},"'":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}},"docs":{}},"docs":{}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"d":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{},"e":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}}},"o":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},"e":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}},"：":{"docs":{},"输":{"docs":{},"入":{"docs":{},"维":{"docs":{},"度":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}},"s":{"docs":{},"=":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}},"'":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}},"r":{"docs":{},"a":{"docs":{},"w":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"n":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}},"b":{"docs":{},"n":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}},"e":{"5":{"4":{"3":{"0":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}},"docs":{}},"docs":{}},"docs":{}},"8":{"4":{"0":{"0":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},"docs":{}},"docs":{}},"docs":{}},"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}}},"a":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.004901960784313725},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}},"c":{"docs":{},"h":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.003239241092086997},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0035335689045936395},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373}}}}},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.003239241092086997},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}},"s":{"docs":{},"e":{"docs":{},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.003239241092086997},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0016556291390728477},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0019749835418038184},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373}},"s":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},"/":{"docs":{},"s":{"docs":{},"e":{"docs":{},"c":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"实":{"docs":{},"例":{"docs":{},"中":{"docs":{},"我":{"docs":{},"们":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"6":{"0":{"0":{"docs":{},"。":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}},"然":{"docs":{},"后":{"docs":{},"跑":{"7":{"5":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},"docs":{}},"docs":{}}}}}}}},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"测":{"docs":{},"试":{"docs":{},"错":{"docs":{},"误":{"docs":{},"率":{"docs":{},"为":{"7":{"docs":{},".":{"4":{"8":{"9":{"docs":{},"%":{"docs":{},"。":{"docs":{},"在":{"docs":{},"g":{"docs":{},"p":{"docs":{},"u":{"docs":{},"上":{"docs":{},"为":{"1":{"0":{"docs":{},".":{"0":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}},"得":{"docs":{},"到":{"docs":{},"了":{"1":{"docs":{},".":{"6":{"5":{"docs":{},"%":{"docs":{},"的":{"docs":{},"测":{"docs":{},"试":{"docs":{},"错":{"docs":{},"误":{"docs":{},"率":{"docs":{},"。":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}}}}},"/":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"然":{"docs":{},"后":{"docs":{},"花":{"docs":{},"了":{"8":{"2":{"8":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}},")":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"y":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}},"x":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"l":{"docs":{},"i":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.004901960784313725},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.007403979639055993},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.005266622778143515}},"e":{"docs":{},".":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},"s":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}},":":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.004901960784313725},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}},"^":{"docs":{},"{":{"docs":{},"w":{"docs":{},"_":{"docs":{},"j":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}},"n":{"docs":{},"'":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}},"d":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0023137436372049976},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0027593818984547464},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"，":{"docs":{},"在":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"0":{"6":{"docs":{},"中":{"docs":{},"被":{"docs":{},"用":{"docs":{},"以":{"docs":{},"构":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"深":{"docs":{},"度":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},")":{"docs":{},"。":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576}}},"o":{"docs":{},"p":{"docs":{},"i":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},"y":{"docs":{},")":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"表":{"docs":{},"示":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"i":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},"y":{"docs":{},"）":{"docs":{},"：":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.003239241092086997},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373}},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}}}}},".":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}},"t":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},"c":{"docs":{},".":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"t":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.005266622778143515}}}}}}},"f":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}},"a":{"docs":{},"m":{"docs":{},"o":{"docs":{},"u":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}},"l":{"docs":{},"s":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}},"e":{"docs":{},":":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"'":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}},"n":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},")":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504}}}}}}}}},"x":{"docs":{},")":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{},"_":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}},"n":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},")":{"docs":{},"[":{"0":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"1":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}}}}}}}}}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}},"e":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"i":{"docs":{},"n":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"g":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0016556291390728477},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0077738515901060075}},"_":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},":":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}},"=":{"docs":{},"(":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}},"1":{"docs":{},"]":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}},"docs":{}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}},"[":{"1":{"docs":{},"]":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}}}}}}}},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}},"s":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"=":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"w":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}},")":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"我":{"docs":{},"们":{"docs":{},"强":{"docs":{},"烈":{"docs":{},"建":{"docs":{},"议":{"docs":{},"读":{"docs":{},"者":{"docs":{},"去":{"docs":{},"了":{"docs":{},"解":{"docs":{},"它":{"docs":{},"。":{"docs":{},"当":{"docs":{},"然":{"docs":{},"，":{"docs":{},"也":{"docs":{},"在":{"docs":{},"p":{"docs":{},"i":{"docs":{},"l":{"docs":{},"(":{"docs":{},"p":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.004240282685512367},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373}}}}},"t":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0016556291390728477},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373}},"x":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0042417815482502655}},"(":{"docs":{},"默":{"docs":{},"认":{"docs":{},"为":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"6":{"4":{"docs":{},")":{"docs":{},"。":{"docs":{},"假":{"docs":{},"如":{"docs":{},"你":{"docs":{},"想":{"docs":{},"要":{"docs":{},"在":{"docs":{},"你":{"docs":{},"的":{"docs":{},"g":{"docs":{},"p":{"docs":{},"u":{"docs":{},"上":{"docs":{},"跑":{"docs":{},"你":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"你":{"docs":{},"也":{"docs":{},"需":{"docs":{},"要":{"docs":{},"看":{"docs":{},"g":{"docs":{},"p":{"docs":{},"u":{"docs":{},"。":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}},"r":{"docs":{},"m":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"a":{"docs":{},"t":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.00980392156862745},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0023137436372049976},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.012141280353200883},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.009544008483563097}},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},".":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},"s":{"docs":{},"'":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},")":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}}}}},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}}}}},"r":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"y":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}},"o":{"docs":{},"m":{"docs":{},":":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}},"e":{"docs":{},"e":{"docs":{},"d":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.005653710247349823}}}}}},"w":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"n":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.011494252873563218},"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0033112582781456954},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.007899934167215274},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}},"a":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},";":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}},"t":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{"./":{"ref":"./","tf":0.011494252873563218},"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.004901960784313725},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.003181336161187699}},")":{"docs":{},".":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0033112582781456954},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}},")":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}},"s":{"docs":{},")":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},":":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}},"i":{"docs":{},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},"n":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0033112582781456954},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0032916392363396972},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.00437636761487965},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.006362672322375398}},"s":{"docs":{},"=":{"docs":{},"{":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.00437636761487965}}}}},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}},"b":{"docs":{},"b":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.007423117709437964}},"s":{"docs":{},"_":{"docs":{},"h":{"docs":{},"v":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}},"表":{"docs":{},"示":{"docs":{},"从":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"单":{"docs":{},"元":{"docs":{},"中":{"docs":{},"开":{"docs":{},"始":{"docs":{},"g":{"docs":{},"i":{"docs":{},"b":{"docs":{},"b":{"docs":{},"s":{"docs":{},"采":{"docs":{},"样":{"docs":{},"的":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"再":{"docs":{},"实":{"docs":{},"现":{"docs":{},"c":{"docs":{},"d":{"docs":{},"和":{"docs":{},"p":{"docs":{},"c":{"docs":{},"d":{"docs":{},"更":{"docs":{},"新":{"docs":{},"中":{"docs":{},"是":{"docs":{},"非":{"docs":{},"常":{"docs":{},"有":{"docs":{},"用":{"docs":{},"的":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"h":{"docs":{},"v":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}},"表":{"docs":{},"示":{"docs":{},"从":{"docs":{},"可":{"docs":{},"视":{"docs":{},"单":{"docs":{},"元":{"docs":{},"中":{"docs":{},"开":{"docs":{},"始":{"docs":{},"的":{"docs":{},"g":{"docs":{},"i":{"docs":{},"b":{"docs":{},"b":{"docs":{},"s":{"docs":{},"采":{"docs":{},"样":{"docs":{},"的":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"到":{"docs":{},"这":{"docs":{},"对":{"docs":{},"于":{"docs":{},"从":{"docs":{},"r":{"docs":{},"b":{"docs":{},"m":{"docs":{},"中":{"docs":{},"采":{"docs":{},"样":{"docs":{},"是":{"docs":{},"非":{"docs":{},"常":{"docs":{},"有":{"docs":{},"用":{"docs":{},"的":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373}},"o":{"docs":{},"d":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.011437908496732025},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0033112582781456954},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}},"_":{"docs":{},"i":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}},"s":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}},"p":{"docs":{},"h":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}},".":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}},"z":{"docs":{},"i":{"docs":{},"p":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"m":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"k":{"docs":{},"l":{"docs":{},".":{"docs":{},"g":{"docs":{},"z":{"docs":{},"'":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"b":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}},")":{"docs":{},"]":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}}}},"w":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}},")":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}}}}},"h":{"docs":{},"z":{"docs":{},"上":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"代":{"docs":{},"码":{"docs":{},"的":{"docs":{},"速":{"docs":{},"度":{"docs":{},"是":{"1":{"docs":{},".":{"9":{"3":{"6":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}},"(":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}},"t":{"docs":{},"x":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}}},"h":{"0":{"docs":{},"_":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},":":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}}}}}}}},"1":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.005302226935312832}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.003181336161187699}},"e":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},"]":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}}}}}}},"docs":{},"u":{"docs":{},"a":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}},"y":{"docs":{},"b":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997}},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.004415011037527594}},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}},"=":{"1":{"docs":{},".":{"0":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"docs":{}}},"4":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"y":{"docs":{},".":{"docs":{},"s":{"docs":{},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"6":{"docs":{},".":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}},"docs":{}}}}}}}}}}}},".":{"5":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"w":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.009874917709019092},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.00437636761487965},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.014846235418875928}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}},"r":{"docs":{},"n":{"docs":{},"g":{"docs":{},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"y":{"docs":{},"_":{"docs":{},"r":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{},":":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"s":{"docs":{},"=":{"docs":{},"[":{"1":{"0":{"0":{"0":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"docs":{}},"docs":{}},"docs":{}},"5":{"0":{"0":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"docs":{}},"docs":{}},"docs":{}}},"[":{"docs":{},"i":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}}}}}},")":{"docs":{},":":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},".":{"docs":{},"u":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"/":{"docs":{},"~":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"/":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"/":{"docs":{},"m":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"/":{"docs":{},"m":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"k":{"docs":{},"l":{"docs":{},".":{"docs":{},"g":{"docs":{},"z":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"/":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},"/":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"a":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.003181336161187699}},"s":{"docs":{},":":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},"=":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}},"l":{"1":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.004901960784313725},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0027593818984547464}},"/":{"docs":{},"l":{"2":{"docs":{},"正":{"docs":{},"则":{"docs":{},"化":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}},"就":{"docs":{},"是":{"docs":{},"在":{"docs":{},"损":{"docs":{},"失":{"docs":{},"函":{"docs":{},"数":{"docs":{},"中":{"docs":{},"添":{"docs":{},"加":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{},"项":{"docs":{},"，":{"docs":{},"用":{"docs":{},"以":{"docs":{},"惩":{"docs":{},"罚":{"docs":{},"一":{"docs":{},"定":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"l":{"2":{"docs":{},"正":{"docs":{},"则":{"docs":{},"化":{"docs":{},"，":{"docs":{},"又":{"docs":{},"被":{"docs":{},"称":{"docs":{},"为":{"docs":{},"“":{"docs":{},"权":{"docs":{},"制":{"docs":{},"递":{"docs":{},"减":{"docs":{},"（":{"docs":{},"w":{"docs":{},"e":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}},":":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}},"=":{"0":{"docs":{},".":{"0":{"0":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}},"docs":{}},"docs":{}}},"docs":{}}}}}}},"2":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0027593818984547464}},"_":{"docs":{},"s":{"docs":{},"q":{"docs":{},"r":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}},":":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}},"=":{"0":{"docs":{},".":{"0":{"0":{"0":{"1":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}},")":{"docs":{},";":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}},"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.003949967083607637}},"a":{"docs":{},"b":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.005090236001850995},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373}},"s":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}}}}}},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{},"_":{"1":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}},"2":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}},"docs":{}}}}}},"r":{"docs":{},"g":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}},"e":{"docs":{},"r":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}},"y":{"docs":{},"e":{"docs":{},"r":{"0":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}},"1":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},".":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"2":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}},"2":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}},"3":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},".":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"y":{"docs":{},")":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"k":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"h":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{},"(":{"docs":{},"y":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}},"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.01379690949227373},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0063604240282685515},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.005266622778143515},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.022975929978118162},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}},";":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}},":":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},".":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}}}}}}},"s":{"docs":{},".":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.003949967083607637}}}},"r":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}},"s":{"docs":{},"t":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.011494252873563218},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"r":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.006535947712418301},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.00437636761487965}}},")":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}},":":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"=":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"r":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}},"\"":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}},".":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}},"d":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}},"）":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}},"(":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}}},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}},"）":{"docs":{},"在":{"docs":{},"第":{"docs":{},"一":{"docs":{},"层":{"docs":{},"被":{"docs":{},"设":{"docs":{},"为":{"0":{"docs":{},".":{"1":{"docs":{},"，":{"docs":{},"第":{"docs":{},"二":{"docs":{},"层":{"docs":{},"被":{"docs":{},"设":{"docs":{},"为":{"0":{"docs":{},".":{"2":{"docs":{},"，":{"docs":{},"第":{"docs":{},"三":{"docs":{},"层":{"docs":{},"被":{"docs":{},"设":{"docs":{},"为":{"0":{"docs":{},".":{"3":{"docs":{},"。":{"docs":{},"预":{"docs":{},"训":{"docs":{},"练":{"docs":{},"的":{"docs":{},"学":{"docs":{},"习":{"docs":{},"速":{"docs":{},"率":{"docs":{},"为":{"0":{"docs":{},".":{"0":{"0":{"1":{"docs":{},"，":{"docs":{},"微":{"docs":{},"调":{"docs":{},"学":{"docs":{},"习":{"docs":{},"速":{"docs":{},"率":{"docs":{},"为":{"0":{"docs":{},".":{"1":{"docs":{},"。":{"docs":{},"预":{"docs":{},"训":{"docs":{},"练":{"docs":{},"花":{"docs":{},"了":{"5":{"8":{"5":{"docs":{},".":{"0":{"1":{"docs":{},"分":{"docs":{},"钟":{"docs":{},"，":{"docs":{},"平":{"docs":{},"均":{"docs":{},"每":{"docs":{},"层":{"1":{"3":{"docs":{},"分":{"docs":{},"钟":{"docs":{},"。":{"docs":{},"微":{"docs":{},"调":{"docs":{},"在":{"3":{"6":{"docs":{},"次":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"，":{"4":{"4":{"4":{"docs":{},".":{"2":{"docs":{},"分":{"docs":{},"钟":{"docs":{},"后":{"docs":{},"完":{"docs":{},"成":{"docs":{},"。":{"docs":{},"平":{"docs":{},"均":{"docs":{},"每":{"docs":{},"层":{"docs":{},"迭":{"docs":{},"代":{"1":{"2":{"docs":{},".":{"3":{"4":{"docs":{},"分":{"docs":{},"钟":{"docs":{},"。":{"docs":{},"最":{"docs":{},"后":{"docs":{},"的":{"docs":{},"验":{"docs":{},"证":{"docs":{},"得":{"docs":{},"分":{"docs":{},"为":{"1":{"docs":{},".":{"3":{"9":{"docs":{},"%":{"docs":{},"，":{"docs":{},"测":{"docs":{},"试":{"docs":{},"得":{"docs":{},"分":{"docs":{},"为":{"1":{"docs":{},".":{"3":{"docs":{},"%":{"docs":{},"。":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"都":{"docs":{},"是":{"docs":{},"在":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}}}},"docs":{}},"docs":{}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"y":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}},")":{"docs":{},"的":{"docs":{},"帮":{"docs":{},"助":{"docs":{},"下":{"docs":{},"，":{"docs":{},"下":{"docs":{},"面":{"docs":{},"行":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"将":{"docs":{},"把":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"保":{"docs":{},"存":{"docs":{},"为":{"docs":{},"图":{"docs":{},"像":{"docs":{},"：":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}}},"s":{"docs":{},"a":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}},"t":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.005518763796909493},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.004240282685512367},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.009846827133479213},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}},"t":{"docs":{},"t":{"docs":{},"l":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}},"e":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797}}},"k":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"h":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.003239241092086997},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0033112582781456954},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}},"i":{"docs":{},"h":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{},",":{"docs":{},"p":{"docs":{},"l":{"docs":{},"）":{"docs":{},"更":{"docs":{},"加":{"docs":{},"简":{"docs":{},"于":{"docs":{},"计":{"docs":{},"算":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"它":{"docs":{},"假":{"docs":{},"设":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"比":{"docs":{},"特":{"docs":{},"都":{"docs":{},"是":{"docs":{},"相":{"docs":{},"互":{"docs":{},"独":{"docs":{},"立":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"有":{"docs":{},"：":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}},"_":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797}}}}}}}}}}},"o":{"docs":{},"g":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.005090236001850995},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0033112582781456954},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.011494252873563218},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.005090236001850995},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0033112582781456954},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"=":{"docs":{},"x":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"2":{"docs":{},".":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}},"docs":{}}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}}}}}}}}}},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"g":{"docs":{},"d":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}},"a":{"docs":{},"d":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0023137436372049976}},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}},"o":{"docs":{},"k":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}},"p":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"s":{"docs":{},"s":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.016339869281045753},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}},"w":{"docs":{},"=":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},"e":{"docs":{},"r":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}},"：":{"docs":{},"标":{"docs":{},"签":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}},"p":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}},"[":{"1":{"docs":{},",":{"docs":{},"y":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{},"]":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}},"docs":{}}}}},"2":{"docs":{},",":{"docs":{},"y":{"docs":{},"[":{"2":{"docs":{},"]":{"docs":{},"]":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}},"docs":{}}}}},"docs":{},"n":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"y":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{},",":{"docs":{},"y":{"docs":{},"]":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"(":{"docs":{},"x":{"docs":{},",":{"docs":{},"z":{"docs":{},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}},"r":{"docs":{},"=":{"0":{"docs":{},".":{"1":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}},"docs":{}}},"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},":":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"m":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"b":{"docs":{},"m":{"docs":{},")":{"docs":{},"）":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}}}}},"，":{"docs":{},"在":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"章":{"docs":{},"节":{"docs":{},"中":{"docs":{},"讨":{"docs":{},"论":{"docs":{},"）":{"docs":{},"，":{"docs":{},"还":{"docs":{},"有":{"docs":{},"降":{"docs":{},"噪":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"，":{"docs":{},"在":{"docs":{},"后":{"docs":{},"面":{"docs":{},"讨":{"docs":{},"论":{"docs":{},"。":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"）":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}},"k":{"docs":{},"e":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}},"n":{"docs":{},"i":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0016556291390728477},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.008329477093937991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}},"c":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}},"h":{"docs":{},":":{"docs":{},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0016556291390728477},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}}},"x":{"docs":{},"i":{"docs":{},"m":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}},"_":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"e":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}}}}}}}}}}}},"p":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0049469964664310955},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},"s":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}},"）":{"docs":{},"。":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"下":{"docs":{},"降":{"docs":{},"算":{"docs":{},"法":{"docs":{},"在":{"docs":{},"小":{"docs":{},"改":{"docs":{},"动":{"docs":{},"后":{"docs":{},"可":{"docs":{},"以":{"docs":{},"学":{"docs":{},"习":{"docs":{},"这":{"docs":{},"种":{"docs":{},"共":{"docs":{},"享":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"被":{"docs":{},"共":{"docs":{},"享":{"docs":{},"权":{"docs":{},"值":{"docs":{},"的":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"就":{"docs":{},"是":{"docs":{},"被":{"docs":{},"共":{"docs":{},"享":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"的":{"docs":{},"简":{"docs":{},"单":{"docs":{},"求":{"docs":{},"和":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"c":{"docs":{},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}}}}},"t":{"docs":{},"a":{"docs":{},"k":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0023137436372049976},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}},"n":{"docs":{},"(":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}},"i":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.004901960784313725},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.011105969458583989},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0016556291390728477},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.003949967083607637},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.006564551422319475}},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}},".":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}}}},"m":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"u":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"'":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.011494252873563218},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0023137436372049976},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"数":{"docs":{},"据":{"docs":{},"集":{"docs":{},"(":{"docs":{},"m":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"k":{"docs":{},"l":{"docs":{},".":{"docs":{},"g":{"docs":{},"z":{"docs":{},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"包":{"docs":{},"含":{"6":{"0":{"0":{"0":{"0":{"docs":{},"个":{"docs":{},"训":{"docs":{},"练":{"docs":{},"样":{"docs":{},"例":{"docs":{},"和":{"1":{"0":{"0":{"0":{"0":{"docs":{},"个":{"docs":{},"测":{"docs":{},"试":{"docs":{},"样":{"docs":{},"例":{"docs":{},"的":{"docs":{},"手":{"docs":{},"写":{"docs":{},"数":{"docs":{},"字":{"docs":{},"图":{"docs":{},"像":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"集":{"docs":{},"。":{"docs":{},"在":{"docs":{},"许":{"docs":{},"多":{"docs":{},"论":{"docs":{},"文":{"docs":{},"，":{"docs":{},"包":{"docs":{},"括":{"docs":{},"本":{"docs":{},"教":{"docs":{},"程":{"docs":{},"，":{"docs":{},"都":{"docs":{},"将":{"6":{"0":{"0":{"0":{"0":{"docs":{},"个":{"docs":{},"训":{"docs":{},"练":{"docs":{},"样":{"docs":{},"例":{"docs":{},"分":{"docs":{},"为":{"5":{"0":{"0":{"0":{"0":{"docs":{},"个":{"docs":{},"样":{"docs":{},"例":{"docs":{},"的":{"docs":{},"训":{"docs":{},"练":{"docs":{},"集":{"docs":{},"和":{"1":{"0":{"0":{"0":{"0":{"docs":{},"个":{"docs":{},"样":{"docs":{},"例":{"docs":{},"的":{"docs":{},"验":{"docs":{},"证":{"docs":{},"集":{"docs":{},"（":{"docs":{},"为":{"docs":{},"了":{"docs":{},"超":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"学":{"docs":{},"习":{"docs":{},"率":{"docs":{},"、":{"docs":{},"模":{"docs":{},"型":{"docs":{},"尺":{"docs":{},"寸":{"docs":{},"等":{"docs":{},"等":{"docs":{},"）":{"docs":{},"。":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"图":{"docs":{},"像":{"docs":{},"都":{"docs":{},"被":{"docs":{},"归":{"docs":{},"一":{"docs":{},"化":{"docs":{},"和":{"docs":{},"中":{"docs":{},"心":{"docs":{},"化":{"docs":{},"为":{"2":{"8":{"2":{"8":{"docs":{},"的":{"docs":{},"像":{"docs":{},"素":{"docs":{},"，":{"2":{"5":{"6":{"docs":{},"位":{"docs":{},"图":{"docs":{},"的":{"docs":{},"灰":{"docs":{},"度":{"docs":{},"图":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},".":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.022988505747126436},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.008329477093937991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.00772626931567329},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.005653710247349823},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.00437636761487965},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"'":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}},"s":{"docs":{},"）":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}}}},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.004901960784313725},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.003181336161187699}}}}},"u":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}},"c":{"docs":{},"h":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.004901960784313725},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.003863134657836645}}}}},"p":{"docs":{},"l":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}},"[":{"0":{"docs":{},",":{"docs":{},"a":{"docs":{},"]":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}},"1":{"docs":{},",":{"docs":{},"b":{"docs":{},"]":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}},"docs":{},"k":{"docs":{},",":{"docs":{},"k":{"docs":{},"]":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"p":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997}}}}}}}}}},"a":{"docs":{},"n":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.004627487274409995},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}},"s":{"docs":{},"g":{"docs":{},"d":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.004901960784313725}},"(":{"docs":{},"x":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}},".":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}},"l":{"docs":{},"p":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0016556291390728477},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"(":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}},".":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},"p":{"docs":{},"i":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}},":":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}},")":{"docs":{},"(":{"docs":{},"n":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}}}},"n":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}},"e":{"docs":{},"t":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"w":{"docs":{},"o":{"docs":{},"r":{"docs":{},"k":{"docs":{"./":{"ref":"./","tf":0.022988505747126436},"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0016556291390728477},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{},"）":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}}}}}}}},";":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}},"u":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.022988505747126436},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}}}},"e":{"docs":{},"d":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.006362672322375398}}}},"w":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}}}}}},"l":{"docs":{},"i":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"g":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0033112582781456954},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"k":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"h":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.004901960784313725},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}},"：":{"docs":{},"负":{"docs":{},"对":{"docs":{},"数":{"docs":{},"似":{"docs":{},"然":{"docs":{},"函":{"docs":{},"数":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}},"e":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0065832784726793945},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.006362672322375398}},":":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.006362672322375398}}},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0042417815482502655}}}},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.003863134657836645}}}}}}}}},"t":{"docs":{},"e":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.005266622778143515},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.006362672322375398}},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"m":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.004415011037527594}},"'":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}},"a":{"docs":{},"l":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}},"w":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"u":{"docs":{},"m":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}},"p":{"docs":{},"i":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.004901960784313725},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}},"y":{"docs":{},"'":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"y":{"docs":{},"_":{"docs":{},"r":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"(":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"1":{"2":{"3":{"4":{"docs":{},")":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}},"docs":{},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}},"docs":{}},"docs":{},")":{"docs":{},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"3":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}}}}}}}}},"2":{"3":{"4":{"5":{"5":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"8":{"9":{"6":{"7":{"7":{"docs":{},")":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"3":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"6":{"docs":{},".":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}},"docs":{}}}}}},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"(":{"docs":{},"(":{"docs":{},"n":{"docs":{},"_":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},",":{"docs":{},")":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},")":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}},"docs":{}}}}}}}}}}}}}}},"n":{"docs":{},"_":{"docs":{},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"[":{"1":{"docs":{},":":{"docs":{},"]":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}},"2":{"docs":{},":":{"docs":{},"]":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}},"docs":{}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"(":{"docs":{},"c":{"docs":{},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}},"_":{"docs":{},"r":{"docs":{},"n":{"docs":{},"g":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"(":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}},":":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}},"=":{"docs":{},"r":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"y":{"docs":{},"_":{"docs":{},"r":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.008792225821378992},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.008830022075055188},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.009216589861751152},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.005470459518599562},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.005302226935312832}}}}},"_":{"docs":{},"p":{"docs":{},"i":{"docs":{},"x":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}},"m":{"docs":{},"n":{"docs":{},"*":{"docs":{},"k":{"docs":{},"_":{"docs":{},"(":{"docs":{},"l":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}},"个":{"docs":{},"像":{"docs":{},"素":{"docs":{},"位":{"docs":{},"置":{"docs":{},"应":{"docs":{},"用":{"docs":{},"每":{"docs":{},"个":{"docs":{},"m":{"docs":{},"n":{"docs":{},"大":{"docs":{},"小":{"docs":{},"的":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"）":{"docs":{},"将":{"docs":{},"消":{"docs":{},"耗":{"docs":{},"(":{"docs":{},"m":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},"s":{"docs":{},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}},"=":{"1":{"0":{"0":{"0":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}},"i":{"docs":{},"n":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797}}},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.004415011037527594}}},"=":{"2":{"8":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}},"docs":{}},"5":{"0":{"0":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{},"n":{"docs":{},"_":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}},"i":{"docs":{},"n":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"s":{"docs":{},"[":{"1":{"docs":{},"]":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}}}}}}}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}},")":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}},"s":{"docs":{},":":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}},"=":{"2":{"8":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}},"docs":{}},"7":{"8":{"4":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"docs":{}},"docs":{}},"docs":{}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}},")":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797}}}}},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.004415011037527594}}},"=":{"1":{"0":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"5":{"0":{"0":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}},"docs":{},"n":{"docs":{},"_":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}},"s":{"docs":{},":":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}},"=":{"1":{"0":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"docs":{}},"docs":{}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"e":{"docs":{},")":{"docs":{},")":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},":":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},"=":{"2":{"8":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}},"docs":{}},"7":{"8":{"4":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}},"docs":{}},"docs":{}},"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},":":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},"=":{"5":{"0":{"0":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}},":":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}},"docs":{}},"docs":{}},"docs":{},"n":{"docs":{},"_":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},")":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"s":{"docs":{},":":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"p":{"docs":{},"s":{"docs":{},"=":{"docs":{},"k":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}},"=":{"docs":{},"'":{"docs":{},"b":{"docs":{},"'":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"'":{"docs":{},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"'":{"docs":{},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}},"w":{"docs":{},"'":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"'":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"'":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"'":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}},"b":{"docs":{},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{},"'":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}},"h":{"docs":{},"b":{"docs":{},"i":{"docs":{},"a":{"docs":{},"s":{"docs":{},"'":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}}}}},"1":{"docs":{},"]":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}},"docs":{}}}}}}},"x":{"1":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"=":{"1":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}},"docs":{}},"h":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}},"v":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},"[":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.003181336161187699}},"i":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}},"a":{"docs":{},"l":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}},"a":{"docs":{},"m":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.017973856209150325},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}},"e":{"docs":{},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.005552984729291994},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.006622516556291391},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0028268551236749115},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.005470459518599562},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}},"r":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"s":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},".":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}}}}}},"s":{"docs":{},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},")":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}},"_":{"docs":{},"i":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}},"e":{"docs":{},"/":{"2":{"docs":{},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}},".":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}},"docs":{}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}},"h":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}},"i":{"docs":{},"r":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}},"s":{"docs":{},".":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}},"e":{"docs":{},"r":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.004966887417218543}},"）":{"docs":{"./":{"ref":"./","tf":0.011494252873563218},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.005302226935312832}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},":":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}},"=":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}},"o":{"docs":{},"l":{"docs":{},"y":{"docs":{},"p":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.003949967083607637},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.003181336161187699}}}}},"o":{"docs":{},"l":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}},"_":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}}}},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},":":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}},"=":{"docs":{},"(":{"2":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}}}},"docs":{}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.022988505747126436}},"命":{"docs":{},"名":{"docs":{},"空":{"docs":{},"间":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},".":{"docs":{},"a":{"docs":{},"x":{"docs":{},"i":{"docs":{},"s":{"docs":{},"(":{"docs":{},"'":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"'":{"docs":{},")":{"docs":{},";":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{},"[":{"0":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}},"docs":{}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"w":{"docs":{},"(":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}},"u":{"docs":{},"b":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}}}},"docs":{}}}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0049469964664310955},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.006564551422319475}},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0041647385469689956},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576}}},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}},"t":{"docs":{},"y":{"docs":{},".":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576}}}}},"p":{"docs":{},"a":{"docs":{},"g":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}},"x":{"docs":{},"i":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.003181336161187699}}}}},"e":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0041647385469689956}}}}}},"s":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.00437636761487965}},"_":{"docs":{},"f":{"docs":{},"n":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"f":{"docs":{},"n":{"docs":{},")":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}},"_":{"docs":{},"f":{"docs":{},"n":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.003181336161187699}}}}}}},"h":{"1":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0042417815482502655}}}},"docs":{}},"n":{"docs":{},"h":{"docs":{},"s":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"v":{"docs":{},"s":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},"[":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}},"p":{"docs":{},"h":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"v":{"1":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0042417815482502655}}}},"docs":{}}}}}}}}}}}}},"(":{"docs":{},"y":{"docs":{},"=":{"docs":{},"i":{"docs":{},"|":{"docs":{},"x":{"docs":{},")":{"docs":{},".":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}},"w":{"docs":{},",":{"docs":{},"b":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}},"x":{"docs":{},")":{"docs":{},"的":{"docs":{},"样":{"docs":{},"本":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"运":{"docs":{},"行":{"docs":{},"马":{"docs":{},"尔":{"docs":{},"可":{"docs":{},"夫":{"docs":{},"链":{"docs":{},"的":{"docs":{},"汇":{"docs":{},"聚":{"docs":{},"、":{"docs":{},"g":{"docs":{},"i":{"docs":{},"b":{"docs":{},"b":{"docs":{},"s":{"docs":{},"采":{"docs":{},"样":{"docs":{},"的":{"docs":{},"过":{"docs":{},"渡":{"docs":{},"来":{"docs":{},"得":{"docs":{},"到":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997}}}},"c":{"docs":{},"e":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"u":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}},"o":{"docs":{},"t":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}},"i":{"docs":{},"l":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"u":{"docs":{},"t":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}},"=":{"1":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}},"docs":{},"h":{"1":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}},"docs":{}},"v":{"1":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}},"docs":{}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}},"i":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"o":{"docs":{},"p":{"docs":{},"h":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}}}}},"c":{"docs":{},"d":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}},"s":{"docs":{},"e":{"docs":{},"u":{"docs":{},"d":{"docs":{},"o":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}},"r":{"docs":{},"b":{"docs":{},"m":{"docs":{"./":{"ref":"./","tf":0.011494252873563218},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.012725344644750796}},"(":{"docs":{},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}},"s":{"docs":{},"的":{"docs":{},"训":{"docs":{},"练":{"docs":{},"是":{"docs":{},"特":{"docs":{},"别":{"docs":{},"困":{"docs":{},"难":{"docs":{},"的":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"归":{"docs":{},"一":{"docs":{},"化":{"docs":{},"函":{"docs":{},"数":{"docs":{},"z":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"无":{"docs":{},"法":{"docs":{},"在":{"docs":{},"训":{"docs":{},"练":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"估":{"docs":{},"计":{"docs":{},"对":{"docs":{},"数":{"docs":{},"似":{"docs":{},"然":{"docs":{},"函":{"docs":{},"数":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"p":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},")":{"docs":{},"。":{"docs":{},"因":{"docs":{},"而":{"docs":{},"我":{"docs":{},"们":{"docs":{},"没":{"docs":{},"有":{"docs":{},"直":{"docs":{},"接":{"docs":{},"可":{"docs":{},"以":{"docs":{},"度":{"docs":{},"量":{"docs":{},"超":{"docs":{},"参":{"docs":{},"数":{"docs":{},"优":{"docs":{},"化":{"docs":{},"与":{"docs":{},"否":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"能":{"docs":{},"量":{"docs":{},"函":{"docs":{},"数":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"定":{"docs":{},"义":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0065832784726793945},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.003181336161187699}}}}}}}}}},"a":{"docs":{},"l":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"e":{"docs":{},"i":{"docs":{},"v":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.004627487274409995},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0027593818984547464}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}},"n":{"docs":{},"g":{"docs":{},"）":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}},"o":{"docs":{},"r":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0033112582781456954}},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}}}}}},"a":{"docs":{},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}},"d":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}},"l":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}},"p":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.004901960784313725},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.007866728366496992},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"o":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}},"l":{"docs":{},"a":{"docs":{},"c":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}},"s":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}}}}},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.011437908496732025},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.006478482184173994},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.005266622778143515},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.00437636761487965},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.016967126193001062}}}}}},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0028268551236749115}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}},"n":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}},"g":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0028268551236749115}}},".":{"docs":{},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"(":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"=":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}}}}}}}}}}}}},":":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.004415011037527594},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}},"=":{"docs":{},"r":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0016556291390728477}}}}}}}}},"u":{"docs":{},"n":{"docs":{"./":{"ref":"./","tf":0.011494252873563218},"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}},"l":{"docs":{},"e":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"a":{"docs":{},"i":{"docs":{},"s":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997}}}},"n":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0035335689045936395},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0065832784726793945},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}},"l":{"docs":{},"i":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"y":{"docs":{},"_":{"docs":{},"r":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"2":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},"docs":{}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"2":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}},"t":{"docs":{},"e":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}},"o":{"docs":{},"w":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.004627487274409995},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},"'":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"./":{"ref":"./","tf":0.011494252873563218},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0019749835418038184},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.010604453870625663}},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"_":{"docs":{},"g":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"v":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}},"v":{"docs":{},"_":{"docs":{},"g":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"h":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}}}},"e":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.004627487274409995},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.005518763796909493},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504}},"e":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.004901960784313725}}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}},"y":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}}}},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}},"t":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0028268551236749115},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.008558262014483212},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.00437636761487965}},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}},";":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0028268551236749115},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"b":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}},"]":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},".":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"x":{"docs":{},"'":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},"e":{"docs":{},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}},"]":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}}}},"p":{"docs":{},"_":{"docs":{},"y":{"docs":{},"_":{"docs":{},"g":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"x":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0016556291390728477},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"s":{"docs":{},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},":":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}},".":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},")":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}},"r":{"docs":{},"o":{"docs":{},"p":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"(":{"docs":{},"h":{"0":{"docs":{},"_":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}},"docs":{}}}}}}},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"v":{"0":{"docs":{},"_":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}},"docs":{}}}}}}}}},"w":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}},".":{"docs":{},"t":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},")":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},"e":{"docs":{},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}}}},"y":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}},"e":{"docs":{},"d":{"docs":{},"'":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}},".":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}}}}}}}}},":":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373}}}},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"s":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"a":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.003181336161187699}},"s":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}},"i":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}}},"l":{"1":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}},"2":{"docs":{},"_":{"docs":{},"s":{"docs":{},"q":{"docs":{},"r":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}},"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}},"n":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"k":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"h":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"y":{"docs":{},")":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"k":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"h":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"y":{"docs":{},")":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"k":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"h":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"x":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"x":{"docs":{},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"y":{"docs":{},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}}}}}}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"u":{"docs":{},"d":{"docs":{},"o":{"docs":{},"_":{"docs":{},"l":{"docs":{},"i":{"docs":{},"k":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"h":{"docs":{},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"b":{"docs":{},"b":{"docs":{},"s":{"docs":{},"_":{"docs":{},"h":{"docs":{},"v":{"docs":{},"h":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"_":{"docs":{},"r":{"docs":{},"n":{"docs":{},"g":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},".":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"=":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}}}}}}}},"h":{"1":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}},"docs":{}},"v":{"1":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373}},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}},":":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.00437636761487965}}}},"d":{"docs":{},"a":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}},":":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"y":{"docs":{},"(":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},".":{"docs":{},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}},"将":{"docs":{},"会":{"docs":{},"储":{"docs":{},"存":{"docs":{},"多":{"docs":{},"层":{"docs":{},"感":{"docs":{},"知":{"docs":{},"机":{"docs":{},"的":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"层":{"docs":{},"，":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"d":{"docs":{},"a":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"将":{"docs":{},"会":{"docs":{},"储":{"docs":{},"存":{"docs":{},"连":{"docs":{},"接":{"docs":{},"多":{"docs":{},"层":{"docs":{},"感":{"docs":{},"知":{"docs":{},"机":{"docs":{},"层":{"docs":{},"的":{"docs":{},"降":{"docs":{},"噪":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"。":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"h":{"docs":{},"_":{"docs":{},"g":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"v":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},")":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}},"v":{"0":{"docs":{},"_":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}},"1":{"docs":{},"_":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}},"docs":{}}}}}}}}}}}},"v":{"docs":{},"_":{"docs":{},"g":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"h":{"docs":{},"(":{"docs":{},"h":{"0":{"docs":{},"_":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}},"1":{"docs":{},"_":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"b":{"docs":{},"i":{"docs":{},"a":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}},"s":{"docs":{},")":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},"]":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}},"e":{"docs":{},"d":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0023137436372049976},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0027593818984547464},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.003181336161187699}},"e":{"docs":{},"d":{"docs":{},"）":{"docs":{"./":{"ref":"./","tf":0.011494252873563218},"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"e":{"docs":{},")":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},")":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.005266622778143515},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.005302226935312832}}}}}}}},"c":{"docs":{},"k":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373}},"e":{"docs":{},"d":{"docs":{},"d":{"docs":{},"a":{"docs":{},"a":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}},"b":{"docs":{},"l":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}},"t":{"docs":{},"e":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.005302226935312832}},"'":{"docs":{},"'":{"docs":{},"'":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}}}},"e":{"docs":{},"p":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.005302226935312832}}}},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}},"p":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}},"p":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"i":{"docs":{},"s":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}},"技":{"docs":{},"术":{"docs":{},"需":{"docs":{},"要":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"数":{"docs":{},"据":{"docs":{},"分":{"docs":{},"割":{"docs":{},"为":{"docs":{},"训":{"docs":{},"练":{"docs":{},"集":{"docs":{},"、":{"docs":{},"验":{"docs":{},"证":{"docs":{},"集":{"docs":{},"、":{"docs":{},"测":{"docs":{},"试":{"docs":{},"集":{"docs":{},"。":{"docs":{},"测":{"docs":{},"试":{"docs":{},"集":{"docs":{},"使":{"docs":{},"用":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"的":{"docs":{},"随":{"docs":{},"机":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"下":{"docs":{},"降":{"docs":{},"来":{"docs":{},"对":{"docs":{},"目":{"docs":{},"标":{"docs":{},"函":{"docs":{},"数":{"docs":{},"进":{"docs":{},"行":{"docs":{},"逼":{"docs":{},"近":{"docs":{},"。":{"docs":{},"同":{"docs":{},"时":{"docs":{},"引":{"docs":{},"入":{"docs":{},"l":{"1":{"docs":{},"/":{"docs":{},"l":{"2":{"docs":{},"正":{"docs":{},"则":{"docs":{},"项":{"docs":{},"来":{"docs":{},"应":{"docs":{},"对":{"docs":{},"过":{"docs":{},"拟":{"docs":{},"合":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"监":{"docs":{},"控":{"docs":{},"模":{"docs":{},"型":{"docs":{},"在":{"docs":{},"验":{"docs":{},"证":{"docs":{},"集":{"docs":{},"上":{"docs":{},"的":{"docs":{},"表":{"docs":{},"现":{"docs":{},"来":{"docs":{},"应":{"docs":{},"对":{"docs":{},"过":{"docs":{},"拟":{"docs":{},"合":{"docs":{},"。":{"docs":{},"验":{"docs":{},"证":{"docs":{},"集":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"我":{"docs":{},"们":{"docs":{},"从":{"docs":{},"未":{"docs":{},"在":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"下":{"docs":{},"降":{"docs":{},"中":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"也":{"docs":{},"不":{"docs":{},"在":{"docs":{},"测":{"docs":{},"试":{"docs":{},"集":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"集":{"docs":{},"合":{"docs":{},"，":{"docs":{},"它":{"docs":{},"被":{"docs":{},"认":{"docs":{},"为":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"测":{"docs":{},"试":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"表":{"docs":{},"达":{"docs":{},"。":{"docs":{},"当":{"docs":{},"在":{"docs":{},"验":{"docs":{},"证":{"docs":{},"集":{"docs":{},"上":{"docs":{},"，":{"docs":{},"模":{"docs":{},"型":{"docs":{},"的":{"docs":{},"表":{"docs":{},"现":{"docs":{},"不":{"docs":{},"再":{"docs":{},"提":{"docs":{},"高":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"表":{"docs":{},"现":{"docs":{},"更":{"docs":{},"差":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"启":{"docs":{},"发":{"docs":{},"式":{"docs":{},"算":{"docs":{},"法":{"docs":{},"应":{"docs":{},"该":{"docs":{},"放":{"docs":{},"弃":{"docs":{},"继":{"docs":{},"续":{"docs":{},"优":{"docs":{},"化":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"关":{"docs":{},"键":{"docs":{},"。":{"docs":{},"它":{"docs":{},"们":{"docs":{},"都":{"docs":{},"是":{"docs":{},"来":{"docs":{},"统":{"docs":{},"计":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"中":{"docs":{},"分":{"docs":{},"类":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"样":{"docs":{},"例":{"docs":{},"数":{"docs":{},"。":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"随":{"docs":{},"机":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"下":{"docs":{},"降":{"docs":{},"是":{"docs":{},"与":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"l":{"2":{"docs":{},"正":{"docs":{},"则":{"docs":{},"化":{"docs":{},"相":{"docs":{},"似":{"docs":{},"的":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"去":{"docs":{},"实":{"docs":{},"现":{"docs":{},"对":{"docs":{},"连":{"docs":{},"续":{"docs":{},"性":{"docs":{},"输":{"docs":{},"入":{"docs":{},"有":{"docs":{},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"重":{"docs":{},"建":{"docs":{},"，":{"docs":{},"包":{"docs":{},"含":{"docs":{},"非":{"docs":{},"线":{"docs":{},"性":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"单":{"docs":{},"元":{"docs":{},"的":{"docs":{},"单":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"层":{"docs":{},"的":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"需":{"docs":{},"要":{"docs":{},"非":{"docs":{},"常":{"docs":{},"小":{"docs":{},"的":{"docs":{},"权":{"docs":{},"值":{"docs":{},"在":{"docs":{},"第":{"docs":{},"一":{"docs":{},"（":{"docs":{},"编":{"docs":{},"码":{"docs":{},"）":{"docs":{},"层":{"docs":{},"，":{"docs":{},"以":{"docs":{},"使":{"docs":{},"得":{"docs":{},"将":{"docs":{},"非":{"docs":{},"线":{"docs":{},"性":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"单":{"docs":{},"元":{"docs":{},"进":{"docs":{},"入":{"docs":{},"他":{"docs":{},"们":{"docs":{},"的":{"docs":{},"线":{"docs":{},"性":{"docs":{},"区":{"docs":{},"域":{"docs":{},"（":{"docs":{},"参":{"docs":{},"考":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"函":{"docs":{},"数":{"docs":{},"）":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"在":{"docs":{},"第":{"docs":{},"二":{"docs":{},"（":{"docs":{},"解":{"docs":{},"码":{"docs":{},"）":{"docs":{},"层":{"docs":{},"有":{"docs":{},"更":{"docs":{},"大":{"docs":{},"的":{"docs":{},"权":{"docs":{},"值":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"输":{"docs":{},"入":{"docs":{},"，":{"docs":{},"非":{"docs":{},"常":{"docs":{},"大":{"docs":{},"的":{"docs":{},"权":{"docs":{},"值":{"docs":{},"也":{"docs":{},"需":{"docs":{},"要":{"docs":{},"彻":{"docs":{},"底":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"化":{"docs":{},"重":{"docs":{},"构":{"docs":{},"误":{"docs":{},"差":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"隐":{"docs":{},"性":{"docs":{},"的":{"docs":{},"或":{"docs":{},"者":{"docs":{},"显":{"docs":{},"性":{"docs":{},"的":{"docs":{},"正":{"docs":{},"则":{"docs":{},"化":{"docs":{},"将":{"docs":{},"使":{"docs":{},"得":{"docs":{},"获":{"docs":{},"得":{"docs":{},"大":{"docs":{},"权":{"docs":{},"值":{"docs":{},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"方":{"docs":{},"案":{"docs":{},"变":{"docs":{},"得":{"docs":{},"困":{"docs":{},"难":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"最":{"docs":{},"优":{"docs":{},"化":{"docs":{},"算":{"docs":{},"法":{"docs":{},"发":{"docs":{},"现":{"docs":{},"在":{"docs":{},"训":{"docs":{},"练":{"docs":{},"样":{"docs":{},"本":{"docs":{},"中":{"docs":{},"表":{"docs":{},"现":{"docs":{},"好":{"docs":{},"的":{"docs":{},"编":{"docs":{},"码":{"docs":{},"。":{"docs":{},"这":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"，":{"docs":{},"表":{"docs":{},"达":{"docs":{},"是":{"docs":{},"利":{"docs":{},"用":{"docs":{},"训":{"docs":{},"练":{"docs":{},"集":{"docs":{},"的":{"docs":{},"统":{"docs":{},"计":{"docs":{},"规":{"docs":{},"律":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"是":{"docs":{},"复":{"docs":{},"制":{"docs":{},"输":{"docs":{},"入":{"docs":{},"。":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"或":{"docs":{},"l":{"1":{"docs":{},"/":{"docs":{},"l":{"2":{"docs":{},"惩":{"docs":{},"罚":{"docs":{},"）":{"docs":{},"，":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"节":{"docs":{},"点":{"docs":{},"数":{"docs":{},"和":{"docs":{},"泛":{"docs":{},"化":{"docs":{},"表":{"docs":{},"现":{"docs":{},"的":{"docs":{},"分":{"docs":{},"布":{"docs":{},"图":{"docs":{},"，":{"docs":{},"将":{"docs":{},"呈":{"docs":{},"现":{"docs":{},"u":{"docs":{},"型":{"docs":{},"（":{"docs":{},"即":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"节":{"docs":{},"点":{"docs":{},"越":{"docs":{},"多":{"docs":{},"，":{"docs":{},"在":{"docs":{},"后":{"docs":{},"期":{"docs":{},"并":{"docs":{},"不":{"docs":{},"能":{"docs":{},"提":{"docs":{},"高":{"docs":{},"泛":{"docs":{},"化":{"docs":{},"性":{"docs":{},"）":{"docs":{},"。":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}},"代":{"docs":{},"码":{"docs":{},"取":{"docs":{},"出":{"docs":{},"了":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"它":{"docs":{},"和":{"docs":{},"m":{"docs":{},"l":{"docs":{},"p":{"docs":{},"中":{"docs":{},"是":{"docs":{},"一":{"docs":{},"样":{"docs":{},"的":{"docs":{},"。":{"docs":{},"有":{"docs":{},"兴":{"docs":{},"趣":{"docs":{},"的":{"docs":{},"读":{"docs":{},"者":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"阅":{"docs":{},"读":{"docs":{},"教":{"docs":{},"程":{"docs":{},"开":{"docs":{},"头":{"docs":{},"的":{"docs":{},"源":{"docs":{},"代":{"docs":{},"码":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}},"e":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.006535947712418301},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.004901960784313725},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.005266622778143515},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.012725344644750796}},"d":{"docs":{},"_":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"x":{"docs":{},"y":{"docs":{},")":{"docs":{},":":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}},"i":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},"x":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}},"p":{"docs":{},"e":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0033112582781456954},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0063604240282685515}},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}}}}},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}},"m":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.004415011037527594},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},")":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}}}}},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}},"z":{"docs":{},"e":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.003239241092086997},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0035335689045936395},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.00437636761487965},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},"=":{"docs":{},"(":{"docs":{},"n":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}},"v":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}},"b":{"docs":{},"_":{"docs":{},"s":{"docs":{},"h":{"docs":{},"p":{"docs":{},")":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}},"w":{"docs":{},"_":{"docs":{},"s":{"docs":{},"h":{"docs":{},"p":{"docs":{},")":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}},"q":{"docs":{},"u":{"docs":{},"a":{"docs":{},"r":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797}}}}},"r":{"docs":{},"t":{"docs":{},"(":{"6":{"docs":{},".":{"docs":{},"/":{"docs":{},"(":{"docs":{},"n":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"+":{"docs":{},"n":{"docs":{},"_":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},")":{"docs":{},")":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}}}}}}}}}}}},"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}},"y":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.013071895424836602},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.007403979639055993},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.003863134657836645},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.005924950625411455},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.008483563096500531}}}}}},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"x":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}},":":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}}}}},"a":{"docs":{},"n":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.003181336161187699}}}}},"g":{"docs":{},"d":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"_":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"m":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"=":{"0":{"docs":{},".":{"1":{"3":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"i":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.004627487274409995},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.005518763796909493},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"i":{"docs":{},"(":{"docs":{},"w":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"x":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576}},".":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576}}}}}},"e":{"docs":{},"c":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}}}},"u":{"docs":{},"i":{"docs":{},"t":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}},"m":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},"_":{"docs":{},"{":{"docs":{},"k":{"docs":{},"=":{"1":{"docs":{},"}":{"docs":{},"^":{"docs":{},"d":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}},"docs":{}}}}}},"c":{"docs":{},"h":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}},"b":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}},"p":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}},"r":{"docs":{},"e":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"(":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}},"w":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},"'":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}},"m":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797}}}}}},"d":{"docs":{},"a":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.005470459518599562}},"(":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"o":{"docs":{},"b":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},")":{"docs":{},":":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"x":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"x":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}},"r":{"docs":{},"m":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}},".":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}},"s":{"docs":{},"t":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373}},"_":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}},"_":{"docs":{},"i":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}},"e":{"docs":{},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}},"_":{"docs":{},"i":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}},"x":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}},"y":{"docs":{},")":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"]":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}},"[":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}},"l":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"=":{"0":{"docs":{},".":{"0":{"1":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},"t":{"docs":{},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"k":{"docs":{},"s":{"docs":{},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.008480565371024734}},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}}},";":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}},"d":{"docs":{},"i":{"docs":{},"o":{"docs":{},"u":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{"./":{"ref":"./","tf":0.022988505747126436},"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.017973856209150325},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.003239241092086997},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0065832784726793945},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0042417815482502655}},".":{"docs":{"./":{"ref":"./","tf":0.011494252873563218},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.00437636761487965}},"[":{"docs":{},"x":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},",":{"docs":{},"y":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"]":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"]":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"_":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}}}}}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"(":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"y":{"docs":{},".":{"docs":{},"a":{"docs":{},"s":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"_":{"docs":{},"x":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}},"y":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}},"e":{"docs":{},"=":{"docs":{},"b":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}},"w":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"w":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"y":{"docs":{},".":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"(":{"docs":{},"n":{"docs":{},"_":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"(":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.003239241092086997},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.005266622778143515},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}}}}}}}}}},"d":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"4":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"docs":{}}}}}}}},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},":":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"m":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{},".":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},"x":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}},"o":{"docs":{},"p":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}},"r":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}},"/":{"docs":{},"p":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"技":{"docs":{},"巧":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{},"如":{"docs":{},"下":{"docs":{},"。":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}},"的":{"docs":{},"进":{"docs":{},"阶":{"docs":{},"（":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"）":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}},"_":{"docs":{},"r":{"docs":{},"n":{"docs":{},"g":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.003949967083607637},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.003181336161187699}},":":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0032916392363396972},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373}}},"=":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"e":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"_":{"docs":{},"r":{"docs":{},"n":{"docs":{},"g":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}},".":{"docs":{},"b":{"docs":{},"i":{"docs":{},"n":{"docs":{},"o":{"docs":{},"m":{"docs":{},"i":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.004901960784313725},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}},"t":{"docs":{},"a":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}},"：":{"docs":{},"给":{"docs":{},"定":{"docs":{},"模":{"docs":{},"型":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"集":{"docs":{},"合":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}},"i":{"docs":{},"r":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.011494252873563218},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}},"n":{"docs":{},"g":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"s":{"docs":{},")":{"docs":{},".":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}},"a":{"docs":{},"t":{"docs":{},")":{"docs":{},".":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"g":{"docs":{},"h":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}},"e":{"docs":{},"e":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}},"u":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0028268551236749115}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.011494252873563218},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}},"i":{"docs":{},"n":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.003239241092086997},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0016556291390728477},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.007658643326039387},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}},"e":{"docs":{},"s":{"docs":{},":":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},"_":{"docs":{},"i":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}},"x":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},":":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}},":":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}}},"y":{"docs":{},")":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}},"[":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}}}}},"d":{"docs":{},"a":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}},"f":{"docs":{},"n":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},":":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}},"'":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}},"n":{"docs":{},"g":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0019749835418038184}}},"i":{"docs":{},"g":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}},"i":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},"g":{"docs":{},"g":{"docs":{},"e":{"docs":{},"r":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}},"a":{"docs":{},"l":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576}}}}},"u":{"docs":{},"e":{"docs":{},":":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"'":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}},"u":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.022988505747126436},"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"a":{"docs":{},"l":{"docs":{},",":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}}}}}},"p":{"docs":{},"l":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"）":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"监":{"docs":{},"督":{"docs":{},"微":{"docs":{},"调":{"docs":{},"，":{"docs":{},"当":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"最":{"docs":{},"小":{"docs":{},"化":{"docs":{},"一":{"docs":{},"个":{"docs":{},"监":{"docs":{},"督":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"预":{"docs":{},"测":{"docs":{},"误":{"docs":{},"差":{"docs":{},"吧":{"docs":{},"。":{"docs":{},"为":{"docs":{},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"现":{"docs":{},"在":{"docs":{},"网":{"docs":{},"络":{"docs":{},"的":{"docs":{},"顶":{"docs":{},"端":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"回":{"docs":{},"归":{"docs":{},"层":{"docs":{},"（":{"docs":{},"使":{"docs":{},"输":{"docs":{},"出":{"docs":{},"层":{"docs":{},"的":{"docs":{},"编":{"docs":{},"码":{"docs":{},"更":{"docs":{},"加":{"docs":{},"精":{"docs":{},"确":{"docs":{},"）":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"我":{"docs":{},"们":{"docs":{},"像":{"docs":{},"训":{"docs":{},"练":{"docs":{},"多":{"docs":{},"层":{"docs":{},"感":{"docs":{},"知":{"docs":{},"器":{"docs":{},"一":{"docs":{},"样":{"docs":{},"训":{"docs":{},"练":{"docs":{},"整":{"docs":{},"个":{"docs":{},"网":{"docs":{},"络":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"每":{"docs":{},"个":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"的":{"docs":{},"机":{"docs":{},"的":{"docs":{},"编":{"docs":{},"码":{"docs":{},"模":{"docs":{},"块":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"是":{"docs":{},"有":{"docs":{},"监":{"docs":{},"督":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"训":{"docs":{},"练":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"目":{"docs":{},"标":{"docs":{},"类":{"docs":{},"别":{"docs":{},"（":{"docs":{},"更":{"docs":{},"多":{"docs":{},"细":{"docs":{},"节":{"docs":{},"请":{"docs":{},"看":{"docs":{},"多":{"docs":{},"层":{"docs":{},"感":{"docs":{},"知":{"docs":{},"机":{"docs":{},"）":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"循":{"docs":{},"环":{"docs":{},"和":{"docs":{},"多":{"docs":{},"层":{"docs":{},"感":{"docs":{},"知":{"docs":{},"机":{"docs":{},"中":{"docs":{},"的":{"docs":{},"非":{"docs":{},"常":{"docs":{},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"不":{"docs":{},"同":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"使":{"docs":{},"用":{"docs":{},"在":{"docs":{},"b":{"docs":{},"u":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"中":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"新":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"时":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"构":{"docs":{},"建":{"docs":{},"函":{"docs":{},"数":{"docs":{},"（":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"，":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"，":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"函":{"docs":{},"数":{"docs":{},"）":{"docs":{},"。":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"n":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"y":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}},"docs":{}}}}}}}}}}}}}},"g":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"p":{"docs":{},"_":{"docs":{},"y":{"docs":{},"_":{"docs":{},"g":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"x":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"y":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}},"c":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"=":{"docs":{},"c":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982}}}}}}}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"a":{"docs":{},"b":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},")":{"docs":{},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"1":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},"docs":{},"p":{"docs":{},"_":{"docs":{},"y":{"docs":{},"_":{"docs":{},"g":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"x":{"docs":{},")":{"docs":{},"[":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"y":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"q":{"docs":{},"(":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"p":{"docs":{},"_":{"docs":{},"y":{"docs":{},"_":{"docs":{},"g":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"x":{"docs":{},")":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"x":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"'":{"docs":{},")":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}},"l":{"docs":{},"r":{"docs":{},"'":{"docs":{},")":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"'":{"docs":{},"y":{"docs":{},"'":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"1":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}},"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"p":{"docs":{},"_":{"docs":{},"y":{"docs":{},"_":{"docs":{},"g":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"x":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}}}}}}}}}}}}}}},"z":{"docs":{},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},"(":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}},"'":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"'":{"docs":{},")":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"'":{"docs":{},"x":{"docs":{},"'":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"'":{"docs":{},")":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"(":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"l":{"docs":{},"p":{"docs":{},"[":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"y":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{},",":{"docs":{},"y":{"docs":{},"]":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}},"t":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"p":{"docs":{},"_":{"docs":{},"y":{"docs":{},"_":{"docs":{},"g":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"x":{"docs":{},")":{"docs":{},"[":{"docs":{},"t":{"docs":{},".":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"y":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},")":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"q":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"y":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"y":{"docs":{},"(":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"q":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"(":{"docs":{},"t":{"docs":{},".":{"docs":{},"d":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},"_":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}},"t":{"docs":{},".":{"docs":{},"d":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{},"]":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}},"v":{"docs":{},"_":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}}}}}},"i":{"docs":{},"s":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"4":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"'":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}},"docs":{}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"=":{"docs":{},"'":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"'":{"docs":{},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"h":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"4":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"=":{"docs":{},"'":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"'":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"(":{"docs":{},"w":{"docs":{},"x":{"docs":{},"_":{"docs":{},"b":{"docs":{},")":{"docs":{},")":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}},"i":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},"m":{"docs":{},"e":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0027593818984547464}},".":{"docs":{},"c":{"docs":{},"l":{"docs":{},"o":{"docs":{},"c":{"docs":{},"k":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}},"(":{"docs":{},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}}}}}}}}},"s":{"docs":{},".":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"docs":{},"x":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}},"e":{"docs":{},"_":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"=":{"docs":{},"(":{"1":{"0":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}},"docs":{}},"docs":{}}}}}}},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"=":{"docs":{},"(":{"1":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}},"docs":{}}}}}}}}}}}}}},"w":{"docs":{},"o":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0033112582781456954},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982}},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}},"c":{"docs":{},"k":{"docs":{},"l":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}},"n":{"docs":{},"h":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.006070640176600441}},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},",":{"docs":{},"w":{"docs":{},")":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}}}}}},".":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}},"o":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}},"p":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}},"o":{"docs":{},"l":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"k":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}}}}},"i":{"docs":{},"c":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.022988505747126436}}}}}},"t":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.006622516556291391},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.005266622778143515},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.015906680805938492}},"s":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797}}},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576}},".":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}}}}},"s":{"docs":{"./":{"ref":"./","tf":0.022988505747126436},"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.004901960784313725},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0041647385469689956},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.009381898454746136},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.007899934167215274},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0087527352297593},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0042417815482502655}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}},"e":{"docs":{},"d":{"docs":{},".":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0037019898195279964},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.004415011037527594},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0028268551236749115},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.005266622778143515},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.00437636761487965},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.006362672322375398}},"e":{"docs":{},"s":{"docs":{},"=":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}}}}}}}}}},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}},".":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"a":{"docs":{},"p":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}},"[":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"]":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"]":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"，":{"docs":{},"用":{"docs":{},"以":{"docs":{},"更":{"docs":{},"新":{"docs":{},"每":{"docs":{},"一":{"docs":{},"步":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{},"g":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"典":{"docs":{},"，":{"docs":{},"用":{"docs":{},"以":{"docs":{},"表":{"docs":{},"示":{"docs":{},"象":{"docs":{},"征":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"和":{"docs":{},"你":{"docs":{},"在":{"docs":{},"该":{"docs":{},"步":{"docs":{},"中":{"docs":{},"表":{"docs":{},"示":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"定":{"docs":{},"义":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{},"d":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}},"r":{"docs":{},"l":{"docs":{},"l":{"docs":{},"i":{"docs":{},"b":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}},".":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.004415011037527594},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.005266622778143515},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0042417815482502655}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.011494252873563218},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"k":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"(":{"docs":{},".":{"docs":{},"j":{"docs":{},")":{"docs":{},"：":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"一":{"docs":{},"列":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}},"i":{"docs":{},",":{"docs":{},"j":{"docs":{},")":{"docs":{},"：":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"内":{"docs":{},"（":{"docs":{},"i":{"docs":{},"，":{"docs":{},"j":{"docs":{},"）":{"docs":{},"点":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}},".":{"docs":{},")":{"docs":{},"：":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"一":{"docs":{},"行":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"i":{"docs":{},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}},"n":{"docs":{},"t":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},":":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.006622516556291391},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0065832784726793945},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0042417815482502655}},"s":{"docs":{},".":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}}},"：":{"docs":{},"大":{"docs":{},"写":{"docs":{},"字":{"docs":{},"母":{"docs":{},"表":{"docs":{},"示":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"（":{"docs":{},"除":{"docs":{},"非":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"说":{"docs":{},"明":{"docs":{},"）":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}},",":{"docs":{},"b":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}},"n":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}},"o":{"docs":{},"s":{"docs":{},"e":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982}}}}}},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}},"e":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}},"t":{"docs":{},"=":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"b":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}}},"w":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}}}}}}}}}}}}}}}}},"=":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"w":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}},"^":{"docs":{},"{":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"}":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}},"2":{"docs":{},")":{"docs":{},"}":{"docs":{},"(":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}},"docs":{}}}},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797}}}}}},"b":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}}}}}}}},"s":{"docs":{},"h":{"docs":{},"p":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"i":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"\"":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}}}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}},"s":{"docs":{},"e":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}},"'":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}},":":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.003949967083607637},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},"x":{"docs":{},"_":{"docs":{},"b":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}},"z":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},"h":{"docs":{},"e":{"docs":{},"j":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},"_":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504}}}}}}}}}}},".":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}},"i":{"docs":{},"p":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797}},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}},"g":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}},")":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}},"_":{"docs":{},"k":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},")":{"docs":{},"]":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}},"|":{"docs":{},"|":{"docs":{},"^":{"2":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"使":{"docs":{},"用":{"docs":{},"。":{"docs":{},"假":{"docs":{},"如":{"docs":{},"这":{"docs":{},"个":{"docs":{},"输":{"docs":{},"入":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"比":{"docs":{},"特":{"docs":{},"向":{"docs":{},"量":{"docs":{},"或":{"docs":{},"者":{"docs":{},"比":{"docs":{},"特":{"docs":{},"概":{"docs":{},"率":{"docs":{},"向":{"docs":{},"量":{"docs":{},"来":{"docs":{},"表":{"docs":{},"述":{"docs":{},"，":{"docs":{},"重":{"docs":{},"构":{"docs":{},"交":{"docs":{},"叉":{"docs":{},"熵":{"docs":{},"(":{"docs":{},"[":{"docs":{},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"作":{"docs":{},"者":{"docs":{},"/":{"docs":{},"a":{"docs":{},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"回":{"docs":{},"归":{"docs":{},"进":{"docs":{},"行":{"docs":{},"m":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"分":{"docs":{},"类":{"docs":{},"(":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}}}}}}}},"（":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"l":{"docs":{},"e":{"docs":{},"在":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"中":{"docs":{},"储":{"docs":{},"存":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"y":{"docs":{},"的":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"入":{"docs":{},"门":{"docs":{},"（":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.011494252873563218},"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}},"内":{"docs":{},"容":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}}}}}}}}},"卷":{"docs":{},"积":{"docs":{},"神":{"docs":{},"经":{"docs":{},"网":{"docs":{},"络":{"docs":{},"（":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.011494252873563218},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"大":{"docs":{},"的":{"docs":{},"概":{"docs":{},"念":{"docs":{},"是":{"docs":{},"最":{"docs":{},"大":{"docs":{},"池":{"docs":{},"化":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"非":{"docs":{},"线":{"docs":{},"性":{"docs":{},"的":{"docs":{},"降":{"docs":{},"采":{"docs":{},"样":{"docs":{},"形":{"docs":{},"式":{"docs":{},"。":{"docs":{},"最":{"docs":{},"大":{"docs":{},"池":{"docs":{},"化":{"docs":{},"就":{"docs":{},"是":{"docs":{},"将":{"docs":{},"输":{"docs":{},"入":{"docs":{},"图":{"docs":{},"像":{"docs":{},"分":{"docs":{},"割":{"docs":{},"为":{"docs":{},"一":{"docs":{},"系":{"docs":{},"列":{"docs":{},"不":{"docs":{},"重":{"docs":{},"叠":{"docs":{},"的":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"对":{"docs":{},"每":{"docs":{},"个":{"docs":{},"子":{"docs":{},"区":{"docs":{},"域":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"多":{"docs":{},"层":{"docs":{},"感":{"docs":{},"知":{"docs":{},"机":{"docs":{},"的":{"docs":{},"生":{"docs":{},"物":{"docs":{},"灵":{"docs":{},"感":{"docs":{},"变":{"docs":{},"种":{"docs":{},"。":{"docs":{},"从":{"docs":{},"h":{"docs":{},"u":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},"和":{"docs":{},"w":{"docs":{},"i":{"docs":{},"e":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"先":{"docs":{},"前":{"docs":{},"对":{"docs":{},"猫":{"docs":{},"的":{"docs":{},"视":{"docs":{},"觉":{"docs":{},"皮":{"docs":{},"层":{"docs":{},"的":{"docs":{},"研":{"docs":{},"究":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"知":{"docs":{},"道":{"docs":{},"视":{"docs":{},"皮":{"docs":{},"层":{"docs":{},"中":{"docs":{},"含":{"docs":{},"有":{"docs":{},"细":{"docs":{},"胞":{"docs":{},"的":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"分":{"docs":{},"布":{"docs":{},"。":{"docs":{},"这":{"docs":{},"些":{"docs":{},"细":{"docs":{},"胞":{"docs":{},"只":{"docs":{},"对":{"docs":{},"小":{"docs":{},"的":{"docs":{},"视":{"docs":{},"觉":{"docs":{},"子":{"docs":{},"区":{"docs":{},"域":{"docs":{},"敏":{"docs":{},"感":{"docs":{},"，":{"docs":{},"称":{"docs":{},"为":{"docs":{},"感":{"docs":{},"受":{"docs":{},"野":{"docs":{},"。":{"docs":{},"这":{"docs":{},"些":{"docs":{},"子":{"docs":{},"区":{"docs":{},"域":{"docs":{},"平":{"docs":{},"铺":{"docs":{},"来":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"整":{"docs":{},"个":{"docs":{},"视":{"docs":{},"场":{"docs":{},"。":{"docs":{},"这":{"docs":{},"些":{"docs":{},"细":{"docs":{},"胞":{"docs":{},"表":{"docs":{},"现":{"docs":{},"为":{"docs":{},"输":{"docs":{},"入":{"docs":{},"图":{"docs":{},"像":{"docs":{},"空":{"docs":{},"间":{"docs":{},"的":{"docs":{},"局":{"docs":{},"部":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"，":{"docs":{},"非":{"docs":{},"常":{"docs":{},"适":{"docs":{},"合":{"docs":{},"检":{"docs":{},"测":{"docs":{},"自":{"docs":{},"然":{"docs":{},"图":{"docs":{},"像":{"docs":{},"中":{"docs":{},"的":{"docs":{},"强":{"docs":{},"空":{"docs":{},"间":{"docs":{},"局":{"docs":{},"部":{"docs":{},"相":{"docs":{},"关":{"docs":{},"性":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"训":{"docs":{},"练":{"docs":{},"相":{"docs":{},"比":{"docs":{},"与":{"docs":{},"标":{"docs":{},"准":{"docs":{},"的":{"docs":{},"m":{"docs":{},"l":{"docs":{},"p":{"docs":{},"是":{"docs":{},"相":{"docs":{},"当":{"docs":{},"困":{"docs":{},"难":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"它":{"docs":{},"添":{"docs":{},"加":{"docs":{},"了":{"docs":{},"更":{"docs":{},"多":{"docs":{},"的":{"docs":{},"超":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{},"当":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"应":{"docs":{},"用":{"docs":{},"学":{"docs":{},"习":{"docs":{},"率":{"docs":{},"和":{"docs":{},"正":{"docs":{},"则":{"docs":{},"化":{"docs":{},"的":{"docs":{},"规":{"docs":{},"则":{"docs":{},"下":{"docs":{},"，":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"也":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"优":{"docs":{},"化":{"docs":{},"c":{"docs":{},"n":{"docs":{},"n":{"docs":{},"s":{"docs":{},"被":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"：":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"在":{"docs":{},"相":{"docs":{},"邻":{"docs":{},"层":{"docs":{},"的":{"docs":{},"神":{"docs":{},"经":{"docs":{},"元":{"docs":{},"之":{"docs":{},"间":{"docs":{},"实":{"docs":{},"施":{"docs":{},"局":{"docs":{},"部":{"docs":{},"连":{"docs":{},"接":{"docs":{},"模":{"docs":{},"式":{"docs":{},"来":{"docs":{},"检":{"docs":{},"测":{"docs":{},"局":{"docs":{},"部":{"docs":{},"空":{"docs":{},"间":{"docs":{},"相":{"docs":{},"关":{"docs":{},"性":{"docs":{},"。":{"docs":{},"换":{"docs":{},"句":{"docs":{},"话":{"docs":{},"说":{"docs":{},"就":{"docs":{},"是":{"docs":{},"，":{"docs":{},"第":{"docs":{},"m":{"docs":{},"层":{"docs":{},"的":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"单":{"docs":{},"元":{"docs":{},"的":{"docs":{},"输":{"docs":{},"入":{"docs":{},"来":{"docs":{},"自":{"docs":{},"第":{"docs":{},"m":{"docs":{},"－":{"1":{"docs":{},"层":{"docs":{},"单":{"docs":{},"元":{"docs":{},"的":{"docs":{},"子":{"docs":{},"集":{"docs":{},"，":{"docs":{},"单":{"docs":{},"元":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"空":{"docs":{},"间":{"docs":{},"上":{"docs":{},"的":{"docs":{},"感":{"docs":{},"受":{"docs":{},"野":{"docs":{},"连":{"docs":{},"接":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"如":{"docs":{},"下":{"docs":{},"的":{"docs":{},"图":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"：":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"操":{"docs":{},"作":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"是":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"实":{"docs":{},"现":{"docs":{},"卷":{"docs":{},"积":{"docs":{},"层":{"docs":{},"的":{"docs":{},"主":{"docs":{},"要":{"docs":{},"消":{"docs":{},"耗":{"docs":{},"。":{"docs":{},"卷":{"docs":{},"积":{"docs":{},"操":{"docs":{},"作":{"docs":{},"通":{"docs":{},"过":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"v":{"2":{"docs":{},"d":{"docs":{},"，":{"docs":{},"它":{"docs":{},"包":{"docs":{},"括":{"docs":{},"两":{"docs":{},"个":{"docs":{},"输":{"docs":{},"入":{"docs":{},"符":{"docs":{},"号":{"docs":{},"：":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"受":{"docs":{},"限":{"docs":{},"波":{"docs":{},"尔":{"docs":{},"兹":{"docs":{},"曼":{"docs":{},"机":{"docs":{},"（":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.011494252873563218},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}},"b":{"docs":{},"m":{"docs":{},"）":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}},"多":{"docs":{},"层":{"docs":{},"感":{"docs":{},"知":{"docs":{},"机":{"docs":{},"（":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{"./":{"ref":"./","tf":0.011494252873563218},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}},"层":{"docs":{},"叠":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"a":{"docs":{},"k":{"docs":{},"e":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}}}}}}}}}}},"降":{"docs":{},"噪":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"（":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}}}}}}}}}}}}}}}},"深":{"docs":{},"度":{"docs":{},"学":{"docs":{},"习":{"docs":{},"教":{"docs":{},"程":{"docs":{},"中":{"docs":{},"文":{"docs":{},"版":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}}}},"的":{"docs":{},"监":{"docs":{},"督":{"docs":{},"优":{"docs":{},"化":{"docs":{},"入":{"docs":{},"门":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}},"版":{"docs":{},"权":{"docs":{},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}}}}}}}}}}},"简":{"docs":{},"介":{"docs":{"./":{"ref":"./","tf":10}}}},"翻":{"docs":{},"译":{"docs":{},"者":{"docs":{},"/":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}}}}}}}}}}},"这":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"翻":{"docs":{},"译":{"docs":{},"自":{"docs":{},"深":{"docs":{},"度":{"docs":{},"学":{"docs":{},"习":{"0":{"docs":{},".":{"1":{"docs":{},"文":{"docs":{},"档":{"docs":{},"的":{"docs":{},"中":{"docs":{},"文":{"docs":{},"教":{"docs":{},"程":{"docs":{},"。":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"教":{"docs":{},"程":{"docs":{},"里":{"docs":{},"面":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"和":{"docs":{},"模":{"docs":{},"型":{"docs":{},"都":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"p":{"docs":{},"y":{"docs":{},"h":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"和":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"实":{"docs":{},"现":{"docs":{},"的":{"docs":{},"。":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"著":{"docs":{},"名":{"docs":{},"的":{"docs":{},"第":{"docs":{},"三":{"docs":{},"方":{"docs":{},"库":{"docs":{},"，":{"docs":{},"允":{"docs":{},"许":{"docs":{},"程":{"docs":{},"序":{"docs":{},"员":{"docs":{},"使":{"docs":{},"用":{"docs":{},"g":{"docs":{},"p":{"docs":{},"u":{"docs":{},"或":{"docs":{},"者":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"去":{"docs":{},"运":{"docs":{},"行":{"docs":{},"他":{"docs":{},"的":{"docs":{},"p":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"代":{"docs":{},"码":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}},"对":{"docs":{},"优":{"docs":{},"化":{"docs":{},"章":{"docs":{},"节":{"docs":{},"的":{"docs":{},"总":{"docs":{},"结":{"docs":{},"。":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}},"个":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},"应":{"docs":{},"该":{"docs":{},"要":{"docs":{},"比":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"更":{"docs":{},"小":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"代":{"docs":{},"码":{"docs":{},"应":{"docs":{},"该":{"docs":{},"至":{"docs":{},"少":{"docs":{},"检":{"docs":{},"查":{"docs":{},"了":{"docs":{},"两":{"docs":{},"次":{"docs":{},"，":{"docs":{},"在":{"docs":{},"使":{"docs":{},"用":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"之":{"docs":{},"前":{"docs":{},"。":{"docs":{},"这":{"docs":{},"就":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{},"等":{"docs":{},"式":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"教":{"docs":{},"程":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"巩":{"docs":{},"固":{"docs":{},"研":{"docs":{},"究":{"docs":{},"生":{"docs":{},"或":{"docs":{},"者":{"docs":{},"本":{"docs":{},"科":{"docs":{},"生":{"docs":{},"的":{"docs":{},"机":{"docs":{},"器":{"docs":{},"学":{"docs":{},"习":{"docs":{},"课":{"docs":{},"程":{"docs":{},"，":{"docs":{},"但":{"docs":{},"我":{"docs":{},"们":{"docs":{},"确":{"docs":{},"实":{"docs":{},"对":{"docs":{},"一":{"docs":{},"些":{"docs":{},"重":{"docs":{},"要":{"docs":{},"的":{"docs":{},"概":{"docs":{},"念":{"docs":{},"（":{"docs":{},"和":{"docs":{},"公":{"docs":{},"式":{"docs":{},"）":{"docs":{},"做":{"docs":{},"了":{"docs":{},"的":{"docs":{},"快":{"docs":{},"速":{"docs":{},"的":{"docs":{},"概":{"docs":{},"述":{"docs":{},"，":{"docs":{},"来":{"docs":{},"确":{"docs":{},"保":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"谈":{"docs":{},"论":{"docs":{},"同":{"docs":{},"个":{"docs":{},"概":{"docs":{},"念":{"docs":{},"。":{"docs":{},"同":{"docs":{},"时":{"docs":{},"，":{"docs":{},"你":{"docs":{},"也":{"docs":{},"需":{"docs":{},"要":{"docs":{},"去":{"docs":{},"下":{"docs":{},"载":{"docs":{},"数":{"docs":{},"据":{"docs":{},"集":{"docs":{},"，":{"docs":{},"以":{"docs":{},"便":{"docs":{},"可":{"docs":{},"以":{"docs":{},"跑":{"docs":{},"未":{"docs":{},"来":{"docs":{},"课":{"docs":{},"程":{"docs":{},"的":{"docs":{},"样":{"docs":{},"例":{"docs":{},"代":{"docs":{},"码":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"建":{"docs":{},"立":{"docs":{},"在":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"降":{"docs":{},"噪":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"之":{"docs":{},"上":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"建":{"docs":{},"议":{"docs":{},"，":{"docs":{},"对":{"docs":{},"于":{"docs":{},"没":{"docs":{},"有":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"经":{"docs":{},"验":{"docs":{},"的":{"docs":{},"人":{"docs":{},"应":{"docs":{},"该":{"docs":{},"阅":{"docs":{},"读":{"docs":{},"上":{"docs":{},"述":{"docs":{},"章":{"docs":{},"节":{"docs":{},"。":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"据":{"docs":{},"以":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"被":{"docs":{},"存":{"docs":{},"储":{"docs":{},"在":{"docs":{},"g":{"docs":{},"p":{"docs":{},"u":{"docs":{},"上":{"docs":{},"（":{"docs":{},"d":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},"被":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"u":{"docs":{},"g":{"docs":{},".":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},"x":{"docs":{},"）":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"将":{"docs":{},"标":{"docs":{},"签":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"型":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"算":{"docs":{},"法":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"有":{"docs":{},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"表":{"docs":{},"现":{"docs":{},"，":{"docs":{},"当":{"docs":{},"我":{"docs":{},"们":{"docs":{},"通":{"docs":{},"过":{"docs":{},"统":{"docs":{},"计":{"docs":{},"显":{"docs":{},"著":{"docs":{},"性":{"docs":{},"的":{"docs":{},"测":{"docs":{},"试":{"docs":{},"来":{"docs":{},"代":{"docs":{},"替":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"比":{"docs":{},"较":{"docs":{},"来":{"docs":{},"决":{"docs":{},"定":{"docs":{},"是":{"docs":{},"否":{"docs":{},"增":{"docs":{},"加":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"函":{"docs":{},"数":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"定":{"docs":{},"义":{"docs":{},"如":{"docs":{},"下":{"docs":{},"。":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}},"输":{"docs":{},"出":{"docs":{},"将":{"docs":{},"是":{"docs":{},"如":{"docs":{},"下":{"docs":{},"的":{"docs":{},"格":{"docs":{},"式":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}},"超":{"docs":{},"参":{"docs":{},"数":{"docs":{},"是":{"docs":{},"非":{"docs":{},"常":{"docs":{},"基":{"docs":{},"于":{"docs":{},"数":{"docs":{},"据":{"docs":{},"集":{"docs":{},"的":{"docs":{},"。":{"docs":{},"模":{"docs":{},"糊":{"docs":{},"的":{"docs":{},"来":{"docs":{},"说":{"docs":{},"就":{"docs":{},"是":{"docs":{},"，":{"docs":{},"输":{"docs":{},"入":{"docs":{},"分":{"docs":{},"布":{"docs":{},"越":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"，":{"docs":{},"去":{"docs":{},"模":{"docs":{},"拟":{"docs":{},"它":{"docs":{},"的":{"docs":{},"网":{"docs":{},"络":{"docs":{},"就":{"docs":{},"需":{"docs":{},"要":{"docs":{},"更":{"docs":{},"大":{"docs":{},"的":{"docs":{},"容":{"docs":{},"量":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"单":{"docs":{},"元":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"就":{"docs":{},"要":{"docs":{},"更":{"docs":{},"大":{"docs":{},"。":{"docs":{},"事":{"docs":{},"实":{"docs":{},"上":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"层":{"docs":{},"的":{"docs":{},"权":{"docs":{},"值":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"就":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"直":{"docs":{},"接":{"docs":{},"度":{"docs":{},"量":{"docs":{},"的":{"docs":{},"（":{"docs":{},"输":{"docs":{},"入":{"docs":{},"维":{"docs":{},"度":{"docs":{},"＊":{"docs":{},"输":{"docs":{},"出":{"docs":{},"维":{"docs":{},"度":{"docs":{},"）":{"docs":{},"。":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"降":{"docs":{},"噪":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"是":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"的":{"docs":{},"随":{"docs":{},"机":{"docs":{},"版":{"docs":{},"本":{"docs":{},"。":{"docs":{},"直":{"docs":{},"观":{"docs":{},"上":{"docs":{},"讲":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"降":{"docs":{},"噪":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"做":{"2":{"docs":{},"件":{"docs":{},"事":{"docs":{},"情":{"docs":{},"：":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"对":{"docs":{},"输":{"docs":{},"入":{"docs":{},"进":{"docs":{},"行":{"docs":{},"编":{"docs":{},"码":{"docs":{},"（":{"docs":{},"保":{"docs":{},"护":{"docs":{},"输":{"docs":{},"入":{"docs":{},"信":{"docs":{},"息":{"docs":{},"）":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"去":{"docs":{},"消":{"docs":{},"除":{"docs":{},"输":{"docs":{},"入":{"docs":{},"中":{"docs":{},"的":{"docs":{},"随":{"docs":{},"机":{"docs":{},"差":{"docs":{},"错":{"docs":{},"产":{"docs":{},"生":{"docs":{},"的":{"docs":{},"影":{"docs":{},"响":{"docs":{},"。":{"docs":{},"后":{"docs":{},"者":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"捕":{"docs":{},"捉":{"docs":{},"输":{"docs":{},"入":{"docs":{},"间":{"docs":{},"的":{"docs":{},"统":{"docs":{},"计":{"docs":{},"相":{"docs":{},"关":{"docs":{},"性":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{},"降":{"docs":{},"噪":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"不":{"docs":{},"到":{"docs":{},"的":{"docs":{},"角":{"docs":{},"度":{"docs":{},"来":{"docs":{},"理":{"docs":{},"解":{"docs":{},"（":{"docs":{},"流":{"docs":{},"行":{"docs":{},"学":{"docs":{},"习":{"docs":{},"角":{"docs":{},"度":{"docs":{},"，":{"docs":{},"随":{"docs":{},"机":{"docs":{},"操":{"docs":{},"作":{"docs":{},"角":{"docs":{},"度":{"docs":{},"，":{"docs":{},"自":{"docs":{},"下":{"docs":{},"而":{"docs":{},"上":{"docs":{},"的":{"docs":{},"信":{"docs":{},"息":{"docs":{},"论":{"docs":{},"角":{"docs":{},"度":{"docs":{},"，":{"docs":{},"自":{"docs":{},"上":{"docs":{},"而":{"docs":{},"下":{"docs":{},"的":{"docs":{},"生":{"docs":{},"成":{"docs":{},"模":{"docs":{},"型":{"docs":{},"角":{"docs":{},"度":{"docs":{},"）":{"docs":{},"，":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"这":{"docs":{},"些":{"docs":{},"在":{"docs":{},"v":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"0":{"8":{"docs":{},"中":{"docs":{},"被":{"docs":{},"解":{"docs":{},"释":{"docs":{},"。":{"docs":{},"在":{"docs":{},"b":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"o":{"0":{"9":{"docs":{},"的":{"docs":{},"第":{"7":{"docs":{},".":{"2":{"docs":{},"节":{"docs":{},"有":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"的":{"docs":{},"综":{"docs":{},"述":{"docs":{},"。":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"微":{"docs":{},"调":{"docs":{},"（":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}},"类":{"docs":{},"也":{"docs":{},"提":{"docs":{},"供":{"docs":{},"一":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"去":{"docs":{},"产":{"docs":{},"生":{"docs":{},"与":{"docs":{},"不":{"docs":{},"同":{"docs":{},"层":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"降":{"docs":{},"噪":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"的":{"docs":{},"训":{"docs":{},"练":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{},"它":{"docs":{},"们":{"docs":{},"以":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"返":{"docs":{},"回":{"docs":{},"，":{"docs":{},"第":{"docs":{},"i":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"实":{"docs":{},"现":{"docs":{},"训":{"docs":{},"练":{"docs":{},"第":{"docs":{},"i":{"docs":{},"层":{"docs":{},"的":{"docs":{},"d":{"docs":{},"a":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"还":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"去":{"docs":{},"计":{"docs":{},"算":{"docs":{},"模":{"docs":{},"型":{"docs":{},"的":{"docs":{},"自":{"docs":{},"由":{"docs":{},"能":{"docs":{},"量":{"docs":{},"，":{"docs":{},"以":{"docs":{},"便":{"docs":{},"去":{"docs":{},"计":{"docs":{},"算":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"我":{"docs":{},"们":{"docs":{},"也":{"docs":{},"会":{"docs":{},"返":{"docs":{},"回":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"公":{"docs":{},"式":{"docs":{},"的":{"docs":{},"更":{"docs":{},"多":{"docs":{},"细":{"docs":{},"节":{"docs":{},"推":{"docs":{},"倒":{"docs":{},"，":{"docs":{},"读":{"docs":{},"者":{"docs":{},"可":{"docs":{},"以":{"docs":{},"阅":{"docs":{},"读":{"docs":{},"这":{"docs":{},"一":{"docs":{},"页":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"样":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"，":{"docs":{},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{},"在":{"docs":{},"训":{"docs":{},"练":{"docs":{},"的":{"docs":{},"早":{"docs":{},"期":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"神":{"docs":{},"经":{"docs":{},"元":{"docs":{},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"工":{"docs":{},"作":{"docs":{},"在":{"docs":{},"它":{"docs":{},"激":{"docs":{},"活":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"控":{"docs":{},"制":{"docs":{},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"使":{"docs":{},"得":{"docs":{},"信":{"docs":{},"息":{"docs":{},"可":{"docs":{},"以":{"docs":{},"更":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"前":{"docs":{},"向":{"docs":{},"传":{"docs":{},"导":{"docs":{},"（":{"docs":{},"从":{"docs":{},"输":{"docs":{},"入":{"docs":{},"到":{"docs":{},"输":{"docs":{},"出":{"docs":{},"的":{"docs":{},"激":{"docs":{},"活":{"docs":{},"）":{"docs":{},"和":{"docs":{},"后":{"docs":{},"向":{"docs":{},"传":{"docs":{},"导":{"docs":{},"（":{"docs":{},"从":{"docs":{},"输":{"docs":{},"出":{"docs":{},"到":{"docs":{},"输":{"docs":{},"入":{"docs":{},"的":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"）":{"docs":{},"。":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"节":{"docs":{},"假":{"docs":{},"设":{"docs":{},"读":{"docs":{},"者":{"docs":{},"一":{"docs":{},"节":{"docs":{},"阅":{"docs":{},"读":{"docs":{},"了":{"docs":{},"使":{"docs":{},"用":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"回":{"docs":{},"归":{"docs":{},"进":{"docs":{},"行":{"docs":{},"m":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"分":{"docs":{},"类":{"docs":{},"，":{"docs":{},"多":{"docs":{},"层":{"docs":{},"感":{"docs":{},"知":{"docs":{},"机":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"你":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"g":{"docs":{},"p":{"docs":{},"u":{"docs":{},"上":{"docs":{},"跑":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"你":{"docs":{},"也":{"docs":{},"需":{"docs":{},"要":{"docs":{},"阅":{"docs":{},"读":{"docs":{},"g":{"docs":{},"p":{"docs":{},"u":{"docs":{},"。":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"里":{"docs":{},"s":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"非":{"docs":{},"线":{"docs":{},"性":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"潜":{"docs":{},"在":{"docs":{},"的":{"docs":{},"表":{"docs":{},"达":{"docs":{},"y":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"码":{"docs":{},"，":{"docs":{},"被":{"docs":{},"映":{"docs":{},"射":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"构":{"docs":{},"机":{"docs":{},"z":{"docs":{},"，":{"docs":{},"来":{"docs":{},"重":{"docs":{},"构":{"docs":{},"x":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"映":{"docs":{},"射":{"docs":{},"通":{"docs":{},"过":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"简":{"docs":{},"单":{"docs":{},"转":{"docs":{},"换":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"：":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"其":{"docs":{},"他":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"比":{"docs":{},"输":{"docs":{},"入":{"docs":{},"有":{"docs":{},"更":{"docs":{},"多":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"单":{"docs":{},"元":{"docs":{},"的":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"，":{"docs":{},"去":{"docs":{},"避":{"docs":{},"免":{"docs":{},"只":{"docs":{},"学":{"docs":{},"习":{"docs":{},"它":{"docs":{},"本":{"docs":{},"身":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"在":{"docs":{},"输":{"docs":{},"入":{"docs":{},"的":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"表":{"docs":{},"达":{"docs":{},"中":{"docs":{},"捕":{"docs":{},"捉":{"docs":{},"到":{"docs":{},"有":{"docs":{},"用":{"docs":{},"的":{"docs":{},"东":{"docs":{},"西":{"docs":{},"。":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"添":{"docs":{},"加":{"docs":{},"稀":{"docs":{},"疏":{"docs":{},"性":{"docs":{},"（":{"docs":{},"迫":{"docs":{},"使":{"docs":{},"许":{"docs":{},"多":{"docs":{},"隐":{"docs":{},"单":{"docs":{},"元":{"docs":{},"是":{"0":{"docs":{},"或":{"docs":{},"者":{"docs":{},"接":{"docs":{},"近":{"0":{"docs":{},"）":{"docs":{},"。":{"docs":{},"稀":{"docs":{},"疏":{"docs":{},"性":{"docs":{},"已":{"docs":{},"经":{"docs":{},"被":{"docs":{},"很":{"docs":{},"成":{"docs":{},"功":{"docs":{},"的":{"docs":{},"发":{"docs":{},"挥":{"docs":{},"了":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"o":{"0":{"7":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"0":{"8":{"docs":{},"。":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"，":{"docs":{},"在":{"docs":{},"输":{"docs":{},"入":{"docs":{},"到":{"docs":{},"重":{"docs":{},"建":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"增":{"docs":{},"加":{"docs":{},"从":{"docs":{},"输":{"docs":{},"入":{"docs":{},"到":{"docs":{},"重":{"docs":{},"建":{"docs":{},"的":{"docs":{},"转":{"docs":{},"换":{"docs":{},"中":{"docs":{},"的":{"docs":{},"随":{"docs":{},"机":{"docs":{},"性":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"技":{"docs":{},"术":{"docs":{},"在":{"docs":{},"受":{"docs":{},"限":{"docs":{},"玻":{"docs":{},"尔":{"docs":{},"兹":{"docs":{},"曼":{"docs":{},"机":{"docs":{},"中":{"docs":{},"被":{"docs":{},"使":{"docs":{},"用":{"docs":{},"（":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"去":{"docs":{},"提":{"docs":{},"高":{"docs":{},"代":{"docs":{},"码":{"docs":{},"的":{"docs":{},"运":{"docs":{},"行":{"docs":{},"速":{"docs":{},"度":{"docs":{},"（":{"docs":{},"假":{"docs":{},"定":{"docs":{},"你":{"docs":{},"有":{"docs":{},"足":{"docs":{},"够":{"docs":{},"的":{"docs":{},"可":{"docs":{},"用":{"docs":{},"内":{"docs":{},"存":{"docs":{},"）":{"docs":{},"，":{"docs":{},"是":{"docs":{},"去":{"docs":{},"计":{"docs":{},"算":{"docs":{},"这":{"docs":{},"个":{"docs":{},"网":{"docs":{},"络":{"docs":{},"（":{"docs":{},"直":{"docs":{},"到":{"docs":{},"第":{"docs":{},"k":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"表":{"docs":{},"示":{"docs":{},"马":{"docs":{},"尔":{"docs":{},"可":{"docs":{},"夫":{"docs":{},"链":{"docs":{},"中":{"docs":{},"第":{"docs":{},"n":{"docs":{},"布":{"docs":{},"的":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"单":{"docs":{},"元":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"。":{"docs":{},"这":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"，":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{},"根":{"docs":{},"据":{"docs":{},"概":{"docs":{},"率":{"docs":{},"s":{"docs":{},"i":{"docs":{},"m":{"docs":{},"g":{"docs":{},"(":{"docs":{},"w":{"docs":{},"‘":{"docs":{},"v":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"+":{"docs":{},"c":{"docs":{},"i":{"docs":{},")":{"docs":{},"来":{"docs":{},"随":{"docs":{},"机":{"docs":{},"地":{"docs":{},"被":{"docs":{},"选":{"docs":{},"为":{"0":{"docs":{},"/":{"1":{"docs":{},"。":{"docs":{},"类":{"docs":{},"似":{"docs":{},"地":{"docs":{},"v":{"docs":{},"(":{"docs":{},"n":{"docs":{},"+":{"1":{"docs":{},")":{"docs":{},"也":{"docs":{},"是":{"docs":{},"如":{"docs":{},"此":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"过":{"docs":{},"程":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"下":{"docs":{},"面":{"docs":{},"地":{"docs":{},"图":{"docs":{},"来":{"docs":{},"展":{"docs":{},"现":{"docs":{},"：":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"里":{"docs":{},"面":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"之":{"docs":{},"前":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"降":{"docs":{},"噪":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"轻":{"docs":{},"易":{"docs":{},"的":{"docs":{},"被":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"层":{"docs":{},"叠":{"docs":{},"降":{"docs":{},"噪":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"看":{"docs":{},"作":{"docs":{},"两":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"多":{"docs":{},"层":{"docs":{},"感":{"docs":{},"知":{"docs":{},"机":{"docs":{},"。":{"docs":{},"在":{"docs":{},"预":{"docs":{},"训":{"docs":{},"练":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"第":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"模":{"docs":{},"型":{"docs":{},"看":{"docs":{},"作":{"docs":{},"一":{"docs":{},"系":{"docs":{},"列":{"docs":{},"的":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"分":{"docs":{},"别":{"docs":{},"训":{"docs":{},"练":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"。":{"docs":{},"在":{"docs":{},"第":{"docs":{},"二":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"第":{"docs":{},"二":{"docs":{},"部":{"docs":{},"分":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"两":{"docs":{},"个":{"docs":{},"部":{"docs":{},"分":{"docs":{},"通":{"docs":{},"过":{"docs":{},"分":{"docs":{},"享":{"docs":{},"参":{"docs":{},"数":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"连":{"docs":{},"接":{"docs":{},"。":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"降":{"docs":{},"噪":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}},"器":{"docs":{},"（":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"i":{"docs":{},"s":{"docs":{"./":{"ref":"./","tf":0.011494252873563218}}}}}}}}}},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"i":{"docs":{},"s":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}}},"的":{"docs":{},"思":{"docs":{},"想":{"docs":{},"是":{"docs":{},"很":{"docs":{},"简":{"docs":{},"单":{"docs":{},"饿":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"迫":{"docs":{},"使":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"层":{"docs":{},"去":{"docs":{},"发":{"docs":{},"现":{"docs":{},"更":{"docs":{},"加":{"docs":{},"鲁":{"docs":{},"棒":{"docs":{},"性":{"docs":{},"的":{"docs":{},"特":{"docs":{},"征":{"docs":{},"，":{"docs":{},"避":{"docs":{},"免":{"docs":{},"它":{"docs":{},"只":{"docs":{},"是":{"docs":{},"去":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"学":{"docs":{},"习":{"docs":{},"定":{"docs":{},"义":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"训":{"docs":{},"练":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"去":{"docs":{},"重":{"docs":{},"建":{"docs":{},"被":{"docs":{},"破":{"docs":{},"坏":{"docs":{},"的":{"docs":{},"输":{"docs":{},"入":{"docs":{},"版":{"docs":{},"本":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"叠":{"docs":{},"加":{"docs":{},"起":{"docs":{},"来":{"docs":{},"形":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"深":{"docs":{},"度":{"docs":{},"网":{"docs":{},"络":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"反":{"docs":{},"馈":{"docs":{},"前":{"docs":{},"一":{"docs":{},"层":{"docs":{},"的":{"docs":{},"降":{"docs":{},"噪":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"的":{"docs":{},"潜":{"docs":{},"在":{"docs":{},"表":{"docs":{},"达":{"docs":{},"（":{"docs":{},"输":{"docs":{},"出":{"docs":{},"编":{"docs":{},"码":{"docs":{},"）":{"docs":{},"作":{"docs":{},"为":{"docs":{},"当":{"docs":{},"前":{"docs":{},"层":{"docs":{},"的":{"docs":{},"输":{"docs":{},"入":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"非":{"docs":{},"监":{"docs":{},"督":{"docs":{},"的":{"docs":{},"预":{"docs":{},"学":{"docs":{},"习":{"docs":{},"结":{"docs":{},"构":{"docs":{},"一":{"docs":{},"次":{"docs":{},"只":{"docs":{},"能":{"docs":{},"学":{"docs":{},"习":{"docs":{},"一":{"docs":{},"个":{"docs":{},"层":{"docs":{},"。":{"docs":{},"每":{"docs":{},"一":{"docs":{},"层":{"docs":{},"都":{"docs":{},"被":{"docs":{},"作":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"降":{"docs":{},"噪":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"以":{"docs":{},"最":{"docs":{},"小":{"docs":{},"化":{"docs":{},"重":{"docs":{},"构":{"docs":{},"误":{"docs":{},"差":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"训":{"docs":{},"练":{"docs":{},"。":{"docs":{},"当":{"docs":{},"前":{"docs":{},"k":{"docs":{},"个":{"docs":{},"层":{"docs":{},"被":{"docs":{},"训":{"docs":{},"练":{"docs":{},"完":{"docs":{},"了":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"进":{"docs":{},"行":{"docs":{},"k":{"docs":{},"+":{"1":{"docs":{},"层":{"docs":{},"的":{"docs":{},"训":{"docs":{},"练":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"此":{"docs":{},"时":{"docs":{},"我":{"docs":{},"们":{"docs":{},"才":{"docs":{},"可":{"docs":{},"以":{"docs":{},"计":{"docs":{},"算":{"docs":{},"前":{"docs":{},"一":{"docs":{},"层":{"docs":{},"的":{"docs":{},"编":{"docs":{},"码":{"docs":{},"和":{"docs":{},"潜":{"docs":{},"在":{"docs":{},"表":{"docs":{},"达":{"docs":{},"。":{"docs":{},"当":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"层":{"docs":{},"都":{"docs":{},"被":{"docs":{},"训":{"docs":{},"练":{"docs":{},"了":{"docs":{},"，":{"docs":{},"整":{"docs":{},"个":{"docs":{},"网":{"docs":{},"络":{"docs":{},"进":{"docs":{},"行":{"docs":{},"第":{"docs":{},"二":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"训":{"docs":{},"练":{"docs":{},"，":{"docs":{},"称":{"docs":{},"为":{"docs":{},"微":{"docs":{},"调":{"docs":{},"（":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"\"":{"docs":{},"\"":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}},"\"":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.007866728366496992},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.006622516556291391},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.013824884792626729},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0042417815482502655}},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"i":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0023137436372049976}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"i":{"docs":{},"s":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}},".":{"docs":{},".":{"docs":{},"\"":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"\"":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"\"":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}}},"s":{"docs":{},"i":{"docs":{},"m":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"\"":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}},"#":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.08496732026143791},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.06941230911614993},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.06456953642384106},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.05724381625441696},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.03554970375246873},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.04923413566739606},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.04772004241781548}},"#":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"#":{"docs":{},"#":{"docs":{},"#":{"docs":{},"#":{"docs":{},"#":{"docs":{},"#":{"docs":{},"#":{"docs":{},"#":{"docs":{},"#":{"docs":{},"#":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},"#":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}},"#":{"docs":{},"#":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}},"#":{"docs":{},"#":{"docs":{},"#":{"docs":{},"#":{"docs":{},"#":{"docs":{},"#":{"docs":{},"#":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},"#":{"docs":{},"#":{"docs":{},"#":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"y":{"docs":{},".":{"docs":{},"n":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}},"h":{"docs":{},"e":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}},"c":{"docs":{},"o":{"docs":{},"l":{"docs":{},"s":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}},"'":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373}},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}},"i":{"docs":{},"n":{"docs":{},"t":{"3":{"2":{"docs":{},"'":{"docs":{},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}},"docs":{}},"docs":{}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"1":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}}}}}}}},"r":{"docs":{},"b":{"docs":{},"'":{"docs":{},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"t":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}},"w":{"docs":{},"b":{"docs":{},"'":{"docs":{},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}}}},"'":{"docs":{},"'":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.010604453870625663}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}},"t":{"docs":{},"h":{"docs":{},"i":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}}},".":{"docs":{},".":{"docs":{},".":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373}}}}},"_":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"_":{"docs":{},"'":{"docs":{},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"w":{"docs":{},"w":{"docs":{},"w":{"docs":{},".":{"docs":{},"i":{"docs":{},"r":{"docs":{},"o":{"docs":{},".":{"docs":{},"u":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"/":{"docs":{},"~":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"a":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{},"/":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"/":{"docs":{},"m":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"/":{"docs":{},"m":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"k":{"docs":{},"l":{"docs":{},".":{"docs":{},"g":{"docs":{},"z":{"docs":{},"'":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"p":{"docs":{},"k":{"docs":{},"l":{"docs":{},".":{"docs":{},"g":{"docs":{},"z":{"docs":{},"'":{"docs":{},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}}}}}}}}}}}}}}},"y":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"'":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"[":{"0":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"1":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}}}}}}}},"x":{"docs":{},"'":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0035335689045936395}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}},"(":{"1":{"2":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}}},"d":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576}}}},"2":{"0":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"4":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"/":{"2":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}}},"8":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576}}}},"3":{"docs":{},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576}}}},"4":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576}}}},"5":{"0":{"0":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}},"docs":{}},"docs":{}},"8":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"/":{"2":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}}},"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.005518763796909493},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"`":{"docs":{},"`":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"y":{"docs":{},"`":{"docs":{},"`":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}},"i":{"docs":{},"f":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.005552984729291994},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.004240282685512367},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.006564551422319475}}}}}},".":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"s":{"docs":{},"e":{"docs":{},"e":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"w":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"w":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}},"y":{"docs":{},"m":{"docs":{},"b":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}}}}}}}}}},"o":{"docs":{},"t":{"docs":{},"r":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}},"d":{"docs":{},"a":{"docs":{},")":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"）":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"x":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"x":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},"h":{"docs":{},"e":{"docs":{},"n":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}},",":{"docs":{},"b":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}},"x":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}},"y":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}},"i":{"docs":{},",":{"docs":{},"y":{"docs":{},"_":{"docs":{},"i":{"docs":{},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}},"'":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}},"y":{"docs":{},"'":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}},"(":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}},"\\":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"=":{"docs":{},"\\":{"docs":{},"{":{"docs":{},"w":{"docs":{},",":{"docs":{},"b":{"docs":{},"\\":{"docs":{},"}":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982}}}}}}}}}}}}}}}}},"a":{"2":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}},"3":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}},"4":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}},"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}},"c":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}}},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}},"x":{"docs":{},"b":{"docs":{},"x":{"docs":{},"c":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}},"n":{"docs":{},"d":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"b":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}},"n":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"_":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}},"n":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797}},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997}},"n":{"docs":{},"_":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},")":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},",":{"docs":{},")":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}},".":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}},"e":{"docs":{},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}}}}},"o":{"docs":{},"t":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}},"k":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}},"docs":{}}}}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"x":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797}}}}}},"a":{"docs":{},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}},"l":{"1":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}},"docs":{}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}},"_":{"docs":{},"i":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}},"#":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0028268551236749115}}}}}}}}}}}}},"r":{"docs":{},"b":{"docs":{},"m":{"docs":{},")":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}},"*":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.00980392156862745},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.013882461823229986},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.012693156732891833},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.019081272084805655},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.01184990125082291},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.016411378555798686},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.003181336161187699}},"*":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0019749835418038184},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"*":{"docs":{},"*":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"=":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}},"+":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00925497454881999},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.016556291390728478},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.008480565371024734},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.01184990125082291},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.009846827133479213},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.006362672322375398}}},".":{"2":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"3":{"docs":{},"]":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"5":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}},".":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},".":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.004901960784313725},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}},":":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.004901960784313725},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0033112582781456954},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.005924950625411455},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},":":{"docs":{},"`":{"docs":{},"b":{"docs":{},"`":{"docs":{},".":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}},"w":{"docs":{},"`":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.006941230911614993},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.01379690949227373},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0035335689045936395},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.009874917709019092},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.01312910284463895},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.009544008483563097}}},"n":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.006941230911614993},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.01379690949227373},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0035335689045936395},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.01053324555628703},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.01312910284463895}}}}}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.009893992932862191}}},"]":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.008480565371024734}},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}}},";":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797}}},"=":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.05718954248366013},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.031929662193428965},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.04028697571743929},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.039575971731448764},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.044107965766951945},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.045951859956236324},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.041357370095440084}},"=":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0016556291390728477},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}},"'":{"docs":{},"b":{"docs":{},"'":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}},"w":{"docs":{},"'":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}},"\\":{"docs":{},"n":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}},"'":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}}}}},">":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.005653710247349823},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},">":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},">":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.016339869281045753}}}}},"[":{"0":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},",":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}},",":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"y":{"docs":{},")":{"docs":{},"]":{"docs":{},".":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}},"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},",":{"docs":{},"k":{"docs":{},"]":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}},"docs":{}}},"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.008480565371024734},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"w":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"x":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}},"a":{"1":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}},"docs":{}}},"a":{"1":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}},"docs":{},",":{"docs":{},"b":{"docs":{},",":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},",":{"docs":{},"k":{"docs":{},"]":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"]":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}}}}}}}},"l":{"docs":{},"p":{"docs":{},"[":{"0":{"docs":{},",":{"docs":{},"y":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"]":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}},"docs":{}}}}},"docs":{}}}},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"]":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"w":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}},"b":{"1":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}},"docs":{}},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}},"x":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"1":{"0":{"docs":{},"]":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}},"docs":{}},"docs":{}}}}}},"_":{"docs":{},"k":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}},"[":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0028268551236749115}}},"]":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.005470459518599562}}},".":{"1":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"docs":{}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"i":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}}}}}}}}},"h":{"1":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}},"docs":{}},"v":{"1":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}},"docs":{}}}}}}}}}}}}}}},"`":{"docs":{},"`":{"1":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}},"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},"x":{"docs":{},"`":{"docs":{},"`":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"y":{"docs":{},"`":{"docs":{},"`":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"`":{"docs":{},"`":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"`":{"docs":{},"`":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{},"s":{"docs":{},"h":{"docs":{},"u":{"docs":{},"f":{"docs":{},"f":{"docs":{},"l":{"docs":{},"e":{"docs":{},"`":{"docs":{},"`":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"`":{"docs":{},"`":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576}}}}}}}}}}}}}}}}},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"`":{"docs":{},"`":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"`":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}},"`":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"`":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}}}}}},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"`":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}},"w":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"`":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"`":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}}},"`":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}},"b":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{},"e":{"docs":{},"`":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"`":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"w":{"docs":{},"`":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"`":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}}}}}},"+":{"1":{"docs":{},"`":{"docs":{},".":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}},"docs":{}},"`":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"r":{"docs":{},"n":{"docs":{},"g":{"docs":{},"`":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}},"f":{"docs":{},"n":{"docs":{},"`":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"`":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"`":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}},"i":{"7":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.009187279151943463},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0019749835418038184},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"i":{"docs":{},"n":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504}}}},"e":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},".":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"o":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"/":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"3":{"docs":{},"w":{"docs":{},"o":{"docs":{},"l":{"docs":{},"f":{"docs":{},"m":{"docs":{},"o":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"j":{"docs":{},"p":{"docs":{},"g":{"docs":{},"'":{"docs":{},")":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"(":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"x":{"docs":{},"=":{"docs":{},"d":{"docs":{},"a":{"docs":{},".":{"docs":{},"w":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"t":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"'":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"3":{"0":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{},"'":{"docs":{},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"e":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},":":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}},"=":{"docs":{},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"_":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}},"[":{"1":{"docs":{},"]":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}}}}}}}},"s":{"docs":{},")":{"docs":{},".":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},".":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.008169934640522876},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0041647385469689956},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.003863134657836645},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0035335689045936395},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},":":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"_":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.005302226935312832}}}}}}}}},"g":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}},".":{"docs":{},"s":{"docs":{},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"x":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"0":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}}}}}}}}}}},"_":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"=":{"docs":{},"(":{"2":{"8":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}},"docs":{}},"docs":{}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.01312910284463895}},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}},".":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}},"i":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"y":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504}}}}}},"o":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}},"r":{"docs":{},"m":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"e":{"docs":{},"r":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.003181336161187699}}}}},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}},"t":{"6":{"4":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}},"docs":{}},"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.006070640176600441},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.005470459518599562}},".":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},"e":{"docs":{},"g":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}},"r":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0016556291390728477},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}},"n":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0037019898195279964},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.005518763796909493},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.004240282685512367},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.005302226935312832}},"a":{"docs":{},"l":{"docs":{},"_":{"docs":{},"w":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0041647385469689956},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.006070640176600441},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0077738515901060075},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.019749835418038184},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.009846827133479213},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.003949967083607637}}},".":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.004415011037527594},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}},"s":{"docs":{},"=":{"docs":{},"[":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}},"=":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"[":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}},"x":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},"_":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"0":{"docs":{},".":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}},"2":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}},"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}},")":{"docs":{},":":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}},"_":{"docs":{},"s":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}}}}}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"]":{"docs":{},"的":{"docs":{},"均":{"docs":{},"匀":{"docs":{},"分":{"docs":{},"布":{"docs":{},"中":{"docs":{},"随":{"docs":{},"机":{"docs":{},"取":{"docs":{},"样":{"docs":{},"，":{"docs":{},"f":{"docs":{},"a":{"docs":{},"n":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"s":{"docs":{},"[":{"0":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}},"1":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}},"docs":{}}}}},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"隐":{"docs":{},"单":{"docs":{},"元":{"docs":{},"的":{"docs":{},"输":{"docs":{},"入":{"docs":{},"数":{"docs":{},"。":{"docs":{},"对":{"docs":{},"m":{"docs":{},"l":{"docs":{},"p":{"docs":{},"，":{"docs":{},"它":{"docs":{},"是":{"docs":{},"下":{"docs":{},"一":{"docs":{},"层":{"docs":{},"单":{"docs":{},"元":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"。":{"docs":{},"对":{"docs":{},"c":{"docs":{},"n":{"docs":{},"n":{"docs":{},"s":{"docs":{},"，":{"docs":{},"我":{"docs":{},"不":{"docs":{},"得":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"去":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"到":{"docs":{},"输":{"docs":{},"入":{"docs":{},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"和":{"docs":{},"感":{"docs":{},"受":{"docs":{},"野":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"由":{"docs":{},"感":{"docs":{},"受":{"docs":{},"野":{"docs":{},"和":{"docs":{},"输":{"docs":{},"入":{"docs":{},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"数":{"docs":{},"决":{"docs":{},"定":{"docs":{},"的":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"u":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}},"'":{"docs":{},"t":{"docs":{},"h":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}},".":{"docs":{},"e":{"docs":{},".":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997}}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"a":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"g":{"docs":{},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"_":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0028268551236749115}},"e":{"docs":{},"r":{"docs":{},"=":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"e":{"docs":{},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}},")":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}},"表":{"docs":{},"示":{"docs":{},"集":{"docs":{},"合":{"docs":{},"s":{"docs":{},"中":{"docs":{},"除":{"docs":{},"s":{"docs":{},"i":{"docs":{},"的":{"docs":{},"n":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0041647385469689956},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.004966887417218543},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.003949967083607637},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.006564551422319475},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.005302226935312832}},"t":{"docs":{},"o":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"(":{"docs":{},"'":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"'":{"docs":{},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}},"r":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}},"s":{"docs":{},"）":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}},"t":{"docs":{},"i":{"docs":{},"m":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0027593818984547464},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}},"s":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}},".":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}},"j":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}},"s":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"(":{"docs":{},"_":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"_":{"docs":{},")":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}},"1":{"docs":{},"]":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"docs":{}}}}}}}}}}},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}},"t":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0033112582781456954},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.005653710247349823},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}},"s":{"docs":{},"=":{"docs":{},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"y":{"docs":{},")":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"u":{"docs":{},"n":{"docs":{},"e":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"=":{"docs":{},"[":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}},")":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"[":{"0":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"1":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},".":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}},"b":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}},"l":{"docs":{},"d":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}},"v":{"0":{"docs":{},"_":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},":":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}}}}}}}},"1":{"docs":{},"_":{"docs":{},"m":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.005302226935312832}}}}}}},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.003181336161187699}},"e":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},"]":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}}}}}}},"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"p":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{},"(":{"docs":{},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"_":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0023137436372049976},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0016556291390728477},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373}},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}},"_":{"docs":{},"i":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}},"x":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"=":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"[":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}},"y":{"docs":{},")":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}},"[":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},":":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}},"_":{"docs":{},"i":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}},"u":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0065832784726793945},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},"e":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}},"=":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"y":{"docs":{},".":{"docs":{},"z":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"s":{"docs":{},"(":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}},"r":{"docs":{},"i":{"docs":{},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.011437908496732025},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.003239241092086997},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0016556291390728477},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.008558262014483212},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.00437636761487965},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.014846235418875928}},"e":{"docs":{},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}},"s":{"docs":{},"）":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"（":{"docs":{},"一":{"docs":{},"个":{"docs":{},"固":{"docs":{},"定":{"docs":{},"的":{"docs":{},"被":{"docs":{},"告":{"docs":{},"知":{"docs":{},"的":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"的":{"docs":{},"尺":{"docs":{},"寸":{"docs":{},"）":{"docs":{},"来":{"docs":{},"存":{"docs":{},"取":{"docs":{},"它":{"docs":{},"们":{"docs":{},"。":{"docs":{},"使":{"docs":{},"用":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"原":{"docs":{},"因":{"docs":{},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"使":{"docs":{},"用":{"docs":{},"g":{"docs":{},"p":{"docs":{},"u":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"往":{"docs":{},"g":{"docs":{},"p":{"docs":{},"u":{"docs":{},"x":{"docs":{},"显":{"docs":{},"存":{"docs":{},"中":{"docs":{},"复":{"docs":{},"制":{"docs":{},"数":{"docs":{},"据":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"巨":{"docs":{},"大":{"docs":{},"的":{"docs":{},"开":{"docs":{},"销":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"使":{"docs":{},"用":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"g":{"docs":{},"p":{"docs":{},"u":{"docs":{},"代":{"docs":{},"码":{"docs":{},"的":{"docs":{},"运":{"docs":{},"行":{"docs":{},"效":{"docs":{},"率":{"docs":{},"将":{"docs":{},"不":{"docs":{},"会":{"docs":{},"比":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"代":{"docs":{},"码":{"docs":{},"快":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"你":{"docs":{},"将":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"当":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"被":{"docs":{},"构":{"docs":{},"建":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"你":{"docs":{},"就":{"docs":{},"给":{"docs":{},"了":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"在":{"docs":{},"一":{"docs":{},"次":{"docs":{},"请":{"docs":{},"求":{"docs":{},"中":{"docs":{},"将":{"docs":{},"整":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"复":{"docs":{},"制":{"docs":{},"到":{"docs":{},"g":{"docs":{},"p":{"docs":{},"u":{"docs":{},"上":{"docs":{},"的":{"docs":{},"可":{"docs":{},"能":{"docs":{},"。":{"docs":{},"之":{"docs":{},"后":{"docs":{},"，":{"docs":{},"g":{"docs":{},"p":{"docs":{},"u":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"（":{"docs":{},"切":{"docs":{},"片":{"docs":{},"）":{"docs":{},"来":{"docs":{},"存":{"docs":{},"取":{"docs":{},"任":{"docs":{},"何":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"必":{"docs":{},"再":{"docs":{},"从":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"上":{"docs":{},"拷":{"docs":{},"贝":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{},"同":{"docs":{},"时":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"数":{"docs":{},"据":{"docs":{},"向":{"docs":{},"量":{"docs":{},"（":{"docs":{},"实":{"docs":{},"数":{"docs":{},"）":{"docs":{},"和":{"docs":{},"标":{"docs":{},"签":{"docs":{},"（":{"docs":{},"整":{"docs":{},"数":{"docs":{},"）":{"docs":{},"通":{"docs":{},"常":{"docs":{},"是":{"docs":{},"不":{"docs":{},"同":{"docs":{},"属":{"docs":{},"性":{"docs":{},"的":{"docs":{},"，":{"docs":{},"测":{"docs":{},"试":{"docs":{},"集":{"docs":{},"、":{"docs":{},"验":{"docs":{},"证":{"docs":{},"集":{"docs":{},"和":{"docs":{},"训":{"docs":{},"练":{"docs":{},"集":{"docs":{},"是":{"docs":{},"不":{"docs":{},"同":{"docs":{},"目":{"docs":{},"的":{"docs":{},"的":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"我":{"docs":{},"们":{"docs":{},"建":{"docs":{},"议":{"docs":{},"通":{"docs":{},"过":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"来":{"docs":{},"储":{"docs":{},"存":{"docs":{},"（":{"docs":{},"这":{"docs":{},"就":{"docs":{},"产":{"docs":{},"生":{"docs":{},"了":{"6":{"docs":{},"个":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"）":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"）":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.012031466913465988},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0016556291390728477},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0035335689045936395},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},".":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576}}}}}}},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576}}}}},"a":{"docs":{},")":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}},"s":{"docs":{},"i":{"docs":{},"b":{"docs":{},"l":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.005266622778143515},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.012725344644750796}}}}},")":{"docs":{},":":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"c":{"docs":{},"e":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"_":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},")":{"docs":{},":":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}},"b":{"docs":{},"i":{"docs":{},"a":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.003181336161187699}},"s":{"docs":{},":":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},"=":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},",":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}},"_":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}}}}}}}},"x":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0037019898195279964},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.004608294930875576}},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504}}}}}}}},"i":{"docs":{},",":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}},"k":{"docs":{},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}},")":{"docs":{},")":{"docs":{},")":{"docs":{},",":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}},"）":{"docs":{},"和":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"个":{"docs":{},"降":{"docs":{},"噪":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"，":{"docs":{},"当":{"docs":{},"然":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"就":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"模":{"docs":{},"型":{"docs":{},"的":{"docs":{},"深":{"docs":{},"度":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"连":{"docs":{},"接":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"他":{"docs":{},"们":{"docs":{},"形":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"l":{"docs":{},"p":{"docs":{},"，":{"docs":{},"构":{"docs":{},"建":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"和":{"docs":{},"他":{"docs":{},"们":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"层":{"docs":{},"，":{"docs":{},"去":{"docs":{},"共":{"docs":{},"享":{"docs":{},"编":{"docs":{},"码":{"docs":{},"部":{"docs":{},"分":{"docs":{},"的":{"docs":{},"权":{"docs":{},"值":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"和":{"docs":{},"偏":{"docs":{},"执":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"(":{"docs":{},"(":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"_":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},":":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},"]":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{},"]":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},"s":{"docs":{},")":{"docs":{},":":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},"s":{"docs":{},")":{"docs":{},":":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"d":{"docs":{},"a":{"docs":{},".":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},")":{"docs":{},":":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},".":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},")":{"docs":{},":":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"o":{"docs":{},"n":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}},"y":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.004627487274409995},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.003949967083607637}},")":{"docs":{},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0023137436372049976}}}},".":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}},"d":{"docs":{},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"s":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"'":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"'":{"docs":{},")":{"docs":{},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"d":{"docs":{},"i":{"docs":{},"m":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"p":{"docs":{},"e":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}},"docs":{}}}}}}},"t":{"docs":{},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}}}},"]":{"docs":{},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0032679738562091504}},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}},";":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}},"i":{"docs":{},")":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}}}}},"{":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"}":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}},":":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.007403979639055993},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835}}}},"下":{"docs":{},"载":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"的":{"docs":{},"损":{"docs":{},"失":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"代":{"docs":{},"码":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"类":{"docs":{},"似":{"docs":{},"图":{"1":{"docs":{},"的":{"docs":{},"卷":{"docs":{},"积":{"docs":{},"层":{"docs":{},"。":{"docs":{},"输":{"docs":{},"入":{"docs":{},"包":{"docs":{},"括":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"1":{"2":{"0":{"1":{"6":{"0":{"docs":{},"的":{"3":{"docs":{},"个":{"docs":{},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"（":{"1":{"docs":{},"一":{"docs":{},"个":{"docs":{},"r":{"docs":{},"g":{"docs":{},"b":{"docs":{},"彩":{"docs":{},"图":{"docs":{},"）":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"2":{"docs":{},"个":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"9":{"9":{"docs":{},"感":{"docs":{},"受":{"docs":{},"野":{"docs":{},"的":{"docs":{},"卷":{"docs":{},"积":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"几":{"docs":{},"行":{"docs":{},"代":{"docs":{},"码":{"docs":{},"去":{"docs":{},"构":{"docs":{},"建":{"docs":{},"层":{"docs":{},"叠":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"：":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"在":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"中":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"是":{"docs":{},"单":{"docs":{},"隐":{"docs":{},"层":{"docs":{},"的":{"docs":{},"多":{"docs":{},"层":{"docs":{},"感":{"docs":{},"知":{"docs":{},"机":{"docs":{},"（":{"docs":{},"m":{"docs":{},"l":{"docs":{},"p":{"docs":{},"）":{"docs":{},"。":{"docs":{},"m":{"docs":{},"l":{"docs":{},"p":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"看":{"docs":{},"作":{"docs":{},"一":{"docs":{},"个":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"回":{"docs":{},"归":{"docs":{},"分":{"docs":{},"类":{"docs":{},"器":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"中":{"docs":{},"间":{"docs":{},"层":{"docs":{},"被":{"docs":{},"称":{"docs":{},"为":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"层":{"docs":{},"。":{"docs":{},"一":{"docs":{},"个":{"docs":{},"单":{"docs":{},"隐":{"docs":{},"层":{"docs":{},"对":{"docs":{},"于":{"docs":{},"m":{"docs":{},"l":{"docs":{},"p":{"docs":{},"成":{"docs":{},"为":{"docs":{},"通":{"docs":{},"用":{"docs":{},"近":{"docs":{},"似":{"docs":{},"器":{"docs":{},"是":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"。":{"docs":{},"然":{"docs":{},"而":{"docs":{},"在":{"docs":{},"后":{"docs":{},"面":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"讲":{"docs":{},"述":{"docs":{},"使":{"docs":{},"用":{"docs":{},"多":{"docs":{},"个":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"层":{"docs":{},"的":{"docs":{},"好":{"docs":{},"处":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"深":{"docs":{},"度":{"docs":{},"学":{"docs":{},"习":{"docs":{},"的":{"docs":{},"前":{"docs":{},"提":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"课":{"docs":{},"程":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"了":{"docs":{},"m":{"docs":{},"l":{"docs":{},"p":{"docs":{},"，":{"docs":{},"反":{"docs":{},"向":{"docs":{},"误":{"docs":{},"差":{"docs":{},"传":{"docs":{},"导":{"docs":{},"，":{"docs":{},"如":{"docs":{},"何":{"docs":{},"训":{"docs":{},"练":{"docs":{},"m":{"docs":{},"l":{"docs":{},"p":{"docs":{},"s":{"docs":{},"。":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"步":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"构":{"docs":{},"建":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"个":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"层":{"docs":{},"（":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"在":{"docs":{},"多":{"docs":{},"层":{"docs":{},"感":{"docs":{},"知":{"docs":{},"机":{"docs":{},"中":{"docs":{},"介":{"docs":{},"绍":{"docs":{},"的":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"类":{"docs":{},"，":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"更":{"docs":{},"改":{"docs":{},"是":{"docs":{},"将":{"docs":{},"原":{"docs":{},"本":{"docs":{},"的":{"docs":{},"非":{"docs":{},"线":{"docs":{},"性":{"docs":{},"函":{"docs":{},"数":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"h":{"docs":{},"换":{"docs":{},"成":{"docs":{},"了":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"函":{"docs":{},"数":{"docs":{},"s":{"docs":{},"=":{"1":{"docs":{},"/":{"docs":{},"(":{"1":{"docs":{},"+":{"docs":{},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"(":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"就":{"docs":{},"是":{"docs":{},"去":{"docs":{},"定":{"docs":{},"义":{"docs":{},"函":{"docs":{},"数":{"docs":{},"来":{"docs":{},"构":{"docs":{},"建":{"docs":{},"s":{"docs":{},"图":{"docs":{},"。":{"docs":{},"代":{"docs":{},"码":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}},"为":{"docs":{},"了":{"docs":{},"方":{"docs":{},"便":{"docs":{},"在":{"docs":{},"p":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"中":{"docs":{},"的":{"docs":{},"使":{"docs":{},"用":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"对":{"docs":{},"数":{"docs":{},"据":{"docs":{},"集":{"docs":{},"进":{"docs":{},"行":{"docs":{},"了":{"docs":{},"处":{"docs":{},"理":{"docs":{},"。":{"docs":{},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"这":{"docs":{},"里":{"docs":{},"下":{"docs":{},"载":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"文":{"docs":{},"件":{"docs":{},"被":{"docs":{},"表":{"docs":{},"示":{"docs":{},"为":{"docs":{},"包":{"docs":{},"含":{"3":{"docs":{},"个":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"的":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"：":{"docs":{},"训":{"docs":{},"练":{"docs":{},"集":{"docs":{},"、":{"docs":{},"验":{"docs":{},"证":{"docs":{},"集":{"docs":{},"和":{"docs":{},"测":{"docs":{},"试":{"docs":{},"集":{"docs":{},"。":{"docs":{},"每":{"docs":{},"个":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"都":{"docs":{},"是":{"docs":{},"都":{"docs":{},"是":{"docs":{},"两":{"docs":{},"个":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{},"组":{"docs":{},"合":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"是":{"docs":{},"有":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"p":{"docs":{},"y":{"docs":{},"的":{"1":{"docs":{},"维":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"表":{"docs":{},"示":{"docs":{},"的":{"7":{"8":{"4":{"docs":{},"（":{"2":{"8":{"2":{"8":{"docs":{},"）":{"docs":{},"维":{"docs":{},"的":{"0":{"docs":{},"～":{"1":{"docs":{},"（":{"0":{"docs":{},"是":{"docs":{},"黑":{"docs":{},"，":{"1":{"docs":{},"是":{"docs":{},"白":{"docs":{},"）":{"docs":{},"的":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"t":{"docs":{},"值":{"docs":{},"，":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"是":{"0":{"docs":{},"～":{"9":{"docs":{},"的":{"docs":{},"图":{"docs":{},"像":{"docs":{},"标":{"docs":{},"签":{"docs":{},"。":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"显":{"docs":{},"示":{"docs":{},"了":{"docs":{},"如":{"docs":{},"何":{"docs":{},"去":{"docs":{},"加":{"docs":{},"载":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"集":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{}}},"docs":{}}},"docs":{}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"获":{"docs":{},"得":{"docs":{},"实":{"docs":{},"际":{"docs":{},"的":{"docs":{},"模":{"docs":{},"型":{"docs":{},"预":{"docs":{},"测":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"t":{"docs":{},"_":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"来":{"docs":{},"返":{"docs":{},"回":{"docs":{},"p":{"docs":{},"_":{"docs":{},"y":{"docs":{},"_":{"docs":{},"g":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"x":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"y":{"docs":{},"。":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"形":{"docs":{},"成":{"docs":{},"数":{"docs":{},"据":{"docs":{},"更":{"docs":{},"丰":{"docs":{},"富":{"docs":{},"的":{"docs":{},"表":{"docs":{},"达":{"docs":{},"，":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"层":{"docs":{},"有":{"docs":{},"多":{"docs":{},"层":{"docs":{},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"组":{"docs":{},"成":{"docs":{},"｛":{"docs":{},"h":{"docs":{},"_":{"docs":{},"k":{"docs":{},",":{"docs":{},"k":{"docs":{},"=":{"0":{"docs":{},".":{"docs":{},".":{"docs":{},"k":{"docs":{},"｝":{"docs":{},"。":{"docs":{},"一":{"docs":{},"个":{"docs":{},"隐":{"docs":{},"层":{"docs":{},"的":{"docs":{},"权":{"docs":{},"值":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"w":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"4":{"docs":{},"维":{"docs":{},"张":{"docs":{},"量":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"，":{"docs":{},"包":{"docs":{},"含":{"docs":{},"了":{"docs":{},"每":{"docs":{},"个":{"docs":{},"目":{"docs":{},"标":{"docs":{},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"、":{"docs":{},"源":{"docs":{},"目":{"docs":{},"标":{"docs":{},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"、":{"docs":{},"源":{"docs":{},"水":{"docs":{},"平":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"源":{"docs":{},"垂":{"docs":{},"直":{"docs":{},"位":{"docs":{},"置":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"偏":{"docs":{},"置":{"docs":{},"b":{"docs":{},"则":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"向":{"docs":{},"量":{"docs":{},"，":{"docs":{},"纪":{"docs":{},"录":{"docs":{},"每":{"docs":{},"个":{"docs":{},"目":{"docs":{},"标":{"docs":{},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"如":{"docs":{},"下":{"docs":{},"的":{"docs":{},"图":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"：":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"了":{"docs":{},"解":{"docs":{},"网":{"docs":{},"络":{"docs":{},"学":{"docs":{},"习":{"docs":{},"了":{"docs":{},"什":{"docs":{},"么":{"docs":{},"东":{"docs":{},"西":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"会":{"docs":{},"描":{"docs":{},"述":{"docs":{},"出":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"（":{"docs":{},"通":{"docs":{},"过":{"docs":{},"权":{"docs":{},"值":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"来":{"docs":{},"定":{"docs":{},"义":{"docs":{},"）":{"docs":{},"。":{"docs":{},"记":{"docs":{},"住":{"docs":{},"，":{"docs":{},"事":{"docs":{},"实":{"docs":{},"上":{"docs":{},"它":{"docs":{},"没":{"docs":{},"有":{"docs":{},"提":{"docs":{},"供":{"docs":{},"完":{"docs":{},"整":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"我":{"docs":{},"们":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"了":{"docs":{},"偏":{"docs":{},"置":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"画":{"docs":{},"出":{"docs":{},"的":{"docs":{},"权":{"docs":{},"值":{"docs":{},"被":{"docs":{},"乘":{"docs":{},"以":{"docs":{},"了":{"docs":{},"常":{"docs":{},"数":{"docs":{},"（":{"docs":{},"权":{"docs":{},"值":{"docs":{},"被":{"docs":{},"转":{"docs":{},"换":{"docs":{},"到":{"docs":{},"了":{"0":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"能":{"docs":{},"力":{"docs":{},"在":{"docs":{},"训":{"docs":{},"练":{"docs":{},"时":{"docs":{},"，":{"docs":{},"改":{"docs":{},"变":{"docs":{},"差":{"docs":{},"错":{"docs":{},"等":{"docs":{},"级":{"docs":{},"或":{"docs":{},"者":{"docs":{},"训":{"docs":{},"练":{"docs":{},"速":{"docs":{},"率":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"变":{"docs":{},"量":{"docs":{},"来":{"docs":{},"联":{"docs":{},"系":{"docs":{},"它":{"docs":{},"们":{"docs":{},"。":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"什":{"docs":{},"么":{"docs":{},"是":{"docs":{},"普":{"docs":{},"通":{"docs":{},"的":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"下":{"docs":{},"降":{"docs":{},"？":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"下":{"docs":{},"降":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"，":{"docs":{},"利":{"docs":{},"用":{"docs":{},"负":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"方":{"docs":{},"向":{"docs":{},"来":{"docs":{},"决":{"docs":{},"定":{"docs":{},"每":{"docs":{},"次":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"的":{"docs":{},"新":{"docs":{},"的":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"方":{"docs":{},"向":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"每":{"docs":{},"次":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"能":{"docs":{},"使":{"docs":{},"待":{"docs":{},"优":{"docs":{},"化":{"docs":{},"的":{"docs":{},"目":{"docs":{},"标":{"docs":{},"函":{"docs":{},"数":{"docs":{},"逐":{"docs":{},"步":{"docs":{},"减":{"docs":{},"小":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"伪":{"docs":{},"代":{"docs":{},"码":{"docs":{},"如":{"docs":{},"下":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}},"所":{"docs":{},"示":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}},"原":{"docs":{},"则":{"docs":{},"上":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"增":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"正":{"docs":{},"则":{"docs":{},"项":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"平":{"docs":{},"滑":{"docs":{},"神":{"docs":{},"经":{"docs":{},"网":{"docs":{},"络":{"docs":{},"的":{"docs":{},"网":{"docs":{},"络":{"docs":{},"映":{"docs":{},"射":{"docs":{},"（":{"docs":{},"通":{"docs":{},"过":{"docs":{},"惩":{"docs":{},"罚":{"docs":{},"大":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"值":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"减":{"docs":{},"少":{"docs":{},"网":{"docs":{},"络":{"docs":{},"模":{"docs":{},"型":{"docs":{},"的":{"docs":{},"非":{"docs":{},"线":{"docs":{},"性":{"docs":{},"参":{"docs":{},"数":{"docs":{},"数":{"docs":{},"）":{"docs":{},"。":{"docs":{},"因":{"docs":{},"而":{"docs":{},"最":{"docs":{},"小":{"docs":{},"化":{"docs":{},"这":{"docs":{},"个":{"docs":{},"和":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"到":{"docs":{},"与":{"docs":{},"训":{"docs":{},"练":{"docs":{},"数":{"docs":{},"据":{"docs":{},"最":{"docs":{},"贴":{"docs":{},"合":{"docs":{},"同":{"docs":{},"时":{"docs":{},"范":{"docs":{},"化":{"docs":{},"性":{"docs":{},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"模":{"docs":{},"型":{"docs":{},"。":{"docs":{},"更":{"docs":{},"具":{"docs":{},"奥":{"docs":{},"卡":{"docs":{},"姆":{"docs":{},"剃":{"docs":{},"刀":{"docs":{},"原":{"docs":{},"则":{"docs":{},"，":{"docs":{},"最":{"docs":{},"好":{"docs":{},"的":{"docs":{},"模":{"docs":{},"型":{"docs":{},"总":{"docs":{},"是":{"docs":{},"最":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"学":{"docs":{},"习":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"页":{"docs":{},"面":{"docs":{},"，":{"docs":{},"你":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"去":{"docs":{},"下":{"docs":{},"载":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"docs":{},"。":{"docs":{},"加":{"docs":{},"入":{"docs":{},"你":{"docs":{},"想":{"docs":{},"要":{"docs":{},"一":{"docs":{},"次":{"docs":{},"下":{"docs":{},"载":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"文":{"docs":{},"件":{"docs":{},"，":{"docs":{},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"克":{"docs":{},"隆":{"docs":{},"本":{"docs":{},"教":{"docs":{},"程":{"docs":{},"的":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"仓":{"docs":{},"库":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"选":{"docs":{},"择":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"的":{"docs":{},"尺":{"docs":{},"寸":{"docs":{},"b":{"docs":{},"时":{"docs":{},"中":{"docs":{},"有":{"docs":{},"个":{"docs":{},"权":{"docs":{},"衡":{"docs":{},"。":{"docs":{},"当":{"docs":{},"尺":{"docs":{},"寸":{"docs":{},"比":{"docs":{},"较":{"docs":{},"大":{"docs":{},"时":{"docs":{},"，":{"docs":{},"在":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"估":{"docs":{},"计":{"docs":{},"时":{"docs":{},"就":{"docs":{},"要":{"docs":{},"花":{"docs":{},"费":{"docs":{},"更":{"docs":{},"多":{"docs":{},"时":{"docs":{},"间":{"docs":{},"计":{"docs":{},"算":{"docs":{},"方":{"docs":{},"差":{"docs":{},"；":{"docs":{},"当":{"docs":{},"尺":{"docs":{},"寸":{"docs":{},"比":{"docs":{},"较":{"docs":{},"小":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"呢":{"docs":{},"，":{"docs":{},"就":{"docs":{},"要":{"docs":{},"进":{"docs":{},"行":{"docs":{},"更":{"docs":{},"多":{"docs":{},"的":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"，":{"docs":{},"也":{"docs":{},"更":{"docs":{},"容":{"docs":{},"易":{"docs":{},"波":{"docs":{},"动":{"docs":{},"。":{"docs":{},"因":{"docs":{},"而":{"docs":{},"尺":{"docs":{},"寸":{"docs":{},"的":{"docs":{},"选":{"docs":{},"择":{"docs":{},"要":{"docs":{},"结":{"docs":{},"合":{"docs":{},"模":{"docs":{},"型":{"docs":{},"、":{"docs":{},"数":{"docs":{},"据":{"docs":{},"集":{"docs":{},"、":{"docs":{},"硬":{"docs":{},"件":{"docs":{},"结":{"docs":{},"构":{"docs":{},"等":{"docs":{},"，":{"docs":{},"从":{"1":{"docs":{},"到":{"docs":{},"几":{"docs":{},"百":{"docs":{},"不":{"docs":{},"等":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"何":{"docs":{},"时":{"docs":{},"终":{"docs":{},"止":{"docs":{},"优":{"docs":{},"化":{"docs":{},"方":{"docs":{},"面":{"docs":{},"，":{"docs":{},"主":{"docs":{},"要":{"docs":{},"基":{"docs":{},"于":{"docs":{},"主":{"docs":{},"观":{"docs":{},"判":{"docs":{},"断":{"docs":{},"和":{"docs":{},"一":{"docs":{},"些":{"docs":{},"启":{"docs":{},"发":{"docs":{},"式":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"但":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"教":{"docs":{},"程":{"docs":{},"里":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"几":{"docs":{},"何":{"docs":{},"级":{"docs":{},"数":{"docs":{},"增":{"docs":{},"加":{"docs":{},"的":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"量":{"docs":{},"的":{"docs":{},"策":{"docs":{},"略":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"r":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"中":{"docs":{},"呢":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"非":{"docs":{},"常":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"。":{"docs":{},"它":{"docs":{},"自":{"docs":{},"动":{"docs":{},"微":{"docs":{},"分":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"一":{"docs":{},"定":{"docs":{},"的":{"docs":{},"数":{"docs":{},"学":{"docs":{},"转":{"docs":{},"换":{"docs":{},"来":{"docs":{},"提":{"docs":{},"高":{"docs":{},"数":{"docs":{},"学":{"docs":{},"稳":{"docs":{},"定":{"docs":{},"性":{"docs":{},"。":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"之":{"docs":{},"前":{"docs":{},"论":{"docs":{},"述":{"docs":{},"中":{"docs":{},"所":{"docs":{},"说":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"对":{"docs":{},"分":{"docs":{},"类":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"样":{"docs":{},"本":{"docs":{},"感":{"docs":{},"兴":{"docs":{},"趣":{"docs":{},"（":{"docs":{},"不":{"docs":{},"仅":{"docs":{},"仅":{"docs":{},"是":{"docs":{},"可":{"docs":{},"能":{"docs":{},"性":{"docs":{},"）":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"模":{"docs":{},"型":{"docs":{},"中":{"docs":{},"增":{"docs":{},"加":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"来":{"docs":{},"纪":{"docs":{},"录":{"docs":{},"每":{"docs":{},"个":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"中":{"docs":{},"的":{"docs":{},"错":{"docs":{},"误":{"docs":{},"分":{"docs":{},"类":{"docs":{},"样":{"docs":{},"例":{"docs":{},"数":{"docs":{},"。":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{},"d":{"docs":{},"的":{"docs":{},"许":{"docs":{},"多":{"docs":{},"语":{"docs":{},"言":{"docs":{},"中":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"通":{"docs":{},"过":{"docs":{},"手":{"docs":{},"动":{"docs":{},"求":{"docs":{},"解":{"docs":{},"损":{"docs":{},"失":{"docs":{},"函":{"docs":{},"数":{"docs":{},"对":{"docs":{},"每":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"（":{"docs":{},"微":{"docs":{},"分":{"docs":{},"）":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"给":{"docs":{},"定":{"docs":{},"模":{"docs":{},"型":{"docs":{},"下":{"docs":{},"，":{"docs":{},"输":{"docs":{},"入":{"docs":{},"x":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"为":{"docs":{},"y":{"docs":{},"的":{"docs":{},"概":{"docs":{},"率":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"如":{"docs":{},"下":{"docs":{},"公":{"docs":{},"式":{"docs":{},"表":{"docs":{},"示":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"一":{"docs":{},"节":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"展":{"docs":{},"示":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"如":{"docs":{},"何":{"docs":{},"实":{"docs":{},"现":{"docs":{},"最":{"docs":{},"基":{"docs":{},"本":{"docs":{},"的":{"docs":{},"分":{"docs":{},"类":{"docs":{},"器":{"docs":{},"：":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"回":{"docs":{},"归":{"docs":{},"分":{"docs":{},"类":{"docs":{},"器":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"以":{"docs":{},"模":{"docs":{},"型":{"docs":{},"的":{"docs":{},"快":{"docs":{},"速":{"docs":{},"入":{"docs":{},"门":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"复":{"docs":{},"习":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{},"和":{"docs":{},"巩":{"docs":{},"固":{"docs":{},"(":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{},")":{"docs":{},"数":{"docs":{},"学":{"docs":{},"负":{"docs":{},"号":{"docs":{},"，":{"docs":{},"也":{"docs":{},"展":{"docs":{},"示":{"docs":{},"了":{"docs":{},"数":{"docs":{},"学":{"docs":{},"表":{"docs":{},"达":{"docs":{},"式":{"docs":{},"如":{"docs":{},"何":{"docs":{},"映":{"docs":{},"射":{"docs":{},"到":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"图":{"docs":{},"中":{"docs":{},"。":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"假":{"docs":{},"设":{"docs":{},"读":{"docs":{},"者":{"docs":{},"已":{"docs":{},"经":{"docs":{},"了":{"docs":{},"解":{"docs":{},"了":{"docs":{},"使":{"docs":{},"用":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"回":{"docs":{},"归":{"docs":{},"进":{"docs":{},"行":{"docs":{},"m":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"分":{"docs":{},"类":{"docs":{},"和":{"docs":{},"多":{"docs":{},"层":{"docs":{},"感":{"docs":{},"知":{"docs":{},"机":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"你":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"g":{"docs":{},"p":{"docs":{},"u":{"docs":{},"上":{"docs":{},"进":{"docs":{},"行":{"docs":{},"运":{"docs":{},"算":{"docs":{},"，":{"docs":{},"你":{"docs":{},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"了":{"docs":{},"解":{"docs":{},"g":{"docs":{},"p":{"docs":{},"u":{"docs":{},"。":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"假":{"docs":{},"设":{"docs":{},"读":{"docs":{},"者":{"docs":{},"已":{"docs":{},"经":{"docs":{},"阅":{"docs":{},"读":{"docs":{},"了":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"两":{"docs":{},"章":{"docs":{},"使":{"docs":{},"用":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"回":{"docs":{},"归":{"docs":{},"进":{"docs":{},"行":{"docs":{},"m":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"分":{"docs":{},"类":{"docs":{},"和":{"docs":{},"多":{"docs":{},"层":{"docs":{},"感":{"docs":{},"知":{"docs":{},"机":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"章":{"docs":{},"节":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"假":{"docs":{},"设":{"docs":{},"读":{"docs":{},"者":{"docs":{},"已":{"docs":{},"经":{"docs":{},"阅":{"docs":{},"读":{"docs":{},"了":{"docs":{},"使":{"docs":{},"用":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"回":{"docs":{},"归":{"docs":{},"进":{"docs":{},"行":{"docs":{},"m":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"分":{"docs":{},"类":{"docs":{},"和":{"docs":{},"多":{"docs":{},"层":{"docs":{},"感":{"docs":{},"知":{"docs":{},"机":{"docs":{},"。":{"docs":{},"当":{"docs":{},"然":{"docs":{},"，":{"docs":{},"假":{"docs":{},"如":{"docs":{},"你":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"g":{"docs":{},"p":{"docs":{},"u":{"docs":{},"来":{"docs":{},"运":{"docs":{},"行":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"你":{"docs":{},"还":{"docs":{},"需":{"docs":{},"要":{"docs":{},"阅":{"docs":{},"读":{"docs":{},"g":{"docs":{},"p":{"docs":{},"u":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"里":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"平":{"docs":{},"均":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"损":{"docs":{},"失":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"以":{"docs":{},"减":{"docs":{},"少":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"尺":{"docs":{},"寸":{"docs":{},"对":{"docs":{},"我":{"docs":{},"们":{"docs":{},"的":{"docs":{},"影":{"docs":{},"响":{"docs":{},"。":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"理":{"docs":{},"论":{"docs":{},"里":{"docs":{},"面":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"在":{"docs":{},"学":{"docs":{},"习":{"docs":{},"进":{"docs":{},"程":{"docs":{},"中":{"docs":{},"的":{"docs":{},"更":{"docs":{},"新":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"运":{"docs":{},"行":{"docs":{},"这":{"docs":{},"样":{"docs":{},"几":{"docs":{},"个":{"docs":{},"链":{"docs":{},"来":{"docs":{},"趋":{"docs":{},"近":{"docs":{},"。":{"docs":{},"毫":{"docs":{},"无":{"docs":{},"疑":{"docs":{},"问":{"docs":{},"这":{"docs":{},"将":{"docs":{},"耗":{"docs":{},"费":{"docs":{},"很":{"docs":{},"大":{"docs":{},"的":{"docs":{},"计":{"docs":{},"算":{"docs":{},"量":{"docs":{},"。":{"docs":{},"一":{"docs":{},"些":{"docs":{},"新":{"docs":{},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"已":{"docs":{},"经":{"docs":{},"被":{"docs":{},"提":{"docs":{},"出":{"docs":{},"来":{"docs":{},"，":{"docs":{},"以":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"学":{"docs":{},"习":{"docs":{},"p":{"docs":{},"(":{"docs":{},"v":{"docs":{},",":{"docs":{},"h":{"docs":{},")":{"docs":{},"中":{"docs":{},"的":{"docs":{},"样":{"docs":{},"本":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"台":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"r":{"docs":{},")":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"国":{"docs":{},"，":{"docs":{},"有":{"docs":{},"一":{"docs":{},"些":{"docs":{},"是":{"docs":{},"不":{"docs":{},"能":{"docs":{},"进":{"docs":{},"行":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"下":{"docs":{},"降":{"docs":{},"来":{"docs":{},"优":{"docs":{},"化":{"docs":{},"的":{"docs":{},"。":{"docs":{},"严":{"docs":{},"格":{"docs":{},"意":{"docs":{},"义":{"docs":{},"上":{"docs":{},"将":{"docs":{},"，":{"docs":{},"发":{"docs":{},"现":{"docs":{},"最":{"docs":{},"优":{"docs":{},"的":{"docs":{},"超":{"docs":{},"参":{"docs":{},"集":{"docs":{},"合":{"docs":{},"是":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"任":{"docs":{},"务":{"docs":{},"。":{"docs":{},"第":{"docs":{},"一":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"不":{"docs":{},"能":{"docs":{},"独":{"docs":{},"立":{"docs":{},"的":{"docs":{},"优":{"docs":{},"化":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{},"第":{"docs":{},"二":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"不":{"docs":{},"能":{"docs":{},"很":{"docs":{},"容":{"docs":{},"易":{"docs":{},"的":{"docs":{},"求":{"docs":{},"解":{"docs":{},"所":{"docs":{},"有":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"（":{"docs":{},"有":{"docs":{},"些":{"docs":{},"是":{"docs":{},"离":{"docs":{},"散":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"有":{"docs":{},"些":{"docs":{},"是":{"docs":{},"实":{"docs":{},"数":{"docs":{},"）":{"docs":{},"。":{"docs":{},"第":{"docs":{},"三":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"优":{"docs":{},"化":{"docs":{},"问":{"docs":{},"题":{"docs":{},"是":{"docs":{},"非":{"docs":{},"凸":{"docs":{},"的":{"docs":{},"，":{"docs":{},"容":{"docs":{},"易":{"docs":{},"陷":{"docs":{},"入":{"docs":{},"局":{"docs":{},"部":{"docs":{},"最":{"docs":{},"优":{"docs":{},"。":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"权":{"docs":{},"值":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"一":{"docs":{},"般":{"docs":{},"需":{"docs":{},"要":{"docs":{},"它":{"docs":{},"们":{"docs":{},"在":{"0":{"docs":{},"附":{"docs":{},"近":{"docs":{},"，":{"docs":{},"要":{"docs":{},"足":{"docs":{},"够":{"docs":{},"小":{"docs":{},"（":{"docs":{},"在":{"docs":{},"激":{"docs":{},"活":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"近":{"docs":{},"似":{"docs":{},"线":{"docs":{},"性":{"docs":{},"区":{"docs":{},"域":{"docs":{},"可":{"docs":{},"以":{"docs":{},"获":{"docs":{},"得":{"docs":{},"最":{"docs":{},"大":{"docs":{},"的":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"）":{"docs":{},"。":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"特":{"docs":{},"性":{"docs":{},"，":{"docs":{},"尤":{"docs":{},"其":{"docs":{},"对":{"docs":{},"深":{"docs":{},"度":{"docs":{},"网":{"docs":{},"络":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"减":{"docs":{},"小":{"docs":{},"层":{"docs":{},"与":{"docs":{},"层":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"激":{"docs":{},"活":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"方":{"docs":{},"差":{"docs":{},"和":{"docs":{},"反":{"docs":{},"向":{"docs":{},"传":{"docs":{},"导":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"的":{"docs":{},"方":{"docs":{},"差":{"docs":{},"。":{"docs":{},"这":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"让":{"docs":{},"信":{"docs":{},"息":{"docs":{},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"向":{"docs":{},"下":{"docs":{},"和":{"docs":{},"向":{"docs":{},"上":{"docs":{},"的":{"docs":{},"传":{"docs":{},"导":{"docs":{},"，":{"docs":{},"减":{"docs":{},"少":{"docs":{},"层":{"docs":{},"间":{"docs":{},"差":{"docs":{},"异":{"docs":{},"。":{"docs":{},"数":{"docs":{},"学":{"docs":{},"推":{"docs":{},"倒":{"docs":{},"，":{"docs":{},"请":{"docs":{},"看":{"docs":{},"x":{"docs":{},"a":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"r":{"1":{"0":{"docs":{},"。":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}},"本":{"docs":{},"节":{"docs":{},"中":{"docs":{},"，":{"docs":{},"假":{"docs":{},"设":{"docs":{},"你":{"docs":{},"已":{"docs":{},"经":{"docs":{},"了":{"docs":{},"解":{"docs":{},"了":{"docs":{},"使":{"docs":{},"用":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"回":{"docs":{},"归":{"docs":{},"进":{"docs":{},"行":{"docs":{},"m":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"分":{"docs":{},"类":{"docs":{},"。":{"docs":{},"同":{"docs":{},"时":{"docs":{},"本":{"docs":{},"节":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"代":{"docs":{},"码":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"这":{"docs":{},"里":{"docs":{},"下":{"docs":{},"载":{"docs":{},".":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"也":{"docs":{},"使":{"docs":{},"用":{"docs":{},"l":{"1":{"docs":{},"/":{"docs":{},"l":{"2":{"docs":{},"正":{"docs":{},"则":{"docs":{},"化":{"docs":{},"（":{"docs":{},"l":{"1":{"docs":{},"/":{"docs":{},"l":{"2":{"docs":{},"正":{"docs":{},"则":{"docs":{},"化":{"docs":{},"）":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"去":{"docs":{},"计":{"docs":{},"算":{"docs":{},"w":{"docs":{},"_":{"1":{"docs":{},"和":{"docs":{},"w":{"docs":{},"_":{"2":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"l":{"1":{"docs":{},"正":{"docs":{},"则":{"docs":{},"和":{"docs":{},"l":{"2":{"docs":{},"平":{"docs":{},"方":{"docs":{},"正":{"docs":{},"则":{"docs":{},"。":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}},"docs":{}}}}}},"docs":{}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}},"此":{"docs":{},"之":{"docs":{},"前":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"的":{"docs":{},"随":{"docs":{},"机":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"下":{"docs":{},"降":{"docs":{},"来":{"docs":{},"训":{"docs":{},"练":{"docs":{},"这":{"docs":{},"个":{"docs":{},"模":{"docs":{},"型":{"docs":{},"。":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"现":{"docs":{},"在":{"docs":{},"在":{"docs":{},"c":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"函":{"docs":{},"数":{"docs":{},"里":{"docs":{},"面":{"docs":{},"添":{"docs":{},"加":{"docs":{},"了":{"docs":{},"正":{"docs":{},"则":{"docs":{},"项":{"docs":{},"。":{"docs":{},"l":{"1":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"和":{"docs":{},"l":{"2":{"docs":{},"_":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"可":{"docs":{},"以":{"docs":{},"控":{"docs":{},"制":{"docs":{},"权":{"docs":{},"值":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"的":{"docs":{},"正":{"docs":{},"则":{"docs":{},"化":{"docs":{},"。":{"docs":{},"计":{"docs":{},"算":{"docs":{},"新":{"docs":{},"c":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"训":{"docs":{},"练":{"docs":{},"m":{"docs":{},"l":{"docs":{},"p":{"docs":{},"模":{"docs":{},"型":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"时":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"的":{"docs":{},"随":{"docs":{},"机":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"下":{"docs":{},"降":{"docs":{},"，":{"docs":{},"在":{"docs":{},"获":{"docs":{},"得":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"后":{"docs":{},"使":{"docs":{},"用":{"docs":{},"反":{"docs":{},"向":{"docs":{},"误":{"docs":{},"差":{"docs":{},"传":{"docs":{},"导":{"docs":{},"算":{"docs":{},"法":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"训":{"docs":{},"练":{"docs":{},"。":{"docs":{},"由":{"docs":{},"于":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"提":{"docs":{},"供":{"docs":{},"自":{"docs":{},"动":{"docs":{},"的":{"docs":{},"微":{"docs":{},"分":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"教":{"docs":{},"程":{"docs":{},"里":{"docs":{},"面":{"docs":{},"谈":{"docs":{},"及":{"docs":{},"这":{"docs":{},"个":{"docs":{},"方":{"docs":{},"面":{"docs":{},"。":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"网":{"docs":{},"络":{"docs":{},"时":{"docs":{},"，":{"docs":{},"有":{"docs":{},"两":{"docs":{},"个":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"，":{"docs":{},"一":{"docs":{},"层":{"docs":{},"是":{"docs":{},"预":{"docs":{},"训":{"docs":{},"练":{"docs":{},"，":{"docs":{},"之":{"docs":{},"后":{"docs":{},"是":{"docs":{},"微":{"docs":{},"调":{"docs":{},"。":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"获":{"docs":{},"得":{"docs":{},"的":{"docs":{},"负":{"docs":{},"样":{"docs":{},"本":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"可":{"docs":{},"视":{"docs":{},"化":{"docs":{},"的":{"docs":{},"。":{"docs":{},"在":{"docs":{},"训":{"docs":{},"练":{"docs":{},"进":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"知":{"docs":{},"道":{"docs":{},"由":{"docs":{},"r":{"docs":{},"b":{"docs":{},"m":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"模":{"docs":{},"型":{"docs":{},"不":{"docs":{},"断":{"docs":{},"逼":{"docs":{},"近":{"docs":{},"真":{"docs":{},"实":{"docs":{},"分":{"docs":{},"布":{"docs":{},"，":{"docs":{},"p":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},"。":{"docs":{},"负":{"docs":{},"样":{"docs":{},"例":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"视":{"docs":{},"为":{"docs":{},"训":{"docs":{},"练":{"docs":{},"集":{"docs":{},"中":{"docs":{},"的":{"docs":{},"样":{"docs":{},"本":{"docs":{},"。":{"docs":{},"显":{"docs":{},"而":{"docs":{},"易":{"docs":{},"见":{"docs":{},"的":{"docs":{},"，":{"docs":{},"坏":{"docs":{},"的":{"docs":{},"超":{"docs":{},"参":{"docs":{},"数":{"docs":{},"将":{"docs":{},"在":{"docs":{},"这":{"docs":{},"种":{"docs":{},"方":{"docs":{},"式":{"docs":{},"下":{"docs":{},"被":{"docs":{},"丢":{"docs":{},"弃":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"c":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558}}}}}}}},"b":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"o":{"0":{"9":{"docs":{},"的":{"docs":{},"第":{"4":{"docs":{},".":{"6":{"docs":{},"节":{"docs":{},"中":{"docs":{},"，":{"docs":{},"有":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"的":{"docs":{},"简":{"docs":{},"介":{"docs":{},"。":{"docs":{},"一":{"docs":{},"个":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"，":{"docs":{},"由":{"docs":{},"d":{"docs":{},"维":{"docs":{},"的":{"docs":{},"[":{"0":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"输":{"docs":{},"入":{"docs":{},"向":{"docs":{},"量":{"docs":{},"x":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"第":{"docs":{},"一":{"docs":{},"层":{"docs":{},"映":{"docs":{},"射":{"docs":{},"（":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"编":{"docs":{},"码":{"docs":{},"器":{"docs":{},"）":{"docs":{},"来":{"docs":{},"获":{"docs":{},"得":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"的":{"docs":{},"d":{"docs":{},"‘":{"docs":{},"维":{"docs":{},"度":{"docs":{},"的":{"docs":{},"[":{"0":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},"的":{"docs":{},"输":{"docs":{},"出":{"docs":{},"表":{"docs":{},"达":{"docs":{},"y":{"docs":{},"。":{"docs":{},"通":{"docs":{},"过":{"docs":{},"如":{"docs":{},"下":{"docs":{},"的":{"docs":{},"决":{"docs":{},"定":{"docs":{},"性":{"docs":{},"映":{"docs":{},"射":{"docs":{},"：":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}},"docs":{}},"docs":{}}}}}}},"v":{"docs":{},"i":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"0":{"8":{"docs":{},"中":{"docs":{},"，":{"docs":{},"随":{"docs":{},"机":{"docs":{},"差":{"docs":{},"错":{"docs":{},"进":{"docs":{},"程":{"docs":{},"随":{"docs":{},"机":{"docs":{},"的":{"docs":{},"设":{"docs":{},"定":{"docs":{},"部":{"docs":{},"分":{"docs":{},"（":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"一":{"docs":{},"半":{"docs":{},"）":{"docs":{},"输":{"docs":{},"入":{"docs":{},"为":{"0":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"降":{"docs":{},"噪":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"去":{"docs":{},"从":{"docs":{},"未":{"docs":{},"被":{"docs":{},"污":{"docs":{},"染":{"docs":{},"的":{"docs":{},"值":{"docs":{},"中":{"docs":{},"去":{"docs":{},"预":{"docs":{},"测":{"docs":{},"被":{"docs":{},"污":{"docs":{},"染":{"docs":{},"的":{"docs":{},"（":{"docs":{},"丢":{"docs":{},"失":{"docs":{},"）":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"随":{"docs":{},"机":{"docs":{},"的":{"docs":{},"选":{"docs":{},"择":{"docs":{},"丢":{"docs":{},"失":{"docs":{},"模":{"docs":{},"式":{"docs":{},"下":{"docs":{},"的":{"docs":{},"仔":{"docs":{},"鸡":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"如":{"docs":{},"何":{"docs":{},"能":{"docs":{},"预":{"docs":{},"测":{"docs":{},"从":{"docs":{},"剩":{"docs":{},"下":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"任":{"docs":{},"意":{"docs":{},"子":{"docs":{},"集":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"充":{"docs":{},"分":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"去":{"docs":{},"完":{"docs":{},"全":{"docs":{},"捕":{"docs":{},"获":{"docs":{},"一":{"docs":{},"组":{"docs":{},"变":{"docs":{},"量":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"联":{"docs":{},"合":{"docs":{},"分":{"docs":{},"布":{"docs":{},"（":{"docs":{},"这":{"docs":{},"是":{"docs":{},"g":{"docs":{},"i":{"docs":{},"b":{"docs":{},"b":{"docs":{},"s":{"docs":{},"采":{"docs":{},"样":{"docs":{},"工":{"docs":{},"作":{"docs":{},"）":{"docs":{},"。":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}},"层":{"docs":{},"叠":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"类":{"docs":{},"(":{"docs":{},"层":{"docs":{},"叠":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},")":{"docs":{},"中":{"docs":{},"，":{"docs":{},"d":{"docs":{},"a":{"docs":{},"类":{"docs":{},"中":{"docs":{},"的":{"docs":{},"权":{"docs":{},"值":{"docs":{},"不":{"docs":{},"得":{"docs":{},"不":{"docs":{},"和":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"层":{"docs":{},"共":{"docs":{},"享":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"这":{"docs":{},"个":{"docs":{},"原":{"docs":{},"因":{"docs":{},"，":{"docs":{},"d":{"docs":{},"a":{"docs":{},"的":{"docs":{},"构":{"docs":{},"建":{"docs":{},"也":{"docs":{},"将":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"变":{"docs":{},"量":{"docs":{},"指":{"docs":{},"向":{"docs":{},"了":{"docs":{},"共":{"docs":{},"享":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{},"假":{"docs":{},"如":{"docs":{},"这":{"docs":{},"些":{"docs":{},"参":{"docs":{},"数":{"docs":{},"被":{"docs":{},"设":{"docs":{},"置":{"docs":{},"为":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"，":{"docs":{},"新":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"会":{"docs":{},"被":{"docs":{},"构":{"docs":{},"建":{"docs":{},"。":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"b":{"docs":{},"m":{"docs":{},"中":{"docs":{},"进":{"docs":{},"行":{"docs":{},"采":{"docs":{},"样":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"单":{"docs":{},"元":{"docs":{},"（":{"docs":{},"v":{"docs":{},"和":{"docs":{},"h":{"docs":{},"都":{"docs":{},"属":{"docs":{},"于":{"docs":{},"{":{"0":{"docs":{},",":{"1":{"docs":{},"}":{"docs":{},"）":{"docs":{},"的":{"docs":{},"普":{"docs":{},"通":{"docs":{},"研":{"docs":{},"究":{"docs":{},"情":{"docs":{},"况":{"docs":{},"时":{"docs":{},"，":{"docs":{},"概":{"docs":{},"率":{"docs":{},"版":{"docs":{},"的":{"docs":{},"普":{"docs":{},"通":{"docs":{},"神":{"docs":{},"经":{"docs":{},"激":{"docs":{},"活":{"docs":{},"函":{"docs":{},"数":{"docs":{},"表":{"docs":{},"示":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}},"很":{"docs":{},"多":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"无":{"docs":{},"法":{"docs":{},"观":{"docs":{},"察":{"docs":{},"到":{"docs":{},"x":{"docs":{},"样":{"docs":{},"本":{"docs":{},"的":{"docs":{},"全":{"docs":{},"部":{"docs":{},"分":{"docs":{},"布":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"引":{"docs":{},"进":{"docs":{},"一":{"docs":{},"些":{"docs":{},"没":{"docs":{},"有":{"docs":{},"观":{"docs":{},"察":{"docs":{},"到":{"docs":{},"的":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"以":{"docs":{},"增":{"docs":{},"加":{"docs":{},"模":{"docs":{},"型":{"docs":{},"的":{"docs":{},"表":{"docs":{},"达":{"docs":{},"能":{"docs":{},"力":{"docs":{},"。":{"docs":{},"因":{"docs":{},"而":{"docs":{},"我":{"docs":{},"们":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"将":{"docs":{},"模":{"docs":{},"型":{"docs":{},"分":{"docs":{},"为":{"2":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"可":{"docs":{},"见":{"docs":{},"部":{"docs":{},"分":{"docs":{},"（":{"docs":{},"x":{"docs":{},"的":{"docs":{},"观":{"docs":{},"察":{"docs":{},"分":{"docs":{},"布":{"docs":{},"）":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"部":{"docs":{},"分":{"docs":{},"h":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"得":{"docs":{},"到":{"docs":{},"的":{"docs":{},"就":{"docs":{},"是":{"docs":{},"包":{"docs":{},"含":{"docs":{},"隐":{"docs":{},"含":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"e":{"docs":{},"b":{"docs":{},"m":{"docs":{},"：":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"你":{"docs":{},"再":{"docs":{},"g":{"docs":{},"p":{"docs":{},"u":{"docs":{},"上":{"docs":{},"跑":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"数":{"docs":{},"据":{"docs":{},"集":{"docs":{},"太":{"docs":{},"大":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"导":{"docs":{},"致":{"docs":{},"内":{"docs":{},"存":{"docs":{},"崩":{"docs":{},"溃":{"docs":{},"。":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"你":{"docs":{},"就":{"docs":{},"应":{"docs":{},"当":{"docs":{},"把":{"docs":{},"数":{"docs":{},"据":{"docs":{},"存":{"docs":{},"储":{"docs":{},"为":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"。":{"docs":{},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"数":{"docs":{},"据":{"docs":{},"储":{"docs":{},"存":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"充":{"docs":{},"分":{"docs":{},"小":{"docs":{},"的":{"docs":{},"大":{"docs":{},"块":{"docs":{},"（":{"docs":{},"几":{"docs":{},"个":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"）":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"里":{"docs":{},"面":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"在":{"docs":{},"训":{"docs":{},"练":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"使":{"docs":{},"用":{"docs":{},"它":{"docs":{},"。":{"docs":{},"一":{"docs":{},"旦":{"docs":{},"你":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"这":{"docs":{},"个":{"docs":{},"大":{"docs":{},"块":{"docs":{},"，":{"docs":{},"更":{"docs":{},"新":{"docs":{},"它":{"docs":{},"储":{"docs":{},"存":{"docs":{},"的":{"docs":{},"值":{"docs":{},"。":{"docs":{},"这":{"docs":{},"将":{"docs":{},"最":{"docs":{},"小":{"docs":{},"化":{"docs":{},"c":{"docs":{},"p":{"docs":{},"u":{"docs":{},"和":{"docs":{},"g":{"docs":{},"p":{"docs":{},"u":{"docs":{},"的":{"docs":{},"内":{"docs":{},"存":{"docs":{},"交":{"docs":{},"换":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"已":{"docs":{},"经":{"docs":{},"阅":{"docs":{},"读":{"docs":{},"了":{"docs":{},"上":{"docs":{},"面":{"docs":{},"的":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"层":{"docs":{},"输":{"docs":{},"出":{"docs":{},"和":{"docs":{},"使":{"docs":{},"用":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"回":{"docs":{},"归":{"docs":{},"进":{"docs":{},"行":{"docs":{},"m":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"分":{"docs":{},"类":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"m":{"docs":{},"l":{"docs":{},"p":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"了":{"docs":{},"。":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"想":{"docs":{},"要":{"docs":{},"在":{"docs":{},"g":{"docs":{},"p":{"docs":{},"u":{"docs":{},"上":{"docs":{},"跑":{"docs":{},"样":{"docs":{},"例":{"docs":{},"，":{"docs":{},"你":{"docs":{},"需":{"docs":{},"要":{"docs":{},"一":{"docs":{},"个":{"docs":{},"好":{"docs":{},"的":{"docs":{},"g":{"docs":{},"p":{"docs":{},"u":{"docs":{},"。":{"docs":{},"至":{"docs":{},"少":{"docs":{},"是":{"1":{"docs":{},"g":{"docs":{},"b":{"docs":{},"显":{"docs":{},"存":{"docs":{},"的":{"docs":{},"。":{"docs":{},"当":{"docs":{},"显":{"docs":{},"示":{"docs":{},"器":{"docs":{},"连":{"docs":{},"接":{"docs":{},"在":{"docs":{},"显":{"docs":{},"卡":{"docs":{},"上":{"docs":{},"时":{"docs":{},"，":{"docs":{},"你":{"docs":{},"可":{"docs":{},"能":{"docs":{},"需":{"docs":{},"要":{"docs":{},"更":{"docs":{},"大":{"docs":{},"的":{"docs":{},"显":{"docs":{},"存":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}},"过":{"docs":{},"训":{"docs":{},"练":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"批":{"docs":{},"次":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}},"想":{"docs":{},"要":{"docs":{},"获":{"docs":{},"得":{"docs":{},"完":{"docs":{},"整":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"算":{"docs":{},"子":{"docs":{},"，":{"docs":{},"看":{"docs":{},"算":{"docs":{},"子":{"docs":{},"列":{"docs":{},"表":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}}}},"学":{"docs":{},"习":{"docs":{},"一":{"docs":{},"个":{"docs":{},"分":{"docs":{},"类":{"docs":{},"器":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}},"优":{"docs":{},"化":{"docs":{},"模":{"docs":{},"型":{"docs":{},"参":{"docs":{},"数":{"docs":{},"需":{"docs":{},"要":{"docs":{},"最":{"docs":{},"小":{"docs":{},"化":{"docs":{},"一":{"docs":{},"个":{"docs":{},"损":{"docs":{},"失":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{},"在":{"docs":{},"多":{"docs":{},"分":{"docs":{},"类":{"docs":{},"的":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"回":{"docs":{},"归":{"docs":{},"中":{"docs":{},"，":{"docs":{},"很":{"docs":{},"显":{"docs":{},"然":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"负":{"docs":{},"对":{"docs":{},"数":{"docs":{},"似":{"docs":{},"然":{"docs":{},"函":{"docs":{},"数":{"docs":{},"作":{"docs":{},"为":{"docs":{},"损":{"docs":{},"失":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{},"似":{"docs":{},"然":{"docs":{},"函":{"docs":{},"数":{"docs":{},"和":{"docs":{},"损":{"docs":{},"失":{"docs":{},"函":{"docs":{},"数":{"docs":{},"定":{"docs":{},"义":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"模":{"docs":{},"型":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}},"率":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}},"当":{"docs":{},"你":{"docs":{},"做":{"docs":{},"实":{"docs":{},"验":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"用":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"下":{"docs":{},"降":{"docs":{},"算":{"docs":{},"法":{"docs":{},"可":{"docs":{},"能":{"docs":{},"要":{"docs":{},"好":{"docs":{},"几":{"docs":{},"个":{"docs":{},"小":{"docs":{},"时":{"docs":{},"去":{"docs":{},"发":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"最":{"docs":{},"优":{"docs":{},"解":{"docs":{},"。":{"docs":{},"你":{"docs":{},"可":{"docs":{},"能":{"docs":{},"在":{"docs":{},"发":{"docs":{},"现":{"docs":{},"解":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"想":{"docs":{},"要":{"docs":{},"保":{"docs":{},"存":{"docs":{},"这":{"docs":{},"些":{"docs":{},"权":{"docs":{},"值":{"docs":{},"。":{"docs":{},"你":{"docs":{},"也":{"docs":{},"可":{"docs":{},"能":{"docs":{},"想":{"docs":{},"要":{"docs":{},"保":{"docs":{},"存":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"进":{"docs":{},"程":{"docs":{},"中":{"docs":{},"当":{"docs":{},"前":{"docs":{},"最":{"docs":{},"优":{"docs":{},"化":{"docs":{},"的":{"docs":{},"解":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"已":{"docs":{},"经":{"docs":{},"产":{"docs":{},"生":{"docs":{},"了":{"docs":{},"这":{"docs":{},"个":{"docs":{},"链":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"链":{"docs":{},"的":{"docs":{},"末":{"docs":{},"尾":{"docs":{},"的":{"docs":{},"样":{"docs":{},"例":{"docs":{},"获":{"docs":{},"得":{"docs":{},"负":{"docs":{},"相":{"docs":{},"位":{"docs":{},"的":{"docs":{},"自":{"docs":{},"由":{"docs":{},"能":{"docs":{},"量":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"是":{"docs":{},"模":{"docs":{},"型":{"docs":{},"参":{"docs":{},"数":{"docs":{},"项":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"的":{"docs":{},"象":{"docs":{},"征":{"docs":{},"性":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"当":{"docs":{},"我":{"docs":{},"们":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"求":{"docs":{},"解":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"将":{"docs":{},"通":{"docs":{},"过":{"docs":{},"g":{"docs":{},"i":{"docs":{},"b":{"docs":{},"b":{"docs":{},"s":{"docs":{},"链":{"docs":{},"来":{"docs":{},"得":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"。":{"docs":{},"这":{"docs":{},"不":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"想":{"docs":{},"要":{"docs":{},"的":{"docs":{},"（":{"docs":{},"它":{"docs":{},"会":{"docs":{},"搞":{"docs":{},"乱":{"docs":{},"我":{"docs":{},"们":{"docs":{},"的":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"）":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"指":{"docs":{},"示":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"，":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"常":{"docs":{},"量":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"通":{"docs":{},"过":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"r":{"docs":{},"a":{"docs":{},"d":{"docs":{},"的":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"i":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"来":{"docs":{},"做":{"docs":{},"这":{"docs":{},"个":{"docs":{},"事":{"docs":{},"情":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"据":{"docs":{},"集":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"将":{"docs":{},"它":{"docs":{},"分":{"docs":{},"割":{"docs":{},"维":{"docs":{},"几":{"docs":{},"个":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"建":{"docs":{},"议":{"docs":{},"你":{"docs":{},"将":{"docs":{},"数":{"docs":{},"据":{"docs":{},"集":{"docs":{},"储":{"docs":{},"存":{"docs":{},"为":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"（":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"使":{"docs":{},"用":{"docs":{},"任":{"docs":{},"何":{"docs":{},"噪":{"docs":{},"声":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"获":{"docs":{},"得":{"docs":{},"的":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}},"然":{"docs":{},"，":{"docs":{},"事":{"docs":{},"实":{"docs":{},"上":{"docs":{},"，":{"docs":{},"简":{"docs":{},"单":{"docs":{},"模":{"docs":{},"型":{"docs":{},"并":{"docs":{},"不":{"docs":{},"一":{"docs":{},"定":{"docs":{},"意":{"docs":{},"味":{"docs":{},"着":{"docs":{},"好":{"docs":{},"的":{"docs":{},"泛":{"docs":{},"化":{"docs":{},"。":{"docs":{},"但":{"docs":{},"从":{"docs":{},"经":{"docs":{},"验":{"docs":{},"上":{"docs":{},"看":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"正":{"docs":{},"则":{"docs":{},"化":{"docs":{},"方":{"docs":{},"案":{"docs":{},"可":{"docs":{},"以":{"docs":{},"提":{"docs":{},"高":{"docs":{},"神":{"docs":{},"经":{"docs":{},"网":{"docs":{},"络":{"docs":{},"的":{"docs":{},"泛":{"docs":{},"化":{"docs":{},"能":{"docs":{},"力":{"docs":{},"，":{"docs":{},"尤":{"docs":{},"其":{"docs":{},"是":{"docs":{},"对":{"docs":{},"于":{"docs":{},"小":{"docs":{},"数":{"docs":{},"据":{"docs":{},"集":{"docs":{},"而":{"docs":{},"言":{"docs":{},"。":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"我":{"docs":{},"们":{"docs":{},"分":{"docs":{},"别":{"docs":{},"给":{"docs":{},"两":{"docs":{},"个":{"docs":{},"正":{"docs":{},"则":{"docs":{},"项":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"权":{"docs":{},"重":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"p":{"docs":{},"u":{"docs":{},"连":{"docs":{},"接":{"docs":{},"在":{"docs":{},"显":{"docs":{},"示":{"docs":{},"器":{"docs":{},"上":{"docs":{},"时":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"g":{"docs":{},"p":{"docs":{},"u":{"docs":{},"的":{"docs":{},"调":{"docs":{},"用":{"docs":{},"会":{"docs":{},"有":{"docs":{},"几":{"docs":{},"秒":{"docs":{},"钟":{"docs":{},"的":{"docs":{},"限":{"docs":{},"制":{"docs":{},"。":{"docs":{},"这":{"docs":{},"是":{"docs":{},"必":{"docs":{},"须":{"docs":{},"的":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"g":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"不":{"docs":{},"能":{"docs":{},"在":{"docs":{},"计":{"docs":{},"算":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"被":{"docs":{},"用":{"docs":{},"于":{"docs":{},"显":{"docs":{},"示":{"docs":{},"器":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"没":{"docs":{},"有":{"docs":{},"这":{"docs":{},"个":{"docs":{},"限":{"docs":{},"制":{"docs":{},"，":{"docs":{},"屏":{"docs":{},"幕":{"docs":{},"会":{"docs":{},"长":{"docs":{},"时":{"docs":{},"间":{"docs":{},"不":{"docs":{},"动":{"docs":{},"，":{"docs":{},"就":{"docs":{},"像":{"docs":{},"死":{"docs":{},"机":{"docs":{},"一":{"docs":{},"样":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"例":{"docs":{},"子":{"docs":{},"会":{"docs":{},"说":{"docs":{},"中":{"docs":{},"中":{"docs":{},"等":{"docs":{},"质":{"docs":{},"量":{"docs":{},"的":{"docs":{},"g":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"。":{"docs":{},"当":{"docs":{},"g":{"docs":{},"p":{"docs":{},"u":{"docs":{},"不":{"docs":{},"连":{"docs":{},"接":{"docs":{},"显":{"docs":{},"示":{"docs":{},"器":{"docs":{},"时":{"docs":{},"，":{"docs":{},"没":{"docs":{},"有":{"docs":{},"这":{"docs":{},"个":{"docs":{},"时":{"docs":{},"间":{"docs":{},"限":{"docs":{},"制":{"docs":{},"。":{"docs":{},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"降":{"docs":{},"低":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"来":{"docs":{},"出":{"docs":{},"来":{"docs":{},"延":{"docs":{},"时":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"选":{"docs":{},"择":{"docs":{},"每":{"docs":{},"层":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"数":{"docs":{},"量":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"记":{"docs":{},"住":{"docs":{},"计":{"docs":{},"算":{"docs":{},"单":{"docs":{},"卷":{"docs":{},"积":{"docs":{},"层":{"docs":{},"的":{"docs":{},"活":{"docs":{},"性":{"docs":{},"比":{"docs":{},"传":{"docs":{},"统":{"docs":{},"的":{"docs":{},"m":{"docs":{},"l":{"docs":{},"p":{"docs":{},"会":{"docs":{},"更":{"docs":{},"加":{"docs":{},"昂":{"docs":{},"贵":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"趋":{"docs":{},"向":{"docs":{},"于":{"docs":{},"无":{"docs":{},"穷":{"docs":{},"时":{"docs":{},"，":{"docs":{},"(":{"docs":{},"v":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},",":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},")":{"docs":{},")":{"docs":{},"将":{"docs":{},"越":{"docs":{},"加":{"docs":{},"逼":{"docs":{},"近":{"docs":{},"正":{"docs":{},"确":{"docs":{},"样":{"docs":{},"本":{"docs":{},"的":{"docs":{},"概":{"docs":{},"率":{"docs":{},"分":{"docs":{},"布":{"docs":{},"p":{"docs":{},"(":{"docs":{},"v":{"docs":{},",":{"docs":{},"h":{"docs":{},")":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"总":{"docs":{},"结":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}},"我":{"docs":{},"们":{"docs":{},"不":{"docs":{},"止":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"在":{"docs":{},"深":{"docs":{},"度":{"docs":{},"学":{"docs":{},"习":{"docs":{},"中":{"docs":{},"提":{"docs":{},"及":{"docs":{},"这":{"docs":{},"个":{"docs":{},"变":{"docs":{},"体":{"docs":{},"—":{"docs":{},"—":{"docs":{},"“":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},"s":{"docs":{},"”":{"docs":{},"。":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"随":{"docs":{},"机":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"下":{"docs":{},"降":{"docs":{},"区":{"docs":{},"别":{"docs":{},"与":{"docs":{},"随":{"docs":{},"机":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"下":{"docs":{},"降":{"docs":{},"，":{"docs":{},"在":{"docs":{},"每":{"docs":{},"次":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"估":{"docs":{},"计":{"docs":{},"时":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"技":{"docs":{},"术":{"docs":{},"减":{"docs":{},"小":{"docs":{},"了":{"docs":{},"每":{"docs":{},"次":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"估":{"docs":{},"计":{"docs":{},"时":{"docs":{},"的":{"docs":{},"方":{"docs":{},"差":{"docs":{},"，":{"docs":{},"也":{"docs":{},"适":{"docs":{},"合":{"docs":{},"现":{"docs":{},"代":{"docs":{},"电":{"docs":{},"脑":{"docs":{},"的":{"docs":{},"分":{"docs":{},"层":{"docs":{},"内":{"docs":{},"存":{"docs":{},"构":{"docs":{},"架":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"依":{"docs":{},"据":{"docs":{},"在":{"docs":{},"验":{"docs":{},"证":{"docs":{},"集":{"docs":{},"上":{"docs":{},"表":{"docs":{},"现":{"docs":{},"最":{"docs":{},"好":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"作":{"docs":{},"为":{"docs":{},"模":{"docs":{},"型":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"去":{"docs":{},"在":{"docs":{},"测":{"docs":{},"试":{"docs":{},"集":{"docs":{},"上":{"docs":{},"进":{"docs":{},"行":{"docs":{},"测":{"docs":{},"试":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"定":{"docs":{},"义":{"docs":{},"数":{"docs":{},"据":{"docs":{},"集":{"docs":{},"为":{"docs":{},"d":{"docs":{},",":{"docs":{},"包":{"docs":{},"括":{"3":{"docs":{},"个":{"docs":{},"部":{"docs":{},"分":{"docs":{},"，":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"，":{"docs":{},"d":{"docs":{},"_":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"，":{"docs":{},"d":{"docs":{},"_":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"三":{"docs":{},"个":{"docs":{},"集":{"docs":{},"合":{"docs":{},"。":{"docs":{},"d":{"docs":{},"内":{"docs":{},"每":{"docs":{},"个":{"docs":{},"索":{"docs":{},"引":{"docs":{},"都":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"(":{"docs":{},"x":{"docs":{},",":{"docs":{},"y":{"docs":{},")":{"docs":{},"对":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"创":{"docs":{},"建":{"docs":{},"了":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"也":{"docs":{},"创":{"docs":{},"建":{"docs":{},"了":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"来":{"docs":{},"调":{"docs":{},"用":{"docs":{},"去":{"docs":{},"修":{"docs":{},"正":{"docs":{},"这":{"docs":{},"个":{"docs":{},"值":{"docs":{},"。":{"docs":{},"当":{"docs":{},"然":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"是":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"如":{"docs":{},"下":{"docs":{},"代":{"docs":{},"码":{"docs":{},"来":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"。":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"来":{"docs":{},"更":{"docs":{},"新":{"docs":{},"模":{"docs":{},"型":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"这":{"docs":{},"基":{"docs":{},"本":{"docs":{},"和":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"回":{"docs":{},"归":{"docs":{},"里":{"docs":{},"面":{"docs":{},"的":{"docs":{},"一":{"docs":{},"样":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"从":{"docs":{},"模":{"docs":{},"型":{"docs":{},"的":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"m":{"docs":{},"s":{"docs":{},"中":{"docs":{},"获":{"docs":{},"取":{"docs":{},"参":{"docs":{},"数":{"docs":{},"列":{"docs":{},"表":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"分":{"docs":{},"析":{"docs":{},"它":{"docs":{},"，":{"docs":{},"并":{"docs":{},"计":{"docs":{},"算":{"docs":{},"每":{"docs":{},"一":{"docs":{},"步":{"docs":{},"的":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"。":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"把":{"docs":{},"进":{"docs":{},"行":{"docs":{},"实":{"docs":{},"际":{"docs":{},"训":{"docs":{},"练":{"docs":{},"和":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}},"希":{"docs":{},"望":{"docs":{},"这":{"docs":{},"样":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"编":{"docs":{},"码":{"docs":{},"y":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"分":{"docs":{},"布":{"docs":{},"式":{"docs":{},"表":{"docs":{},"达":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"捕":{"docs":{},"捉":{"docs":{},"数":{"docs":{},"据":{"docs":{},"中":{"docs":{},"主":{"docs":{},"要":{"docs":{},"因":{"docs":{},"子":{"docs":{},"变":{"docs":{},"化":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{},"这":{"docs":{},"就":{"docs":{},"类":{"docs":{},"似":{"docs":{},"与":{"docs":{},"主":{"docs":{},"成":{"docs":{},"分":{"docs":{},"凸":{"docs":{},"出":{"docs":{},"，":{"docs":{},"金":{"docs":{},"额":{"docs":{},"也":{"docs":{},"捕":{"docs":{},"捉":{"docs":{},"数":{"docs":{},"据":{"docs":{},"中":{"docs":{},"主":{"docs":{},"要":{"docs":{},"因":{"docs":{},"子":{"docs":{},"的":{"docs":{},"变":{"docs":{},"化":{"docs":{},"。":{"docs":{},"事":{"docs":{},"实":{"docs":{},"上":{"docs":{},"，":{"docs":{},"假":{"docs":{},"如":{"docs":{},"这":{"docs":{},"里":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"性":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"层":{"docs":{},"（":{"docs":{},"这":{"docs":{},"个":{"docs":{},"编":{"docs":{},"码":{"docs":{},"）":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"平":{"docs":{},"均":{"docs":{},"平":{"docs":{},"方":{"docs":{},"误":{"docs":{},"差":{"docs":{},"准":{"docs":{},"则":{"docs":{},"被":{"docs":{},"用":{"docs":{},"以":{"docs":{},"训":{"docs":{},"练":{"docs":{},"这":{"docs":{},"个":{"docs":{},"网":{"docs":{},"络":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"这":{"docs":{},"k":{"docs":{},"个":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"单":{"docs":{},"元":{"docs":{},"学":{"docs":{},"习":{"docs":{},"去":{"docs":{},"凸":{"docs":{},"出":{"docs":{},"这":{"docs":{},"个":{"docs":{},"输":{"docs":{},"入":{"docs":{},"，":{"docs":{},"在":{"docs":{},"该":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"前":{"docs":{},"k":{"docs":{},"个":{"docs":{},"主":{"docs":{},"成":{"docs":{},"分":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"中":{"docs":{},"。":{"docs":{},"假":{"docs":{},"如":{"docs":{},"这":{"docs":{},"个":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"层":{"docs":{},"是":{"docs":{},"非":{"docs":{},"线":{"docs":{},"性":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"表":{"docs":{},"现":{"docs":{},"的":{"docs":{},"是":{"docs":{},"与":{"docs":{},"p":{"docs":{},"c":{"docs":{},"a":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"，":{"docs":{},"它":{"docs":{},"有":{"docs":{},"着":{"docs":{},"捕":{"docs":{},"捉":{"docs":{},"输":{"docs":{},"入":{"docs":{},"分":{"docs":{},"布":{"docs":{},"的":{"docs":{},"多":{"docs":{},"模":{"docs":{},"态":{"docs":{},"方":{"docs":{},"面":{"docs":{},"的":{"docs":{},"能":{"docs":{},"力":{"docs":{},"。":{"docs":{},"从":{"docs":{},"p":{"docs":{},"c":{"docs":{},"a":{"docs":{},"开":{"docs":{},"始":{"docs":{},"变":{"docs":{},"得":{"docs":{},"更":{"docs":{},"加":{"docs":{},"重":{"docs":{},"要":{"docs":{},"，":{"docs":{},"当":{"docs":{},"我":{"docs":{},"们":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"堆":{"docs":{},"叠":{"docs":{},"混":{"docs":{},"合":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"中":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"，":{"docs":{},"作":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"，":{"docs":{},"它":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"未":{"docs":{},"来":{"docs":{},"去":{"docs":{},"构":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"层":{"docs":{},"叠":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"第":{"docs":{},"一":{"docs":{},"步":{"docs":{},"是":{"docs":{},"去":{"docs":{},"创":{"docs":{},"建":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"的":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"参":{"docs":{},"数":{"docs":{},"（":{"docs":{},"w":{"docs":{},"，":{"docs":{},"b":{"docs":{},"，":{"docs":{},"b":{"docs":{},"‘":{"docs":{},"）":{"docs":{},"。":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"现":{"docs":{},"在":{"docs":{},"可":{"docs":{},"以":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"更":{"docs":{},"新":{"docs":{},"参":{"docs":{},"数":{"docs":{},"w":{"docs":{},"，":{"docs":{},"b":{"docs":{},"，":{"docs":{},"b":{"docs":{},"‘":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"这":{"docs":{},"个":{"docs":{},"重":{"docs":{},"构":{"docs":{},"消":{"docs":{},"耗":{"docs":{},"大":{"docs":{},"约":{"docs":{},"是":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"。":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"能":{"docs":{},"通":{"docs":{},"过":{"docs":{},"一":{"docs":{},"些":{"docs":{},"采":{"docs":{},"样":{"docs":{},"方":{"docs":{},"法":{"docs":{},"（":{"docs":{},"如":{"docs":{},"g":{"docs":{},"i":{"docs":{},"b":{"docs":{},"b":{"docs":{},"s":{"docs":{},"采":{"docs":{},"样":{"docs":{},"）":{"docs":{},"获":{"docs":{},"取":{"docs":{},"其":{"docs":{},"近":{"docs":{},"似":{"docs":{},"值":{"docs":{},"，":{"docs":{},"其":{"docs":{},"具":{"docs":{},"体":{"docs":{},"方":{"docs":{},"法":{"docs":{},"将":{"docs":{},"在":{"docs":{},"后":{"docs":{},"文":{"docs":{},"中":{"docs":{},"详":{"docs":{},"述":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"从":{"docs":{},"x":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"任":{"docs":{},"意":{"docs":{},"状":{"docs":{},"态":{"docs":{},"(":{"docs":{},"比":{"docs":{},"如":{"docs":{},"[":{"docs":{},"x":{"1":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},",":{"docs":{},"x":{"2":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},",":{"docs":{},"…":{"docs":{},",":{"docs":{},"x":{"docs":{},"k":{"docs":{},"(":{"0":{"docs":{},")":{"docs":{},"]":{"docs":{},")":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"利":{"docs":{},"用":{"docs":{},"上":{"docs":{},"述":{"docs":{},"条":{"docs":{},"件":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"docs":{}}},"docs":{}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}},"获":{"docs":{},"得":{"docs":{},"如":{"docs":{},"下":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"单":{"docs":{},"元":{"docs":{},"r":{"docs":{},"b":{"docs":{},"m":{"docs":{},"的":{"docs":{},"对":{"docs":{},"数":{"docs":{},"似":{"docs":{},"然":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"：":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}},"构":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"r":{"docs":{},"b":{"docs":{},"m":{"docs":{},"类":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"网":{"docs":{},"络":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"既":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"构":{"docs":{},"造":{"docs":{},"函":{"docs":{},"数":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"作":{"docs":{},"为":{"docs":{},"参":{"docs":{},"数":{"docs":{},"进":{"docs":{},"行":{"docs":{},"传":{"docs":{},"入":{"docs":{},"。":{"docs":{},"当":{"docs":{},"r":{"docs":{},"b":{"docs":{},"m":{"docs":{},"被":{"docs":{},"用":{"docs":{},"于":{"docs":{},"构":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"深":{"docs":{},"度":{"docs":{},"网":{"docs":{},"络":{"docs":{},"时":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"选":{"docs":{},"项":{"docs":{},"—":{"docs":{},"—":{"docs":{},"权":{"docs":{},"重":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"和":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"层":{"docs":{},"偏":{"docs":{},"置":{"docs":{},"与":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"l":{"docs":{},"p":{"docs":{},"网":{"docs":{},"络":{"docs":{},"的":{"docs":{},"相":{"docs":{},"应":{"docs":{},"的":{"docs":{},"s":{"docs":{},"形":{"docs":{},"层":{"docs":{},"共":{"docs":{},"享":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"非":{"docs":{},"常":{"docs":{},"有":{"docs":{},"用":{"docs":{},"的":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"随":{"docs":{},"后":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"方":{"docs":{},"法":{"docs":{},"，":{"docs":{},"目":{"docs":{},"的":{"docs":{},"是":{"docs":{},"产":{"docs":{},"生":{"docs":{},"c":{"docs":{},"d":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{},"学":{"docs":{},"约":{"docs":{},"定":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}},"据":{"docs":{},"集":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}},"标":{"docs":{},"记":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}},"的":{"docs":{},"服":{"docs":{},"对":{"docs":{},"数":{"docs":{},"似":{"docs":{},"然":{"docs":{},"函":{"docs":{},"数":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"就":{"docs":{},"有":{"docs":{},"如":{"docs":{},"下":{"docs":{},"有":{"docs":{},"趣":{"docs":{},"的":{"docs":{},"形":{"docs":{},"式":{"docs":{},"：":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}},"标":{"docs":{},"记":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}},"正":{"docs":{},"则":{"docs":{},"化":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}},"是":{"docs":{},"为":{"docs":{},"了":{"docs":{},"防":{"docs":{},"止":{"docs":{},"在":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{},"d":{"docs":{},"训":{"docs":{},"练":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"过":{"docs":{},"拟":{"docs":{},"合":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"应":{"docs":{},"对":{"docs":{},"过":{"docs":{},"拟":{"docs":{},"合":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"提":{"docs":{},"出":{"docs":{},"了":{"docs":{},"几":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"：":{"docs":{},"l":{"1":{"docs":{},"/":{"docs":{},"l":{"2":{"docs":{},"正":{"docs":{},"则":{"docs":{},"化":{"docs":{},"和":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"参":{"docs":{},"数":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}},"测":{"docs":{},"试":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}},"由":{"docs":{},"于":{"0":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}},"docs":{},"我":{"docs":{},"们":{"docs":{},"通":{"docs":{},"常":{"docs":{},"说":{"docs":{},"最":{"docs":{},"小":{"docs":{},"化":{"docs":{},"损":{"docs":{},"失":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"我":{"docs":{},"们":{"docs":{},"给":{"docs":{},"对":{"docs":{},"数":{"docs":{},"似":{"docs":{},"然":{"docs":{},"函":{"docs":{},"数":{"docs":{},"添":{"docs":{},"加":{"docs":{},"负":{"docs":{},"号":{"docs":{},"，":{"docs":{},"来":{"docs":{},"使":{"docs":{},"得":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"求":{"docs":{},"解":{"docs":{},"最":{"docs":{},"小":{"docs":{},"化":{"docs":{},"负":{"docs":{},"对":{"docs":{},"数":{"docs":{},"似":{"docs":{},"然":{"docs":{},"损":{"docs":{},"失":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"现":{"docs":{},"在":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"再":{"docs":{},"一":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"里":{"docs":{},"面":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"被":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{},"这":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"切":{"docs":{},"片":{"docs":{},"。":{"docs":{},"通":{"docs":{},"过":{"docs":{},"指":{"docs":{},"定":{"docs":{},"它":{"docs":{},"的":{"docs":{},"索":{"docs":{},"引":{"docs":{},"和":{"docs":{},"它":{"docs":{},"的":{"docs":{},"尺":{"docs":{},"寸":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"更":{"docs":{},"加":{"docs":{},"自":{"docs":{},"然":{"docs":{},"的":{"docs":{},"来":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"。":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"展":{"docs":{},"示":{"docs":{},"了":{"docs":{},"如":{"docs":{},"何":{"docs":{},"去":{"docs":{},"存":{"docs":{},"取":{"docs":{},"数":{"docs":{},"据":{"docs":{},"和":{"docs":{},"如":{"docs":{},"何":{"docs":{},"存":{"docs":{},"取":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"模":{"docs":{},"型":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"需":{"docs":{},"要":{"docs":{},"不":{"docs":{},"断":{"docs":{},"的":{"docs":{},"存":{"docs":{},"取":{"docs":{},"和":{"docs":{},"修":{"docs":{},"正":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"我":{"docs":{},"们":{"docs":{},"把":{"docs":{},"w":{"docs":{},"和":{"docs":{},"b":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"d":{"docs":{},"o":{"docs":{},"t":{"docs":{},"（":{"docs":{},"点":{"docs":{},"乘":{"docs":{},"）":{"docs":{},"和":{"docs":{},"s":{"docs":{},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"运":{"docs":{},"算":{"docs":{},"用":{"docs":{},"以":{"docs":{},"计":{"docs":{},"算":{"docs":{},"这":{"docs":{},"个":{"docs":{},"p":{"docs":{},"(":{"docs":{},"y":{"docs":{},"|":{"docs":{},"x":{"docs":{},",":{"docs":{},"w":{"docs":{},",":{"docs":{},"b":{"docs":{},")":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"结":{"docs":{},"果":{"docs":{},"p":{"docs":{},"_":{"docs":{},"y":{"docs":{},"_":{"docs":{},"g":{"docs":{},"i":{"docs":{},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"_":{"docs":{},"x":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"类":{"docs":{},"型":{"docs":{},"的":{"docs":{},"概":{"docs":{},"率":{"docs":{},"向":{"docs":{},"量":{"docs":{},"。":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"b":{"docs":{},"m":{"docs":{},"的":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"可":{"docs":{},"视":{"docs":{},"层":{"docs":{},"和":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"层":{"docs":{},"层":{"docs":{},"间":{"docs":{},"单":{"docs":{},"元":{"docs":{},"是":{"docs":{},"相":{"docs":{},"互":{"docs":{},"独":{"docs":{},"立":{"docs":{},"的":{"docs":{},"。":{"docs":{},"利":{"docs":{},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{},"特":{"docs":{},"性":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"定":{"docs":{},"义":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"个":{"docs":{},"随":{"docs":{},"机":{"docs":{},"变":{"docs":{},"量":{"docs":{},"（":{"docs":{},"s":{"docs":{},"=":{"docs":{},"(":{"docs":{},"s":{"1":{"docs":{},",":{"docs":{},"s":{"2":{"docs":{},",":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"s":{"docs":{},"n":{"docs":{},")":{"docs":{},"）":{"docs":{},"的":{"docs":{},"联":{"docs":{},"合":{"docs":{},"分":{"docs":{},"布":{"docs":{},"的":{"docs":{},"g":{"docs":{},"i":{"docs":{},"b":{"docs":{},"b":{"docs":{},"s":{"docs":{},"采":{"docs":{},"样":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"n":{"docs":{},"个":{"docs":{},"采":{"docs":{},"样":{"docs":{},"子":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},",":{"docs":{},"形":{"docs":{},"式":{"docs":{},"如":{"docs":{},"s":{"docs":{},"i":{"docs":{},"～":{"docs":{},"p":{"docs":{},"(":{"docs":{},"s":{"docs":{},"i":{"docs":{},"|":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}},"模":{"docs":{},"型":{"docs":{},"训":{"docs":{},"练":{"docs":{},"的":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"是":{"docs":{},"可":{"docs":{},"以":{"docs":{},"可":{"docs":{},"视":{"docs":{},"化":{"docs":{},"的":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"每":{"docs":{},"个":{"docs":{},"单":{"docs":{},"元":{"docs":{},"的":{"docs":{},"权":{"docs":{},"值":{"docs":{},"以":{"docs":{},"灰":{"docs":{},"度":{"docs":{},"图":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"展":{"docs":{},"示":{"docs":{},"。":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"应":{"docs":{},"该":{"docs":{},"选":{"docs":{},"出":{"docs":{},"数":{"docs":{},"据":{"docs":{},"中":{"docs":{},"强":{"docs":{},"的":{"docs":{},"特":{"docs":{},"征":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"任":{"docs":{},"意":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"集":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"都":{"docs":{},"是":{"docs":{},"不":{"docs":{},"确":{"docs":{},"定":{"docs":{},"的":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"训":{"docs":{},"练":{"docs":{},"m":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"，":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"就":{"docs":{},"表":{"docs":{},"现":{"docs":{},"的":{"docs":{},"像":{"docs":{},"“":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"k":{"docs":{},"e":{"docs":{},"”":{"docs":{},"检":{"docs":{},"测":{"docs":{},"器":{"docs":{},"，":{"docs":{},"而":{"docs":{},"训":{"docs":{},"练":{"docs":{},"自":{"docs":{},"然":{"docs":{},"图":{"docs":{},"像":{"docs":{},"的":{"docs":{},"稀":{"docs":{},"疏":{"docs":{},"编":{"docs":{},"码":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"则":{"docs":{},"像":{"docs":{},"g":{"docs":{},"a":{"docs":{},"b":{"docs":{},"o":{"docs":{},"r":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"负":{"docs":{},"对":{"docs":{},"数":{"docs":{},"似":{"docs":{},"然":{"docs":{},"损":{"docs":{},"失":{"docs":{},"函":{"docs":{},"数":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}},"样":{"docs":{},"本":{"docs":{},"的":{"docs":{},"检":{"docs":{},"查":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}},"载":{"docs":{},"入":{"docs":{},"和":{"docs":{},"保":{"docs":{},"存":{"docs":{},"模":{"docs":{},"型":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}},"随":{"docs":{},"机":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"下":{"docs":{},"降":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}},"则":{"docs":{},"是":{"docs":{},"普":{"docs":{},"通":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"下":{"docs":{},"降":{"docs":{},"的":{"docs":{},"优":{"docs":{},"化":{"docs":{},"。":{"docs":{},"通":{"docs":{},"过":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"部":{"docs":{},"分":{"docs":{},"样":{"docs":{},"本":{"docs":{},"来":{"docs":{},"优":{"docs":{},"化":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"代":{"docs":{},"替":{"docs":{},"所":{"docs":{},"有":{"docs":{},"样":{"docs":{},"本":{"docs":{},"优":{"docs":{},"化":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"得":{"docs":{},"以":{"docs":{},"更":{"docs":{},"快":{"docs":{},"逼":{"docs":{},"近":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"一":{"docs":{},"次":{"docs":{},"只":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"样":{"docs":{},"本":{"docs":{},"来":{"docs":{},"计":{"docs":{},"算":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"。":{"docs":{"1_Getting_Started_入门.html":{"ref":"1_Getting_Started_入门.html","tf":0.0016339869281045752}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"着":{"docs":{},"时":{"docs":{},"间":{"docs":{},"的":{"docs":{},"推":{"docs":{},"移":{"docs":{},"减":{"docs":{},"小":{"docs":{},"学":{"docs":{},"习":{"docs":{},"速":{"docs":{},"率":{"docs":{},"有":{"docs":{},"时":{"docs":{},"候":{"docs":{},"也":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"好":{"docs":{},"主":{"docs":{},"意":{"docs":{},"。":{"docs":{},"一":{"docs":{},"个":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{},"公":{"docs":{},"式":{"docs":{},"：":{"docs":{},"u":{"docs":{},"/":{"docs":{},"(":{"1":{"docs":{},"+":{"docs":{},"d":{"docs":{},"*":{"docs":{},"t":{"docs":{},")":{"docs":{},"，":{"docs":{},"u":{"docs":{},"是":{"docs":{},"初":{"docs":{},"始":{"docs":{},"速":{"docs":{},"率":{"docs":{},"（":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"上":{"docs":{},"面":{"docs":{},"讲":{"docs":{},"的":{"docs":{},"网":{"docs":{},"格":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"选":{"docs":{},"择":{"docs":{},"）":{"docs":{},"，":{"docs":{},"d":{"docs":{},"是":{"docs":{},"减":{"docs":{},"小":{"docs":{},"常":{"docs":{},"量":{"docs":{},"，":{"docs":{},"用":{"docs":{},"以":{"docs":{},"控":{"docs":{},"制":{"docs":{},"学":{"docs":{},"习":{"docs":{},"速":{"docs":{},"率":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"设":{"docs":{},"为":{"0":{"docs":{},".":{"0":{"0":{"1":{"docs":{},"或":{"docs":{},"者":{"docs":{},"更":{"docs":{},"小":{"docs":{},"，":{"docs":{},"t":{"docs":{},"是":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"次":{"docs":{},"数":{"docs":{},"或":{"docs":{},"者":{"docs":{},"时":{"docs":{},"间":{"docs":{},"。":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"!":{"docs":{},"=":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"]":{"docs":{},"(":{"docs":{},"/":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"2":{"docs":{},"_":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"a":{"docs":{},"_":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{},"_":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"1":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"]":{"docs":{},"(":{"docs":{},"/":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"_":{"1":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"_":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"]":{"docs":{},"(":{"docs":{},"/":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"2":{"docs":{},"_":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"_":{"2":{"docs":{},".":{"docs":{},"p":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"%":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.003239241092086997},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0016556291390728477},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.004240282685512367},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373}},",":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}},".":{"1":{"docs":{},"f":{"docs":{},"s":{"docs":{},"'":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}},"2":{"docs":{},"f":{"docs":{},"m":{"docs":{},"'":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}},"docs":{}},"s":{"docs":{},"'":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}},"d":{"docs":{},",":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"f":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}},"i":{"docs":{},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}},"&":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"=":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}}},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.007866728366496992},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.011589403973509934},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0063604240282685515},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.005924950625411455},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.006564551422319475},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.006362672322375398}},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0032916392363396972},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.003181336161187699}}},":":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}},"/":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.004966887417218543},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.004240282685512367},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0032916392363396972},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}},"=":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.002188183807439825}}}},"@":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}},"\\":{"docs":{},"\\":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0013882461823229986}}},"e":{"docs":{},"l":{"docs":{},"l":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}}}},"f":{"docs":{},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}},"{":{"1":{"docs":{},"}":{"docs":{},"{":{"docs":{},"|":{"docs":{},"\\":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"{":{"docs":{},"d":{"docs":{},"}":{"docs":{},"|":{"docs":{},"}":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},"(":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}},"p":{"docs":{},"(":{"docs":{},"y":{"docs":{},"=":{"docs":{},"y":{"docs":{},"^":{"docs":{},"{":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},"}":{"docs":{},"|":{"docs":{},"x":{"docs":{},"^":{"docs":{},"{":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},"}":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"{":{"docs":{},"d":{"docs":{},"}":{"docs":{},")":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0018509949097639982}}}}},"l":{"docs":{},"}":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"{":{"docs":{},"i":{"docs":{},"=":{"0":{"docs":{},"}":{"docs":{},"^":{"docs":{},"{":{"docs":{},"|":{"docs":{},"\\":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"c":{"docs":{},"a":{"docs":{},"l":{"docs":{},"{":{"docs":{},"d":{"docs":{},"}":{"docs":{},"|":{"docs":{},"}":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"{":{"docs":{},"x":{"docs":{},"}":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0026333113890717576}}}}}}}}}}},"_":{"docs":{},"_":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"_":{"docs":{},"_":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"docs":{},"_":{"docs":{},"(":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"f":{"docs":{},",":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.0009254974548819991},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"_":{"docs":{},"_":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}},"j":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997}}},"k":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.005552984729291994},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.005302226935312832}},"e":{"docs":{},"e":{"docs":{},"p":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}},"/":{"docs":{},"p":{"docs":{},"c":{"docs":{},"d":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0021208907741251328}}}}}},":":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}},"=":{"1":{"docs":{},")":{"docs":{},":":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"docs":{}},"和":{"docs":{},"p":{"docs":{},"c":{"docs":{},"d":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}},"的":{"docs":{},"更":{"docs":{},"新":{"docs":{},"的":{"docs":{},"象":{"docs":{},"征":{"docs":{},"性":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}},"）":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}},"{":{"docs":{},"\\":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"_":{"docs":{},"j":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}},"e":{"docs":{},"^":{"docs":{},"{":{"docs":{},"w":{"docs":{},"_":{"docs":{},"i":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}},"x":{"docs":{},":":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}},"}":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.002776492364645997},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.002207505518763797},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0021201413427561835},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0032822757111597373}}}},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"回":{"docs":{},"归":{"docs":{},"类":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}},"基":{"docs":{},"本":{"docs":{},"数":{"docs":{},"学":{"docs":{},"算":{"docs":{},"子":{"docs":{},"（":{"docs":{},"b":{"docs":{},"a":{"docs":{},"s":{"docs":{},"i":{"docs":{},"c":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}},"于":{"docs":{},"能":{"docs":{},"量":{"docs":{},"模":{"docs":{},"型":{"docs":{},"（":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{},"i":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}},"的":{"docs":{},"模":{"docs":{},"型":{"docs":{},"可":{"docs":{},"以":{"docs":{},"利":{"docs":{},"用":{"docs":{},"使":{"docs":{},"用":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"下":{"docs":{},"降":{"docs":{},"或":{"docs":{},"随":{"docs":{},"机":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"下":{"docs":{},"降":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"学":{"docs":{},"习":{"docs":{},"，":{"docs":{},"具":{"docs":{},"体":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"以":{"docs":{},"先":{"docs":{},"验":{"docs":{},"（":{"docs":{},"训":{"docs":{},"练":{"docs":{},"集":{"docs":{},"）":{"docs":{},"的":{"docs":{},"负":{"docs":{},"对":{"docs":{},"数":{"docs":{},"似":{"docs":{},"然":{"docs":{},"函":{"docs":{},"数":{"docs":{},"作":{"docs":{},"为":{"docs":{},"损":{"docs":{},"失":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"就":{"docs":{},"像":{"docs":{},"在":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"回":{"docs":{},"归":{"docs":{},"中":{"docs":{},"我":{"docs":{},"们":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"那":{"docs":{},"样":{"docs":{},"，":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"e":{"docs":{},"b":{"docs":{},"m":{"docs":{},"）":{"docs":{},"把":{"docs":{},"我":{"docs":{},"们":{"docs":{},"所":{"docs":{},"关":{"docs":{},"心":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"各":{"docs":{},"种":{"docs":{},"组":{"docs":{},"合":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"标":{"docs":{},"量":{"docs":{},"能":{"docs":{},"量":{"docs":{},"联":{"docs":{},"系":{"docs":{},"在":{"docs":{},"一":{"docs":{},"起":{"docs":{},"。":{"docs":{},"训":{"docs":{},"练":{"docs":{},"模":{"docs":{},"型":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"就":{"docs":{},"是":{"docs":{},"不":{"docs":{},"断":{"docs":{},"改":{"docs":{},"变":{"docs":{},"标":{"docs":{},"量":{"docs":{},"能":{"docs":{},"量":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"，":{"docs":{},"使":{"docs":{},"其":{"docs":{},"能":{"docs":{},"量":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"形":{"docs":{},"状":{"docs":{},"满":{"docs":{},"足":{"docs":{},"期":{"docs":{},"望":{"docs":{},"的":{"docs":{},"形":{"docs":{},"状":{"docs":{},"。":{"docs":{},"比":{"docs":{},"如":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"一":{"docs":{},"个":{"docs":{},"变":{"docs":{},"量":{"docs":{},"组":{"docs":{},"合":{"docs":{},"被":{"docs":{},"认":{"docs":{},"为":{"docs":{},"是":{"docs":{},"合":{"docs":{},"理":{"docs":{},"的":{"docs":{},"，":{"docs":{},"它":{"docs":{},"同":{"docs":{},"时":{"docs":{},"也":{"docs":{},"具":{"docs":{},"有":{"docs":{},"较":{"docs":{},"小":{"docs":{},"的":{"docs":{},"能":{"docs":{},"量":{"docs":{},"。":{"docs":{},"基":{"docs":{},"于":{"docs":{},"能":{"docs":{},"量":{"docs":{},"的":{"docs":{},"概":{"docs":{},"率":{"docs":{},"模":{"docs":{},"型":{"docs":{},"通":{"docs":{},"过":{"docs":{},"能":{"docs":{},"量":{"docs":{},"函":{"docs":{},"数":{"docs":{},"来":{"docs":{},"定":{"docs":{},"义":{"docs":{},"概":{"docs":{},"率":{"docs":{},"分":{"docs":{},"布":{"docs":{},"：":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"损":{"docs":{},"失":{"docs":{},"函":{"docs":{},"数":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}},"把":{"docs":{},"它":{"docs":{},"们":{"docs":{},"组":{"docs":{},"合":{"docs":{},"起":{"docs":{},"来":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}},"都":{"docs":{},"放":{"docs":{},"一":{"docs":{},"起":{"docs":{},"就":{"docs":{},"是":{"docs":{},"，":{"docs":{},"w":{"docs":{},"_":{"docs":{},"k":{"docs":{},"_":{"docs":{},"l":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{},"j":{"docs":{},")":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"第":{"docs":{},"m":{"docs":{},"层":{"docs":{},"的":{"docs":{},"第":{"docs":{},"k":{"docs":{},"个":{"docs":{},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"，":{"docs":{},"在":{"docs":{},"第":{"docs":{},"m":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"组":{"docs":{},"合":{"docs":{},"起":{"docs":{},"来":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}},"最":{"docs":{},"后":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"如":{"docs":{},"下":{"docs":{},"。":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}},"降":{"docs":{},"噪":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"类":{"docs":{},"就":{"docs":{},"变":{"docs":{},"成":{"docs":{},"了":{"docs":{},"这":{"docs":{},"样":{"docs":{},"：":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"c":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"变":{"docs":{},"量":{"docs":{},"来":{"docs":{},"最":{"docs":{},"小":{"docs":{},"化":{"docs":{},"。":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"使":{"docs":{},"用":{"docs":{},"在":{"docs":{},"使":{"docs":{},"用":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"回":{"docs":{},"归":{"docs":{},"进":{"docs":{},"行":{"docs":{},"m":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"分":{"docs":{},"类":{"docs":{},"中":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"类":{"docs":{},"，":{"docs":{},"和":{"docs":{},"多":{"docs":{},"层":{"docs":{},"感":{"docs":{},"知":{"docs":{},"机":{"docs":{},"中":{"docs":{},"的":{"docs":{},"h":{"docs":{},"i":{"docs":{},"d":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"类":{"docs":{},"来":{"docs":{},"实":{"docs":{},"例":{"docs":{},"化":{"docs":{},"我":{"docs":{},"们":{"docs":{},"的":{"docs":{},"网":{"docs":{},"络":{"docs":{},"：":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"增":{"docs":{},"加":{"docs":{},"由":{"docs":{},"s":{"docs":{},"c":{"docs":{},"a":{"docs":{},"n":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"更":{"docs":{},"新":{"docs":{},"字":{"docs":{},"典":{"docs":{},"（":{"docs":{},"包":{"docs":{},"含":{"docs":{},"了":{"docs":{},"随":{"docs":{},"机":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"_":{"docs":{},"r":{"docs":{},"n":{"docs":{},"g":{"docs":{},"更":{"docs":{},"新":{"docs":{},"规":{"docs":{},"则":{"docs":{},"）":{"docs":{},"来":{"docs":{},"获":{"docs":{},"取":{"docs":{},"参":{"docs":{},"数":{"docs":{},"更":{"docs":{},"新":{"docs":{},"。":{"docs":{},"在":{"docs":{},"p":{"docs":{},"c":{"docs":{},"d":{"docs":{},"例":{"docs":{},"子":{"docs":{},"中":{"docs":{},"，":{"docs":{},"也":{"docs":{},"需":{"docs":{},"要":{"docs":{},"更":{"docs":{},"新":{"docs":{},"包":{"docs":{},"含":{"docs":{},"g":{"docs":{},"i":{"docs":{},"b":{"docs":{},"b":{"docs":{},"s":{"docs":{},"链":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"常":{"docs":{},"见":{"docs":{},"的":{"docs":{},"就":{"docs":{},"是":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"和":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"h":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{},"在":{"docs":{},"第":{"4":{"docs":{},".":{"4":{"docs":{},"节":{"docs":{},"中":{"docs":{},"解":{"docs":{},"释":{"docs":{},"的":{"docs":{},"，":{"docs":{},"非":{"docs":{},"线":{"docs":{},"性":{"docs":{},"是":{"docs":{},"关":{"docs":{},"于":{"docs":{},"原":{"docs":{},"点":{"docs":{},"对":{"docs":{},"称":{"docs":{},"的":{"docs":{},"，":{"docs":{},"它":{"docs":{},"倾":{"docs":{},"向":{"docs":{},"去":{"docs":{},"输":{"docs":{},"出":{"0":{"docs":{},"均":{"docs":{},"值":{"docs":{},"的":{"docs":{},"输":{"docs":{},"出":{"docs":{},"（":{"docs":{},"这":{"docs":{},"是":{"docs":{},"被":{"docs":{},"期":{"docs":{},"望":{"docs":{},"的":{"docs":{},"属":{"docs":{},"性":{"docs":{},"）":{"docs":{},"。":{"docs":{},"根":{"docs":{},"据":{"docs":{},"我":{"docs":{},"们":{"docs":{},"的":{"docs":{},"经":{"docs":{},"验":{"docs":{},"，":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"h":{"docs":{},"(":{"docs":{},"双":{"docs":{},"曲":{"docs":{},"函":{"docs":{},"数":{"docs":{},")":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"收":{"docs":{},"敛":{"docs":{},"性":{"docs":{},"。":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"大":{"docs":{},"池":{"docs":{},"化":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}},"在":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"中":{"docs":{},"通":{"docs":{},"过":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},".":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"d":{"docs":{},"o":{"docs":{},"w":{"docs":{},"n":{"docs":{},"s":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"_":{"2":{"docs":{},"d":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"被":{"docs":{},"设":{"docs":{},"计":{"docs":{},"为":{"docs":{},"可":{"docs":{},"以":{"docs":{},"接":{"docs":{},"受":{"docs":{},"n":{"docs":{},"维":{"docs":{},"的":{"docs":{},"张":{"docs":{},"量":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"缩":{"docs":{},"减":{"docs":{},"因":{"docs":{},"子":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"对":{"docs":{},"张":{"docs":{},"量":{"docs":{},"的":{"docs":{},"最":{"docs":{},"后":{"2":{"docs":{},"维":{"docs":{},"执":{"docs":{},"行":{"docs":{},"最":{"docs":{},"大":{"docs":{},"池":{"docs":{},"化":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"视":{"docs":{},"觉":{"docs":{},"中":{"docs":{},"是":{"docs":{},"有":{"docs":{},"用":{"docs":{},"的":{"docs":{},"，":{"docs":{},"由":{"docs":{},"如":{"docs":{},"下":{"2":{"docs":{},"个":{"docs":{},"原":{"docs":{},"因":{"docs":{},"：":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}},"docs":{}}}}}}}}}}}}},"的":{"docs":{},"尺":{"docs":{},"寸":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}},"本":{"docs":{},"节":{"docs":{},"假":{"docs":{},"定":{"docs":{},"读":{"docs":{},"者":{"docs":{},"属":{"docs":{},"性":{"docs":{},"了":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"概":{"docs":{},"念":{"docs":{},"：":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"（":{"docs":{},"s":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"代":{"docs":{},"码":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"这":{"docs":{},"里":{"docs":{},"下":{"docs":{},"载":{"docs":{},"。":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"这":{"docs":{},"里":{"docs":{},"下":{"docs":{},"载":{"docs":{},"，":{"docs":{},"还":{"docs":{},"有":{"3":{"docs":{},"狼":{"docs":{},"月":{"docs":{},"亮":{"docs":{},"图":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}},"docs":{}}}}}}}}}}}},"都":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"这":{"docs":{},"里":{"docs":{},"下":{"docs":{},"载":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"都":{"docs":{},"可":{"docs":{},"用":{"docs":{},"在":{"docs":{},"这":{"docs":{},"里":{"docs":{},"下":{"docs":{},"载":{"docs":{},"。":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}},"教":{"docs":{},"程":{"docs":{},"将":{"docs":{},"专":{"docs":{},"注":{"docs":{},"于":{"docs":{},"单":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"层":{"docs":{},"的":{"docs":{},"m":{"docs":{},"l":{"docs":{},"p":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"以":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"层":{"docs":{},"的":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"要":{"docs":{},"构":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"l":{"docs":{},"p":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"此":{"docs":{},"基":{"docs":{},"础":{"docs":{},"上":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"回":{"docs":{},"归":{"docs":{},"就":{"docs":{},"好":{"docs":{},"。":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"模":{"docs":{},"型":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955},"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}},"比":{"docs":{},"较":{"docs":{},"低":{"docs":{},"的":{"docs":{},"层":{"docs":{},"是":{"docs":{},"由":{"docs":{},"卷":{"docs":{},"积":{"docs":{},"和":{"docs":{},"最":{"docs":{},"大":{"docs":{},"池":{"docs":{},"化":{"docs":{},"层":{"docs":{},"的":{"docs":{},"交":{"docs":{},"替":{"docs":{},"来":{"docs":{},"构":{"docs":{},"建":{"docs":{},"的":{"docs":{},"，":{"docs":{},"较":{"docs":{},"高":{"docs":{},"的":{"docs":{},"层":{"docs":{},"则":{"docs":{},"是":{"docs":{},"全":{"docs":{},"连":{"docs":{},"接":{"docs":{},"的":{"docs":{},"传":{"docs":{},"统":{"docs":{},"m":{"docs":{},"l":{"docs":{},"p":{"docs":{},"（":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"层":{"docs":{},"＋":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"回":{"docs":{},"归":{"docs":{},"）":{"docs":{},"。":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"全":{"docs":{},"连":{"docs":{},"接":{"docs":{},"层":{"docs":{},"的":{"docs":{},"输":{"docs":{},"入":{"docs":{},"是":{"docs":{},"前":{"docs":{},"一":{"docs":{},"层":{"docs":{},"(":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"每":{"docs":{},"一":{"docs":{},"次":{"docs":{},"函":{"docs":{},"数":{"docs":{},"调":{"docs":{},"用":{"docs":{},"，":{"docs":{},"它":{"docs":{},"都":{"docs":{},"先":{"docs":{},"用":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"训":{"docs":{},"练":{"docs":{},"集":{"docs":{},"的":{"docs":{},"切":{"docs":{},"片":{"docs":{},"来":{"docs":{},"更":{"docs":{},"新":{"docs":{},"x":{"docs":{},"，":{"docs":{},"y":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"计":{"docs":{},"算":{"docs":{},"该":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"下":{"docs":{},"的":{"docs":{},"c":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"申":{"docs":{},"请":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"操":{"docs":{},"作":{"docs":{},"。":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"次":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},"d":{"docs":{},"x":{"docs":{},")":{"docs":{},"被":{"docs":{},"调":{"docs":{},"用":{"docs":{},"，":{"docs":{},"它":{"docs":{},"都":{"docs":{},"计":{"docs":{},"算":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"该":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"的":{"docs":{},"c":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"，":{"docs":{},"当":{"docs":{},"然":{"docs":{},"这":{"docs":{},"也":{"docs":{},"是":{"docs":{},"m":{"docs":{},"s":{"docs":{},"g":{"docs":{},"d":{"docs":{},"的":{"docs":{},"一":{"docs":{},"步":{"docs":{},"。":{"docs":{},"整":{"docs":{},"个":{"docs":{},"学":{"docs":{},"习":{"docs":{},"算":{"docs":{},"法":{"docs":{},"因":{"docs":{},"循":{"docs":{},"环":{"docs":{},"了":{"docs":{},"数":{"docs":{},"据":{"docs":{},"集":{"docs":{},"所":{"docs":{},"有":{"docs":{},"样":{"docs":{},"例":{"docs":{},"。":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"现":{"docs":{},"在":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"要":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"回":{"docs":{},"归":{"docs":{},"的":{"docs":{},"类":{"docs":{},"，":{"docs":{},"来":{"docs":{},"概":{"docs":{},"括":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"回":{"docs":{},"归":{"docs":{},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"行":{"docs":{},"为":{"docs":{},"。":{"docs":{},"代":{"docs":{},"码":{"docs":{},"已":{"docs":{},"经":{"docs":{},"是":{"docs":{},"我":{"docs":{},"们":{"docs":{},"之":{"docs":{},"前":{"docs":{},"涵":{"docs":{},"盖":{"docs":{},"的":{"docs":{},"了":{"docs":{},"，":{"docs":{},"不":{"docs":{},"再":{"docs":{},"进":{"docs":{},"行":{"docs":{},"过":{"docs":{},"多":{"docs":{},"解":{"docs":{},"释":{"docs":{},"。":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"预":{"docs":{},"计":{"docs":{},"去":{"docs":{},"重":{"docs":{},"构":{"docs":{},"信":{"docs":{},"号":{"docs":{},"的":{"docs":{},"潜":{"docs":{},"在":{"docs":{},"表":{"docs":{},"达":{"docs":{},"的":{"docs":{},"计":{"docs":{},"算":{"docs":{},"量":{"docs":{},"。":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}},"使":{"docs":{},"用":{"docs":{},"这":{"docs":{},"些":{"docs":{},"函":{"docs":{},"数":{"docs":{},"来":{"docs":{},"定":{"docs":{},"义":{"docs":{},"一":{"docs":{},"个":{"docs":{},"g":{"docs":{},"i":{"docs":{},"b":{"docs":{},"b":{"docs":{},"s":{"docs":{},"采":{"docs":{},"样":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"的":{"docs":{},"符":{"docs":{},"号":{"docs":{},"图":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"定":{"docs":{},"义":{"docs":{},"如":{"docs":{},"下":{"docs":{},"两":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"：":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"在":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"层":{"docs":{},"的":{"docs":{},"上":{"docs":{},"方":{"docs":{},"添":{"docs":{},"加":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"层":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"m":{"docs":{},"l":{"docs":{},"p":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"使":{"docs":{},"用":{"docs":{},"在":{"docs":{},"使":{"docs":{},"用":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"回":{"docs":{},"归":{"docs":{},"进":{"docs":{},"m":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"分":{"docs":{},"类":{"docs":{},"的":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"类":{"docs":{},"。":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"已":{"docs":{},"经":{"docs":{},"知":{"docs":{},"道":{"docs":{},"了":{"docs":{},"在":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"中":{"docs":{},"实":{"docs":{},"现":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"那":{"docs":{},"我":{"docs":{},"们":{"docs":{},"先":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"l":{"docs":{},"a":{"docs":{},"y":{"docs":{},"e":{"docs":{},"r":{"docs":{},"类":{"docs":{},"，":{"docs":{},"它":{"docs":{},"是":{"docs":{},"{":{"docs":{},"卷":{"docs":{},"积":{"docs":{},"＋":{"docs":{},"最":{"docs":{},"大":{"docs":{},"池":{"docs":{},"化":{"docs":{},"}":{"docs":{},"层":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"去":{"docs":{},"构":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"d":{"docs":{},"a":{"docs":{},"类":{"docs":{},"和":{"docs":{},"训":{"docs":{},"练":{"docs":{},"它":{"docs":{},"变":{"docs":{},"得":{"docs":{},"很":{"docs":{},"简":{"docs":{},"单":{"docs":{},"了":{"docs":{},"。":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}},"任":{"docs":{},"何":{"docs":{},"一":{"docs":{},"个":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"_":{"docs":{},"f":{"docs":{},"n":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"将":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"，":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"—":{"docs":{},"—":{"docs":{},"差":{"docs":{},"错":{"docs":{},"等":{"docs":{},"级":{"docs":{},"，":{"docs":{},"l":{"docs":{},"r":{"docs":{},"—":{"docs":{},"—":{"docs":{},"学":{"docs":{},"习":{"docs":{},"速":{"docs":{},"率":{"docs":{},"作":{"docs":{},"为":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"这":{"docs":{},"些":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"名":{"docs":{},"字":{"docs":{},"是":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"名":{"docs":{},"字":{"docs":{},"，":{"docs":{},"而":{"docs":{},"不":{"docs":{},"是":{"docs":{},"p":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"变":{"docs":{},"量":{"docs":{},"的":{"docs":{},"名":{"docs":{},"字":{"docs":{},"（":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"或":{"docs":{},"者":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"_":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"）":{"docs":{},"。":{"docs":{},"在":{"docs":{},"使":{"docs":{},"用":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"时":{"docs":{},"，":{"docs":{},"注":{"docs":{},"意":{"docs":{},"这":{"docs":{},"一":{"docs":{},"点":{"docs":{},"。":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"虽":{"docs":{},"然":{"docs":{},"整":{"docs":{},"本":{"docs":{},"书":{"docs":{},"都":{"docs":{},"致":{"docs":{},"力":{"docs":{},"于":{"docs":{},"探":{"docs":{},"讨":{"docs":{},"最":{"docs":{},"小":{"docs":{},"化":{"docs":{},"话":{"docs":{},"题":{"docs":{},"，":{"docs":{},"但":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"下":{"docs":{},"降":{"docs":{},"是":{"docs":{},"迄":{"docs":{},"今":{"docs":{},"为":{"docs":{},"止":{"docs":{},"最":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"最":{"docs":{},"小":{"docs":{},"化":{"docs":{},"非":{"docs":{},"线":{"docs":{},"性":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"教":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"随":{"docs":{},"机":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"下":{"docs":{},"降":{"docs":{},"算":{"docs":{},"法":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"随":{"docs":{},"机":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"下":{"docs":{},"降":{"docs":{},"来":{"docs":{},"获":{"docs":{},"得":{"docs":{},"更":{"docs":{},"多":{"docs":{},"细":{"docs":{},"节":{"docs":{},"。":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"训":{"docs":{},"练":{"docs":{},"模":{"docs":{},"型":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}},"m":{"docs":{},"l":{"docs":{},"p":{"docs":{},"s":{"docs":{},"的":{"docs":{},"技":{"docs":{},"巧":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}},"输":{"docs":{},"入":{"docs":{},"是":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"的":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"，":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"的":{"docs":{},"大":{"docs":{},"小":{"docs":{},"之":{"docs":{},"前":{"docs":{},"已":{"docs":{},"经":{"docs":{},"固":{"docs":{},"定":{"docs":{},"，":{"docs":{},"以":{"docs":{},"此":{"docs":{},"被":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{},"x":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"其":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"y":{"docs":{},"。":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"是":{"docs":{},"该":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"下":{"docs":{},"与":{"docs":{},"x":{"docs":{},"，":{"docs":{},"y":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"c":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"/":{"docs":{},"损":{"docs":{},"失":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"逻":{"docs":{},"辑":{"docs":{},"回":{"docs":{},"归":{"docs":{},"模":{"docs":{},"型":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"线":{"docs":{},"性":{"docs":{},"概":{"docs":{},"率":{"docs":{},"模":{"docs":{},"型":{"docs":{},"。":{"docs":{},"它":{"docs":{},"由":{"docs":{},"一":{"docs":{},"个":{"docs":{},"权":{"docs":{},"值":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"w":{"docs":{},"和":{"docs":{},"偏":{"docs":{},"置":{"docs":{},"向":{"docs":{},"量":{"docs":{},"b":{"docs":{},"参":{"docs":{},"数":{"docs":{},"化":{"docs":{},"。":{"docs":{},"分":{"docs":{},"类":{"docs":{},"通":{"docs":{},"过":{"docs":{},"将":{"docs":{},"输":{"docs":{},"入":{"docs":{},"向":{"docs":{},"量":{"docs":{},"提":{"docs":{},"交":{"docs":{},"到":{"docs":{},"一":{"docs":{},"组":{"docs":{},"超":{"docs":{},"平":{"docs":{},"面":{"docs":{},"，":{"docs":{},"每":{"docs":{},"个":{"docs":{},"超":{"docs":{},"平":{"docs":{},"面":{"docs":{},"对":{"docs":{},"应":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"。":{"docs":{},"输":{"docs":{},"入":{"docs":{},"向":{"docs":{},"量":{"docs":{},"和":{"docs":{},"超":{"docs":{},"平":{"docs":{},"面":{"docs":{},"的":{"docs":{},"距":{"docs":{},"离":{"docs":{},"是":{"docs":{},"这":{"docs":{},"个":{"docs":{},"输":{"docs":{},"入":{"docs":{},"属":{"docs":{},"于":{"docs":{},"该":{"docs":{},"类":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"概":{"docs":{},"率":{"docs":{},"量":{"docs":{},"化":{"docs":{},"。":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"输":{"docs":{},"入":{"docs":{},"向":{"docs":{},"量":{"docs":{},"x":{"docs":{},"，":{"docs":{},"和":{"docs":{},"其":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"标":{"docs":{},"签":{"docs":{},"y":{"docs":{},"都":{"docs":{},"是":{"docs":{},"定":{"docs":{},"义":{"docs":{},"在":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"实":{"docs":{},"体":{"docs":{},"外":{"docs":{},"的":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"类":{"docs":{},"需":{"docs":{},"要":{"docs":{},"将":{"docs":{},"输":{"docs":{},"入":{"docs":{},"数":{"docs":{},"据":{"docs":{},"作":{"docs":{},"为":{"docs":{},"_":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"_":{"docs":{},"_":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{},"这":{"docs":{},"在":{"docs":{},"将":{"docs":{},"这":{"docs":{},"些":{"docs":{},"类":{"docs":{},"的":{"docs":{},"实":{"docs":{},"例":{"docs":{},"连":{"docs":{},"接":{"docs":{},"起":{"docs":{},"来":{"docs":{},"构":{"docs":{},"建":{"docs":{},"深":{"docs":{},"网":{"docs":{},"络":{"docs":{},"方":{"docs":{},"面":{"docs":{},"非":{"docs":{},"常":{"docs":{},"有":{"docs":{},"用":{"docs":{},"。":{"docs":{},"一":{"docs":{},"层":{"docs":{},"的":{"docs":{},"输":{"docs":{},"出":{"docs":{},"可":{"docs":{},"以":{"docs":{},"作":{"docs":{},"为":{"docs":{},"下":{"docs":{},"一":{"docs":{},"层":{"docs":{},"的":{"docs":{},"输":{"docs":{},"入":{"docs":{},"。":{"docs":{"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"ref":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","tf":0.00046274872744099955}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"上":{"docs":{},"述":{"docs":{},"的":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"包":{"docs":{},"含":{"2":{"docs":{},"个":{"docs":{},"项":{"docs":{},"，":{"docs":{},"包":{"docs":{},"括":{"docs":{},"正":{"docs":{},"相":{"docs":{},"位":{"docs":{},"和":{"docs":{},"负":{"docs":{},"相":{"docs":{},"位":{"docs":{},"。":{"docs":{},"正":{"docs":{},"和":{"docs":{},"负":{"docs":{},"的":{"docs":{},"术":{"docs":{},"语":{"docs":{},"不":{"docs":{},"指":{"docs":{},"公":{"docs":{},"式":{"docs":{},"中":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"项":{"docs":{},"的":{"docs":{},"符":{"docs":{},"号":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"反":{"docs":{},"映":{"docs":{},"其":{"docs":{},"对":{"docs":{},"模":{"docs":{},"型":{"docs":{},"所":{"docs":{},"定":{"docs":{},"义":{"docs":{},"的":{"docs":{},"概":{"docs":{},"率":{"docs":{},"密":{"docs":{},"度":{"docs":{},"的":{"docs":{},"影":{"docs":{},"响":{"docs":{},"。":{"docs":{},"第":{"docs":{},"一":{"docs":{},"项":{"docs":{},"增":{"docs":{},"加":{"docs":{},"训":{"docs":{},"练":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"概":{"docs":{},"率":{"docs":{},"（":{"docs":{},"通":{"docs":{},"过":{"docs":{},"减":{"docs":{},"少":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"docs":{},"自":{"docs":{},"由":{"docs":{},"能":{"docs":{},"量":{"docs":{},"）":{"docs":{},"，":{"docs":{},"而":{"docs":{},"第":{"docs":{},"二":{"docs":{},"项":{"docs":{},"减":{"docs":{},"小":{"docs":{},"模":{"docs":{},"型":{"docs":{},"产":{"docs":{},"生":{"docs":{},"的":{"docs":{},"样":{"docs":{},"本":{"docs":{},"的":{"docs":{},"概":{"docs":{},"率":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"]":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0011037527593818985},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.00437636761487965}},",":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.00437636761487965},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}},"一":{"docs":{},"个":{"docs":{},"多":{"docs":{},"层":{"docs":{},"感":{"docs":{},"知":{"docs":{},"机":{"docs":{},"（":{"docs":{},"或":{"docs":{},"者":{"docs":{},"说":{"docs":{},"人":{"docs":{},"工":{"docs":{},"神":{"docs":{},"经":{"docs":{},"网":{"docs":{},"络":{"docs":{},"—":{"docs":{},"—":{"docs":{},"a":{"docs":{},"n":{"docs":{},"n":{"docs":{},"）":{"docs":{},",":{"docs":{},"在":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"层":{"docs":{},"时":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"表":{"docs":{},"示":{"docs":{},"为":{"docs":{},"如":{"docs":{},"下":{"docs":{},"的":{"docs":{},"图":{"docs":{},"：":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"隐":{"docs":{},"藏":{"docs":{},"层":{"docs":{},"的":{"docs":{},"权":{"docs":{},"值":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"，":{"docs":{},"应":{"docs":{},"当":{"docs":{},"从":{"docs":{},"基":{"docs":{},"于":{"docs":{},"激":{"docs":{},"活":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"均":{"docs":{},"匀":{"docs":{},"间":{"docs":{},"隔":{"docs":{},"中":{"docs":{},"均":{"docs":{},"匀":{"docs":{},"采":{"docs":{},"样":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"函":{"docs":{},"数":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"间":{"docs":{},"隔":{"docs":{},"是":{"docs":{},"。":{"docs":{},"其":{"docs":{},"中":{"docs":{},"f":{"docs":{},"a":{"docs":{},"n":{"docs":{},"_":{"docs":{},"i":{"docs":{},"n":{"docs":{},"是":{"docs":{},"第":{"docs":{},"（":{"docs":{},"i":{"docs":{},"－":{"1":{"docs":{},"）":{"docs":{},"层":{"docs":{},"的":{"docs":{},"单":{"docs":{},"元":{"docs":{},"数":{"docs":{},"目":{"docs":{},"，":{"docs":{},"f":{"docs":{},"a":{"docs":{},"n":{"docs":{},"_":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{},"是":{"docs":{},"第":{"docs":{},"（":{"docs":{},"i":{"docs":{},"）":{"docs":{},"层":{"docs":{},"单":{"docs":{},"元":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"，":{"docs":{},"结":{"docs":{},"论":{"docs":{},"出":{"docs":{},"自":{"docs":{},"这":{"docs":{},"里":{"docs":{},"。":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"是":{"docs":{},"由":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"在":{"docs":{},"整":{"docs":{},"个":{"docs":{},"图":{"docs":{},"像":{"docs":{},"的":{"docs":{},"某":{"docs":{},"一":{"docs":{},"子":{"docs":{},"区":{"docs":{},"域":{"docs":{},"重":{"docs":{},"复":{"docs":{},"使":{"docs":{},"用":{"docs":{},"来":{"docs":{},"获":{"docs":{},"得":{"docs":{},"的":{"docs":{},"，":{"docs":{},"换":{"docs":{},"句":{"docs":{},"话":{"docs":{},"说":{"docs":{},"，":{"docs":{},"就":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"线":{"docs":{},"性":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"来":{"docs":{},"卷":{"docs":{},"积":{"docs":{},"输":{"docs":{},"入":{"docs":{},"图":{"docs":{},"像":{"docs":{},"，":{"docs":{},"加":{"docs":{},"上":{"docs":{},"偏":{"docs":{},"置":{"docs":{},"后":{"docs":{},"，":{"docs":{},"再":{"docs":{},"输":{"docs":{},"入":{"docs":{},"到":{"docs":{},"非":{"docs":{},"线":{"docs":{},"性":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"我":{"docs":{},"们":{"docs":{},"定":{"docs":{},"义":{"docs":{},"第":{"docs":{},"k":{"docs":{},"个":{"docs":{},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"是":{"docs":{},"为":{"docs":{},"h":{"docs":{},"_":{"docs":{},"k":{"docs":{},"，":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"有":{"docs":{},"w":{"docs":{},"_":{"docs":{},"k":{"docs":{},"，":{"docs":{},"b":{"docs":{},"_":{"docs":{},"k":{"docs":{},"定":{"docs":{},"义":{"docs":{},"，":{"docs":{},"则":{"docs":{},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"表":{"docs":{},"现":{"docs":{},"为":{"docs":{},"如":{"docs":{},"下":{"docs":{},"形":{"docs":{},"式":{"docs":{},"：":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"解":{"docs":{},"释":{"docs":{},"是":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}},"般":{"docs":{},"直":{"docs":{},"觉":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"更":{"docs":{},"新":{"docs":{},"是":{"docs":{},"足":{"docs":{},"够":{"docs":{},"小":{"docs":{},"相":{"docs":{},"比":{"docs":{},"链":{"docs":{},"的":{"docs":{},"混":{"docs":{},"合":{"docs":{},"率":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"马":{"docs":{},"尔":{"docs":{},"科":{"docs":{},"夫":{"docs":{},"链":{"docs":{},"应":{"docs":{},"该":{"docs":{},"能":{"docs":{},"够":{"docs":{},"“":{"docs":{},"赶":{"docs":{},"上":{"docs":{},"”":{"docs":{},"模":{"docs":{},"型":{"docs":{},"的":{"docs":{},"变":{"docs":{},"化":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"事":{"docs":{},"实":{"docs":{},"上":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"单":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"层":{"docs":{},"的":{"docs":{},"m":{"docs":{},"l":{"docs":{},"p":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"如":{"docs":{},"下":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"x":{"docs":{},"是":{"docs":{},"输":{"docs":{},"入":{"docs":{},"向":{"docs":{},"量":{"docs":{},"的":{"docs":{},"维":{"docs":{},"度":{"docs":{},"，":{"docs":{},"l":{"docs":{},"是":{"docs":{},"输":{"docs":{},"出":{"docs":{},"向":{"docs":{},"量":{"docs":{},"的":{"docs":{},"维":{"docs":{},"度":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"用":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"公":{"docs":{},"式":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"m":{"docs":{},"l":{"docs":{},"p":{"docs":{},"模":{"docs":{},"型":{"docs":{},"：":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"从":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"回":{"docs":{},"归":{"docs":{},"到":{"docs":{},"多":{"docs":{},"层":{"docs":{},"感":{"docs":{},"知":{"docs":{},"机":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}},"上":{"docs":{},"图":{"docs":{},"的":{"docs":{},"实":{"docs":{},"现":{"docs":{},"来":{"docs":{},"看":{"docs":{},"，":{"docs":{},"较":{"docs":{},"低":{"docs":{},"层":{"docs":{},"的":{"docs":{},"操":{"docs":{},"作":{"docs":{},"都":{"docs":{},"是":{"docs":{},"建":{"docs":{},"立":{"docs":{},"在":{"4":{"docs":{},"维":{"docs":{},"张":{"docs":{},"量":{"docs":{},"上":{"docs":{},"的":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"它":{"docs":{},"需":{"docs":{},"要":{"docs":{},"被":{"docs":{},"压":{"docs":{},"缩":{"docs":{},"为":{"2":{"docs":{},"维":{"docs":{},"的":{"docs":{},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"，":{"docs":{},"来":{"docs":{},"适":{"docs":{},"应":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"m":{"docs":{},"l":{"docs":{},"p":{"docs":{},"实":{"docs":{},"现":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"的":{"docs":{},"类":{"docs":{},"转":{"docs":{},"换":{"docs":{},"为":{"docs":{},"降":{"docs":{},"噪":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"去":{"docs":{},"增":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"随":{"docs":{},"机":{"docs":{},"误":{"docs":{},"差":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"去":{"docs":{},"应":{"docs":{},"用":{"docs":{},"到":{"docs":{},"输":{"docs":{},"入":{"docs":{},"中":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"输":{"docs":{},"入":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"许":{"docs":{},"多":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"污":{"docs":{},"染":{"docs":{},"，":{"docs":{},"但":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"教":{"docs":{},"程":{"docs":{},"中":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"支":{"docs":{},"持":{"docs":{},"以":{"docs":{},"输":{"docs":{},"入":{"docs":{},"的":{"docs":{},"随":{"docs":{},"机":{"docs":{},"性":{"docs":{},"来":{"docs":{},"腐":{"docs":{},"化":{"docs":{},"原":{"docs":{},"始":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"使":{"docs":{},"它":{"docs":{},"趋":{"docs":{},"向":{"docs":{},"于":{"0":{"docs":{},"。":{"docs":{},"代":{"docs":{},"码":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"其":{"docs":{},"中":{"docs":{},"b":{"docs":{},"_":{"1":{"docs":{},"，":{"docs":{},"w":{"docs":{},"_":{"1":{"docs":{},"是":{"docs":{},"输":{"docs":{},"出":{"docs":{},"层":{"docs":{},"到":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"层":{"docs":{},"的":{"docs":{},"偏":{"docs":{},"置":{"docs":{},"向":{"docs":{},"量":{"docs":{},"和":{"docs":{},"权":{"docs":{},"值":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"，":{"docs":{},"s":{"docs":{},"是":{"docs":{},"该":{"docs":{},"层":{"docs":{},"的":{"docs":{},"激":{"docs":{},"活":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{},"而":{"docs":{},"b":{"docs":{},"_":{"2":{"docs":{},"，":{"docs":{},"w":{"docs":{},"_":{"2":{"docs":{},"是":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"层":{"docs":{},"到":{"docs":{},"输":{"docs":{},"出":{"docs":{},"层":{"docs":{},"的":{"docs":{},"偏":{"docs":{},"置":{"docs":{},"向":{"docs":{},"量":{"docs":{},"和":{"docs":{},"权":{"docs":{},"值":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"，":{"docs":{},"g":{"docs":{},"是":{"docs":{},"该":{"docs":{},"层":{"docs":{},"的":{"docs":{},"激":{"docs":{},"活":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{},"通":{"docs":{},"常":{"docs":{},"选":{"docs":{},"择":{"docs":{},"s":{"docs":{},"为":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"g":{"docs":{},"为":{"docs":{},"s":{"docs":{},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{}}},"对":{"docs":{},"于":{"2":{"docs":{},"维":{"docs":{},"卷":{"docs":{},"积":{"docs":{},"有":{"docs":{},"如":{"docs":{},"下":{"docs":{},"定":{"docs":{},"义":{"docs":{},"：":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}},"docs":{}}},"’":{"docs":{},"表":{"docs":{},"示":{"docs":{},"转":{"docs":{},"置":{"docs":{},"，":{"docs":{},"b":{"docs":{},",":{"docs":{},"c":{"docs":{},",":{"docs":{},"w":{"docs":{},"为":{"docs":{},"模":{"docs":{},"型":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"b":{"docs":{},",":{"docs":{},"c":{"docs":{},"分":{"docs":{},"别":{"docs":{},"为":{"docs":{},"可":{"docs":{},"见":{"docs":{},"层":{"docs":{},"和":{"docs":{},"隐":{"docs":{},"含":{"docs":{},"层":{"docs":{},"的":{"docs":{},"偏":{"docs":{},"置":{"docs":{},"，":{"docs":{},"w":{"docs":{},"为":{"docs":{},"可":{"docs":{},"见":{"docs":{},"层":{"docs":{},"与":{"docs":{},"隐":{"docs":{},"含":{"docs":{},"层":{"docs":{},"的":{"docs":{},"链":{"docs":{},"接":{"docs":{},"权":{"docs":{},"重":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"归":{"docs":{},"一":{"docs":{},"化":{"docs":{},"因":{"docs":{},"子":{"docs":{},"z":{"docs":{},"被":{"docs":{},"称":{"docs":{},"为":{"docs":{},"分":{"docs":{},"割":{"docs":{},"函":{"docs":{},"数":{"docs":{},"：":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}},"随":{"docs":{},"机":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"为":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"a":{"docs":{},"为":{"docs":{},"模":{"docs":{},"型":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}},"典":{"docs":{},"型":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"使":{"docs":{},"用":{"docs":{},"l":{"1":{"docs":{},"/":{"docs":{},"l":{"2":{"docs":{},"正":{"docs":{},"则":{"docs":{},"化":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"l":{"docs":{},"a":{"docs":{},"m":{"docs":{},"b":{"docs":{},"d":{"docs":{},"a":{"docs":{},"设":{"docs":{},"为":{"0":{"docs":{},".":{"0":{"1":{"docs":{},"，":{"0":{"docs":{},".":{"0":{"0":{"1":{"docs":{},"等":{"docs":{},"。":{"docs":{},"尽":{"docs":{},"管":{"docs":{},"在":{"docs":{},"我":{"docs":{},"们":{"docs":{},"之":{"docs":{},"前":{"docs":{},"提":{"docs":{},"及":{"docs":{},"的":{"docs":{},"框":{"docs":{},"架":{"docs":{},"里":{"docs":{},"面":{"docs":{},"，":{"docs":{},"它":{"docs":{},"并":{"docs":{},"没":{"docs":{},"有":{"docs":{},"显":{"docs":{},"著":{"docs":{},"提":{"docs":{},"高":{"docs":{},"性":{"docs":{},"能":{"docs":{},"，":{"docs":{},"但":{"docs":{},"它":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"值":{"docs":{},"得":{"docs":{},"探":{"docs":{},"讨":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}},"好":{"docs":{},"消":{"docs":{},"息":{"docs":{},"是":{"docs":{},"，":{"docs":{},"过":{"docs":{},"去":{"2":{"5":{"docs":{},"年":{"docs":{},"，":{"docs":{},"研":{"docs":{},"究":{"docs":{},"者":{"docs":{},"发":{"docs":{},"明":{"docs":{},"了":{"docs":{},"一":{"docs":{},"些":{"docs":{},"在":{"docs":{},"神":{"docs":{},"经":{"docs":{},"网":{"docs":{},"络":{"docs":{},"中":{"docs":{},"选":{"docs":{},"择":{"docs":{},"超":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"和":{"docs":{},"规":{"docs":{},"则":{"docs":{},"。":{"docs":{},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"u":{"docs":{},"n":{"docs":{},"等":{"docs":{},"人":{"docs":{},"的":{"docs":{},"e":{"docs":{},"f":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"i":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}},"已":{"docs":{},"经":{"docs":{},"解":{"docs":{},"释":{"docs":{},"了":{"docs":{},"所":{"docs":{},"有":{"docs":{},"的":{"docs":{},"基":{"docs":{},"本":{"docs":{},"该":{"docs":{},"概":{"docs":{},"念":{"docs":{},"，":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"完":{"docs":{},"整":{"docs":{},"的":{"docs":{},"m":{"docs":{},"l":{"docs":{},"p":{"docs":{},"类":{"docs":{},"。":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"3":{"0":{"docs":{},"%":{"docs":{},"噪":{"docs":{},"声":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}},"docs":{}},"docs":{},"许":{"docs":{},"多":{"docs":{},"文":{"docs":{},"献":{"docs":{},"专":{"docs":{},"注":{"docs":{},"在":{"docs":{},"好":{"docs":{},"的":{"docs":{},"学":{"docs":{},"习":{"docs":{},"速":{"docs":{},"率":{"docs":{},"的":{"docs":{},"选":{"docs":{},"择":{"docs":{},"上":{"docs":{},"。":{"docs":{},"最":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"方":{"docs":{},"案":{"docs":{},"就":{"docs":{},"是":{"docs":{},"选":{"docs":{},"择":{"docs":{},"一":{"docs":{},"个":{"docs":{},"固":{"docs":{},"定":{"docs":{},"速":{"docs":{},"率":{"docs":{},"。":{"docs":{},"经":{"docs":{},"验":{"docs":{},"法":{"docs":{},"则":{"docs":{},"：":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"对":{"docs":{},"数":{"docs":{},"间":{"docs":{},"隔":{"docs":{},"的":{"docs":{},"值":{"docs":{},"(":{"0":{"docs":{},".":{"1":{"docs":{},"，":{"0":{"0":{"1":{"docs":{},"，":{"docs":{},"。":{"docs":{},"。":{"docs":{},")":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"缩":{"docs":{},"小":{"docs":{},"（":{"docs":{},"对":{"docs":{},"数":{"docs":{},"）":{"docs":{},"网":{"docs":{},"络":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"（":{"docs":{},"你":{"docs":{},"获":{"docs":{},"得":{"docs":{},"最":{"docs":{},"低":{"docs":{},"验":{"docs":{},"证":{"docs":{},"错":{"docs":{},"误":{"docs":{},"的":{"docs":{},"区":{"docs":{},"域":{"docs":{},"）":{"docs":{},"。":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"权":{"docs":{},"值":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}},"共":{"docs":{},"享":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"通":{"docs":{},"过":{"docs":{},"会":{"docs":{},"将":{"docs":{},"一":{"docs":{},"个":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"非":{"docs":{},"线":{"docs":{},"性":{"docs":{},"函":{"docs":{},"数":{"docs":{},"作":{"docs":{},"为":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"层":{"docs":{},"的":{"docs":{},"激":{"docs":{},"活":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{},"默":{"docs":{},"认":{"docs":{},"是":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"h":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"当":{"docs":{},"然":{"docs":{},"很":{"docs":{},"多":{"docs":{},"时":{"docs":{},"候":{"docs":{},"你":{"docs":{},"可":{"docs":{},"能":{"docs":{},"需":{"docs":{},"要":{"docs":{},"其":{"docs":{},"他":{"docs":{},"函":{"docs":{},"数":{"docs":{},"。":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"i":{"docs":{},"n":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"作":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"参":{"docs":{},"数":{"docs":{},"来":{"docs":{},"传":{"docs":{},"递":{"docs":{},"给":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"串":{"docs":{},"联":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"深":{"docs":{},"度":{"docs":{},"网":{"docs":{},"络":{"docs":{},"：":{"docs":{},"第":{"docs":{},"k":{"docs":{},"层":{"docs":{},"的":{"docs":{},"输":{"docs":{},"出":{"docs":{},"(":{"docs":{},"y":{"docs":{},")":{"docs":{},"可":{"docs":{},"以":{"docs":{},"变":{"docs":{},"成":{"docs":{},"第":{"docs":{},"k":{"docs":{},"+":{"1":{"docs":{},"层":{"docs":{},"的":{"docs":{},"输":{"docs":{},"入":{"docs":{},"。":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"随":{"docs":{},"机":{"docs":{},"的":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"表":{"docs":{},"现":{"docs":{},"得":{"docs":{},"很":{"docs":{},"像":{"docs":{},"一":{"docs":{},"个":{"docs":{},"特":{"docs":{},"征":{"docs":{},"检":{"docs":{},"测":{"docs":{},"器":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}},"与":{"docs":{},"其":{"docs":{},"他":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"代":{"docs":{},"码":{"docs":{},"相":{"docs":{},"比":{"docs":{},"，":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"_":{"docs":{},"p":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"_":{"2":{"docs":{},"d":{"docs":{},"操":{"docs":{},"作":{"docs":{},"有":{"docs":{},"点":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"。":{"docs":{},"它":{"docs":{},"需":{"docs":{},"要":{"docs":{},"缩":{"docs":{},"减":{"docs":{},"因":{"docs":{},"子":{"docs":{},"d":{"docs":{},"s":{"docs":{},"(":{"docs":{},"长":{"docs":{},"度":{"docs":{},"维":{"2":{"docs":{},"的":{"docs":{},"t":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"，":{"docs":{},"班":{"docs":{},"汉":{"docs":{},"图":{"docs":{},"像":{"docs":{},"长":{"docs":{},"度":{"docs":{},"和":{"docs":{},"宽":{"docs":{},"度":{"docs":{},"的":{"docs":{},"缩":{"docs":{},"减":{"docs":{},"因":{"docs":{},"子":{"docs":{},")":{"docs":{},"在":{"docs":{},"图":{"docs":{},"构":{"docs":{},"建":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"被":{"docs":{},"告":{"docs":{},"知":{"docs":{},"。":{"docs":{},"这":{"docs":{},"在":{"docs":{},"未":{"docs":{},"来":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"发":{"docs":{},"生":{"docs":{},"改":{"docs":{},"变":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}},"当":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"权":{"docs":{},"重":{"docs":{},"值":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"f":{"docs":{},"a":{"docs":{},"n":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}},"这":{"docs":{},"里":{"docs":{},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"d":{"docs":{},"_":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"和":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"s":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"并":{"docs":{},"不":{"docs":{},"是":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"p":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"在":{"docs":{},"整":{"docs":{},"个":{"docs":{},"验":{"docs":{},"证":{"docs":{},"集":{"docs":{},"和":{"docs":{},"测":{"docs":{},"试":{"docs":{},"集":{"docs":{},"循":{"docs":{},"环":{"docs":{},"，":{"docs":{},"以":{"docs":{},"产":{"docs":{},"生":{"docs":{},"这":{"docs":{},"些":{"docs":{},"集":{"docs":{},"合":{"docs":{},"的":{"docs":{},"损":{"docs":{},"失":{"docs":{},"数":{"docs":{},"的":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"。":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"与":{"docs":{},"m":{"docs":{},"l":{"docs":{},"p":{"docs":{},"相":{"docs":{},"同":{"docs":{},"得":{"docs":{},"权":{"docs":{},"值":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"方":{"docs":{},"案":{"docs":{},"。":{"docs":{},"权":{"docs":{},"值":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"范":{"docs":{},"围":{"docs":{},"为":{"docs":{},"[":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"_":{"docs":{},"c":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"_":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"作":{"docs":{},"为":{"docs":{},"参":{"docs":{},"数":{"docs":{},"被":{"docs":{},"变":{"docs":{},"量":{"docs":{},"化":{"docs":{},"为":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"。":{"docs":{},"这":{"docs":{},"允":{"docs":{},"许":{"docs":{},"我":{"docs":{},"们":{"docs":{},"去":{"docs":{},"使":{"docs":{},"用":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"c":{"docs":{},"d":{"docs":{},"和":{"docs":{},"p":{"docs":{},"c":{"docs":{},"d":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"使":{"docs":{},"用":{"docs":{},"p":{"docs":{},"c":{"docs":{},"d":{"docs":{},"，":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"需":{"docs":{},"要":{"docs":{},"被":{"docs":{},"关":{"docs":{},"联":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"共":{"docs":{},"享":{"docs":{},"变":{"docs":{},"量":{"docs":{},"，":{"docs":{},"它":{"docs":{},"包":{"docs":{},"含":{"docs":{},"前":{"docs":{},"一":{"docs":{},"次":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"的":{"docs":{},"g":{"docs":{},"i":{"docs":{},"b":{"docs":{},"b":{"docs":{},"s":{"docs":{},"链":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"读":{"docs":{},"者":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"页":{"docs":{},"面":{"docs":{},"查":{"docs":{},"看":{"docs":{},"m":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"的":{"docs":{},"识":{"docs":{},"别":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}}}}}}}},"除":{"docs":{},"非":{"docs":{},"我":{"docs":{},"们":{"docs":{},"去":{"docs":{},"使":{"docs":{},"用":{"docs":{},"正":{"docs":{},"则":{"docs":{},"选":{"docs":{},"项":{"docs":{},"（":{"docs":{},"e":{"docs":{},"a":{"docs":{},"r":{"docs":{},"l":{"docs":{},"i":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}}}}}}},"隐":{"docs":{},"藏":{"docs":{},"节":{"docs":{},"点":{"docs":{},"数":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}},"非":{"docs":{},"线":{"docs":{},"性":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}},"预":{"docs":{},"计":{"docs":{},"将":{"docs":{},"会":{"docs":{},"得":{"docs":{},"到":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"输":{"docs":{},"出":{"docs":{},"：":{"docs":{"3_Multilayer_Perceptron_多层感知机.html":{"ref":"3_Multilayer_Perceptron_多层感知机.html","tf":0.0005518763796909492}}}}}}}}}}}}}},",":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}},"上":{"docs":{},"图":{"docs":{},"显":{"docs":{},"示":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"c":{"docs":{},"n":{"docs":{},"n":{"docs":{},"的":{"docs":{},"两":{"docs":{},"层":{"docs":{},"，":{"docs":{},"第":{"docs":{},"m":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}},"与":{"docs":{},"权":{"docs":{},"值":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"w":{"docs":{},"相":{"docs":{},"关":{"docs":{},"的":{"4":{"docs":{},"维":{"docs":{},"张":{"docs":{},"量":{"docs":{},"，":{"docs":{},"尺":{"docs":{},"寸":{"docs":{},"包":{"docs":{},"括":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{},"[":{"docs":{},"m":{"docs":{},"层":{"docs":{},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"，":{"docs":{},"m":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"输":{"docs":{},"入":{"docs":{},"的":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"b":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{},"有":{"docs":{},"关":{"docs":{},"的":{"4":{"docs":{},"维":{"docs":{},"张":{"docs":{},"量":{"docs":{},"，":{"docs":{},"尺":{"docs":{},"寸":{"docs":{},"包":{"docs":{},"括":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}},"假":{"docs":{},"如":{"docs":{},"你":{"docs":{},"想":{"docs":{},"要":{"docs":{},"在":{"docs":{},"新":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"集":{"docs":{},"上":{"docs":{},"采":{"docs":{},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{},"模":{"docs":{},"型":{"docs":{},"，":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"一":{"docs":{},"些":{"docs":{},"小":{"docs":{},"技":{"docs":{},"巧":{"docs":{},"可":{"docs":{},"能":{"docs":{},"能":{"docs":{},"让":{"docs":{},"你":{"docs":{},"获":{"docs":{},"得":{"docs":{},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"：":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"为":{"docs":{},"n":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"，":{"docs":{},"则":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"正":{"docs":{},"相":{"docs":{},"位":{"docs":{},"时":{"docs":{},"产":{"docs":{},"生":{"docs":{},"的":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"样":{"docs":{},"本":{"docs":{},"来":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"g":{"docs":{},"i":{"docs":{},"b":{"docs":{},"b":{"docs":{},"s":{"docs":{},"链":{"docs":{},"，":{"docs":{},"以":{"docs":{},"此":{"docs":{},"实":{"docs":{},"现":{"docs":{},"c":{"docs":{},"d":{"docs":{},"。":{"docs":{},"当":{"docs":{},"我":{"docs":{},"们":{"docs":{},"已":{"docs":{},"经":{"docs":{},"建":{"docs":{},"立":{"docs":{},"了":{"docs":{},"这":{"docs":{},"个":{"docs":{},"链":{"docs":{},"的":{"docs":{},"开":{"docs":{},"始":{"docs":{},"点":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"计":{"docs":{},"算":{"docs":{},"这":{"docs":{},"个":{"docs":{},"g":{"docs":{},"i":{"docs":{},"b":{"docs":{},"b":{"docs":{},"s":{"docs":{},"链":{"docs":{},"的":{"docs":{},"终":{"docs":{},"点":{"docs":{},"的":{"docs":{},"样":{"docs":{},"本":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"的":{"docs":{},"去":{"docs":{},"获":{"docs":{},"得":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"的":{"docs":{},"样":{"docs":{},"本":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"获":{"docs":{},"得":{"docs":{},"这":{"docs":{},"些":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"提":{"docs":{},"供":{"docs":{},"的":{"docs":{},"s":{"docs":{},"a":{"docs":{},"c":{"docs":{},"n":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"建":{"docs":{},"议":{"docs":{},"读":{"docs":{},"者":{"docs":{},"去":{"docs":{},"阅":{"docs":{},"读":{"docs":{},"这":{"docs":{},"个":{"docs":{},"链":{"docs":{},"接":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"设":{"docs":{},"第":{"docs":{},"l":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"除":{"docs":{},"了":{"docs":{},"最":{"docs":{},"小":{"docs":{},"化":{"docs":{},"重":{"docs":{},"构":{"docs":{},"误":{"docs":{},"差":{"docs":{},"外":{"docs":{},"没":{"docs":{},"有":{"docs":{},"别":{"docs":{},"的":{"docs":{},"的":{"docs":{},"限":{"docs":{},"制":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"有":{"docs":{},"n":{"docs":{},"个":{"docs":{},"输":{"docs":{},"入":{"docs":{},"和":{"docs":{},"n":{"docs":{},"（":{"docs":{},"或":{"docs":{},"者":{"docs":{},"更":{"docs":{},"大":{"docs":{},"）":{"docs":{},"维":{"docs":{},"编":{"docs":{},"码":{"docs":{},"学":{"docs":{},"习":{"docs":{},"能":{"docs":{},"力":{"docs":{},"的":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"定":{"docs":{},"义":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"将":{"docs":{},"倾":{"docs":{},"向":{"docs":{},"于":{"docs":{},"去":{"docs":{},"映":{"docs":{},"射":{"docs":{},"出":{"docs":{},"它":{"docs":{},"的":{"docs":{},"输":{"docs":{},"入":{"docs":{},"副":{"docs":{},"本":{"docs":{},"。":{"docs":{},"这":{"docs":{},"种":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"将":{"docs":{},"无":{"docs":{},"法":{"docs":{},"从":{"docs":{},"训":{"docs":{},"练":{"docs":{},"样":{"docs":{},"本":{"docs":{},"的":{"docs":{},"分":{"docs":{},"布":{"docs":{},"中":{"docs":{},"区":{"docs":{},"分":{"docs":{},"任":{"docs":{},"何":{"docs":{},"测":{"docs":{},"试":{"docs":{},"样":{"docs":{},"例":{"docs":{},"。":{"docs":{},"（":{"docs":{},"无":{"docs":{},"效":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"：":{"docs":{},"输":{"docs":{},"出":{"docs":{},"与":{"docs":{},"输":{"docs":{},"入":{"docs":{},"完":{"docs":{},"全":{"docs":{},"相":{"docs":{},"同":{"docs":{},"）":{"docs":{},"。":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"动":{"docs":{},"机":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"可":{"docs":{},"以":{"docs":{},"观":{"docs":{},"察":{"docs":{},"到":{"docs":{},"不":{"docs":{},"同":{"docs":{},"实":{"docs":{},"验":{"docs":{},"下":{"docs":{},"验":{"docs":{},"证":{"docs":{},"误":{"docs":{},"差":{"docs":{},"和":{"docs":{},"测":{"docs":{},"试":{"docs":{},"误":{"docs":{},"差":{"docs":{},"的":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"由":{"docs":{},"不":{"docs":{},"同":{"docs":{},"硬":{"docs":{},"件":{"docs":{},"的":{"docs":{},"取":{"docs":{},"整":{"docs":{},"结":{"docs":{},"构":{"docs":{},"不":{"docs":{},"同":{"docs":{},"造":{"docs":{},"成":{"docs":{},"的":{"docs":{},"。":{"docs":{},"可":{"docs":{},"以":{"docs":{},"忽":{"docs":{},"略":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"因":{"docs":{},"为":{"docs":{},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"的":{"docs":{},"尺":{"docs":{},"寸":{"docs":{},"会":{"docs":{},"随":{"docs":{},"着":{"docs":{},"深":{"docs":{},"度":{"docs":{},"的":{"docs":{},"增":{"docs":{},"加":{"docs":{},"而":{"docs":{},"减":{"docs":{},"小":{"docs":{},"，":{"docs":{},"靠":{"docs":{},"近":{"docs":{},"输":{"docs":{},"入":{"docs":{},"层":{"docs":{},"的":{"docs":{},"层":{"docs":{},"将":{"docs":{},"趋":{"docs":{},"向":{"docs":{},"于":{"docs":{},"有":{"docs":{},"更":{"docs":{},"少":{"docs":{},"的":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"，":{"docs":{},"而":{"docs":{},"更":{"docs":{},"高":{"docs":{},"的":{"docs":{},"层":{"docs":{},"有":{"docs":{},"更":{"docs":{},"多":{"docs":{},"的":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"。":{"docs":{},"事":{"docs":{},"实":{"docs":{},"上":{"docs":{},"，":{"docs":{},"为":{"docs":{},"了":{"docs":{},"平":{"docs":{},"衡":{"docs":{},"每":{"docs":{},"一":{"docs":{},"层":{"docs":{},"的":{"docs":{},"计":{"docs":{},"算":{"docs":{},"量":{"docs":{},"，":{"docs":{},"特":{"docs":{},"征":{"docs":{},"数":{"docs":{},"和":{"docs":{},"图":{"docs":{},"像":{"docs":{},"位":{"docs":{},"置":{"docs":{},"数":{"docs":{},"的":{"docs":{},"乘":{"docs":{},"积":{"docs":{},"在":{"docs":{},"层":{"docs":{},"的":{"docs":{},"传":{"docs":{},"递":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"都":{"docs":{},"是":{"docs":{},"基":{"docs":{},"本":{"docs":{},"一":{"docs":{},"致":{"docs":{},"的":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"保":{"docs":{},"护":{"docs":{},"输":{"docs":{},"入":{"docs":{},"信":{"docs":{},"息":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"保":{"docs":{},"证":{"docs":{},"总":{"docs":{},"的":{"docs":{},"激":{"docs":{},"活":{"docs":{},"数":{"docs":{},"量":{"docs":{},"（":{"docs":{},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"数":{"docs":{},"*":{"docs":{},"像":{"docs":{},"素":{"docs":{},"位":{"docs":{},"置":{"docs":{},"数":{"docs":{},"）":{"docs":{},"在":{"docs":{},"层":{"docs":{},"间":{"docs":{},"传":{"docs":{},"递":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"是":{"docs":{},"至":{"docs":{},"于":{"docs":{},"减":{"docs":{},"少":{"docs":{},"（":{"docs":{},"当":{"docs":{},"然":{"docs":{},"我":{"docs":{},"们":{"docs":{},"在":{"docs":{},"做":{"docs":{},"监":{"docs":{},"督":{"docs":{},"学":{"docs":{},"习":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"当":{"docs":{},"然":{"docs":{},"是":{"docs":{},"希":{"docs":{},"望":{"docs":{},"它":{"docs":{},"减":{"docs":{},"小":{"docs":{},"的":{"docs":{},"）":{"docs":{},"。":{"docs":{},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"的":{"docs":{},"数":{"docs":{},"量":{"docs":{},"直":{"docs":{},"接":{"docs":{},"控":{"docs":{},"制":{"docs":{},"整":{"docs":{},"个":{"docs":{},"容":{"docs":{},"量":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"它":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"于":{"docs":{},"可":{"docs":{},"用":{"docs":{},"样":{"docs":{},"例":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"和":{"docs":{},"任":{"docs":{},"务":{"docs":{},"的":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"y":{"docs":{},"是":{"docs":{},"视":{"docs":{},"为":{"docs":{},"x":{"docs":{},"的":{"docs":{},"有":{"docs":{},"损":{"docs":{},"压":{"docs":{},"缩":{"docs":{},"(":{"docs":{},"l":{"docs":{},"o":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"希":{"docs":{},"望":{"docs":{},"p":{"docs":{},"(":{"docs":{},"v":{"docs":{},")":{"docs":{},"=":{"docs":{},"p":{"docs":{},"_":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},"v":{"docs":{},")":{"docs":{},"（":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"真":{"docs":{},"实":{"docs":{},"、":{"docs":{},"底":{"docs":{},"层":{"docs":{},"分":{"docs":{},"布":{"docs":{},"）":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"训":{"docs":{},"练":{"docs":{},"样":{"docs":{},"本":{"docs":{},"来":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"马":{"docs":{},"尔":{"docs":{},"可":{"docs":{},"夫":{"docs":{},"链":{"docs":{},"（":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"从":{"docs":{},"一":{"docs":{},"个":{"docs":{},"被":{"docs":{},"预":{"docs":{},"计":{"docs":{},"接":{"docs":{},"近":{"docs":{},"于":{"docs":{},"p":{"docs":{},"的":{"docs":{},"分":{"docs":{},"布":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"这":{"docs":{},"个":{"docs":{},"链":{"docs":{},"已":{"docs":{},"经":{"docs":{},"开":{"docs":{},"始":{"docs":{},"去":{"docs":{},"收":{"docs":{},"敛":{"docs":{},"这":{"docs":{},"个":{"docs":{},"最":{"docs":{},"终":{"docs":{},"的":{"docs":{},"分":{"docs":{},"布":{"docs":{},"p":{"docs":{},"）":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"此":{"docs":{},"这":{"docs":{},"个":{"docs":{},"技":{"docs":{},"巧":{"docs":{},"事":{"docs":{},"实":{"docs":{},"上":{"docs":{},"是":{"docs":{},"去":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"正":{"docs":{},"确":{"docs":{},"等":{"docs":{},"级":{"docs":{},"的":{"docs":{},"“":{"docs":{},"粒":{"docs":{},"度":{"docs":{},"”":{"docs":{},"，":{"docs":{},"以":{"docs":{},"便":{"docs":{},"对":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"集":{"docs":{},"去":{"docs":{},"形":{"docs":{},"成":{"docs":{},"合":{"docs":{},"适":{"docs":{},"范":{"docs":{},"围":{"docs":{},"内":{"docs":{},"的":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"复":{"docs":{},"制":{"docs":{},"单":{"docs":{},"元":{"docs":{},"使":{"docs":{},"得":{"docs":{},"特":{"docs":{},"征":{"docs":{},"可":{"docs":{},"以":{"docs":{},"无":{"docs":{},"视":{"docs":{},"其":{"docs":{},"在":{"docs":{},"视":{"docs":{},"觉":{"docs":{},"野":{"docs":{},"中":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"而":{"docs":{},"被":{"docs":{},"检":{"docs":{},"测":{"docs":{},"到":{"docs":{},"。":{"docs":{},"此":{"docs":{},"外":{"docs":{},"，":{"docs":{},"权":{"docs":{},"值":{"docs":{},"共":{"docs":{},"享":{"docs":{},"增":{"docs":{},"加":{"docs":{},"了":{"docs":{},"学":{"docs":{},"习":{"docs":{},"效":{"docs":{},"率":{"docs":{},"，":{"docs":{},"减":{"docs":{},"少":{"docs":{},"了":{"docs":{},"需":{"docs":{},"要":{"docs":{},"被":{"docs":{},"学":{"docs":{},"习":{"docs":{},"的":{"docs":{},"自":{"docs":{},"由":{"docs":{},"参":{"docs":{},"数":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"。":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"设":{"docs":{},"定":{"docs":{},"，":{"docs":{},"使":{"docs":{},"得":{"docs":{},"c":{"docs":{},"n":{"docs":{},"n":{"docs":{},"s":{"docs":{},"在":{"docs":{},"视":{"docs":{},"觉":{"docs":{},"问":{"docs":{},"题":{"docs":{},"上":{"docs":{},"有":{"docs":{},"更":{"docs":{},"好":{"docs":{},"的":{"docs":{},"泛":{"docs":{},"化":{"docs":{},"性":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"标":{"docs":{},"准":{"docs":{},"m":{"docs":{},"l":{"docs":{},"p":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"第":{"docs":{},"l":{"docs":{},"层":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"k":{"docs":{},"l":{"docs":{},"个":{"docs":{},"神":{"docs":{},"经":{"docs":{},"元":{"docs":{},"，":{"docs":{},"那":{"docs":{},"计":{"docs":{},"算":{"docs":{},"量":{"docs":{},"只":{"docs":{},"有":{"docs":{},"k":{"docs":{},"(":{"docs":{},"k":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"于":{"docs":{},"预":{"docs":{},"训":{"docs":{},"练":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"循":{"docs":{},"环":{"docs":{},"网":{"docs":{},"络":{"docs":{},"中":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"层":{"docs":{},"。":{"docs":{},"对":{"docs":{},"于":{"docs":{},"每":{"docs":{},"一":{"docs":{},"层":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"使":{"docs":{},"用":{"docs":{},"编":{"docs":{},"译":{"docs":{},"的":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{},"o":{"docs":{},"函":{"docs":{},"数":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"s":{"docs":{},"g":{"docs":{},"d":{"docs":{},"(":{"docs":{},"随":{"docs":{},"机":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"下":{"docs":{},"降":{"docs":{},")":{"docs":{},"，":{"docs":{},"以":{"docs":{},"实":{"docs":{},"现":{"docs":{},"权":{"docs":{},"值":{"docs":{},"优":{"docs":{},"化":{"docs":{},"，":{"docs":{},"来":{"docs":{},"见":{"docs":{},"效":{"docs":{},"每":{"docs":{},"层":{"docs":{},"的":{"docs":{},"重":{"docs":{},"构":{"docs":{},"损":{"docs":{},"失":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"将":{"docs":{},"在":{"docs":{},"训":{"docs":{},"练":{"docs":{},"集":{"docs":{},"中":{"docs":{},"被":{"docs":{},"应":{"docs":{},"用":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"是":{"docs":{},"以":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"_":{"docs":{},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"c":{"docs":{},"h":{"docs":{},"s":{"docs":{},"中":{"docs":{},"给":{"docs":{},"出":{"docs":{},"的":{"docs":{},"固":{"docs":{},"定":{"docs":{},"次":{"docs":{},"数":{"docs":{},"的":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"。":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"b":{"docs":{},"m":{"docs":{},"s":{"docs":{},"来":{"docs":{},"说":{"docs":{},"，":{"docs":{},"s":{"docs":{},"包":{"docs":{},"含":{"docs":{},"了":{"docs":{},"可":{"docs":{},"视":{"docs":{},"和":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"单":{"docs":{},"元":{"docs":{},"的":{"docs":{},"集":{"docs":{},"合":{"docs":{},"。":{"docs":{},"然":{"docs":{},"而":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"条":{"docs":{},"件":{"docs":{},"独":{"docs":{},"立":{"docs":{},"性":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"执":{"docs":{},"行":{"docs":{},"块":{"docs":{},"g":{"docs":{},"i":{"docs":{},"b":{"docs":{},"b":{"docs":{},"s":{"docs":{},"抽":{"docs":{},"样":{"docs":{},"。":{"docs":{},"在":{"docs":{},"这":{"docs":{},"个":{"docs":{},"设":{"docs":{},"定":{"docs":{},"中":{"docs":{},"，":{"docs":{},"可":{"docs":{},"视":{"docs":{},"单":{"docs":{},"元":{"docs":{},"被":{"docs":{},"采":{"docs":{},"样":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"给":{"docs":{},"出":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"单":{"docs":{},"元":{"docs":{},"的":{"docs":{},"固":{"docs":{},"定":{"docs":{},"值":{"docs":{},"，":{"docs":{},"同":{"docs":{},"样":{"docs":{},"的":{"docs":{},"，":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"单":{"docs":{},"元":{"docs":{},"也":{"docs":{},"是":{"docs":{},"如":{"docs":{},"此":{"docs":{},"：":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"比":{"docs":{},"散":{"docs":{},"度":{"docs":{},"算":{"docs":{},"法":{"docs":{},"（":{"docs":{},"c":{"docs":{},"d":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"，":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"成":{"docs":{},"功":{"docs":{},"的":{"docs":{},"用":{"docs":{},"于":{"docs":{},"求":{"docs":{},"解":{"docs":{},"对":{"docs":{},"数":{"docs":{},"似":{"docs":{},"然":{"docs":{},"函":{"docs":{},"数":{"docs":{},"关":{"docs":{},"于":{"docs":{},"未":{"docs":{},"知":{"docs":{},"参":{"docs":{},"数":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"的":{"docs":{},"近":{"docs":{},"似":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{},"它":{"docs":{},"使":{"docs":{},"用":{"docs":{},"两":{"docs":{},"个":{"docs":{},"技":{"docs":{},"巧":{"docs":{},"来":{"docs":{},"技":{"docs":{},"术":{"docs":{},"采":{"docs":{},"样":{"docs":{},"过":{"docs":{},"程":{"docs":{},"：":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"梯":{"docs":{},"度":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"等":{"docs":{},"待":{"docs":{},"链":{"docs":{},"的":{"docs":{},"收":{"docs":{},"敛":{"docs":{},"。":{"docs":{},"样":{"docs":{},"本":{"docs":{},"在":{"docs":{},"k":{"docs":{},"步":{"docs":{},"g":{"docs":{},"i":{"docs":{},"b":{"docs":{},"b":{"docs":{},"s":{"docs":{},"采":{"docs":{},"样":{"docs":{},"后":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"获":{"docs":{},"得":{"docs":{},"。":{"docs":{},"在":{"docs":{},"实":{"docs":{},"际":{"docs":{},"中":{"docs":{},"，":{"docs":{},"k":{"docs":{},"=":{"1":{"docs":{},"时":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"获":{"docs":{},"得":{"docs":{},"惊":{"docs":{},"人":{"docs":{},"的":{"docs":{},"好":{"docs":{},"的":{"docs":{},"效":{"docs":{},"果":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"将":{"docs":{},"产":{"docs":{},"生":{"docs":{},"这":{"docs":{},"样":{"docs":{},"的":{"docs":{},"输":{"docs":{},"出":{"docs":{},"：":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"输":{"docs":{},"出":{"docs":{},"：":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}},"它":{"docs":{},"组":{"docs":{},"合":{"docs":{},"起":{"docs":{},"来":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279},"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}},"想":{"docs":{},"象":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"第":{"docs":{},"m":{"docs":{},"－":{"1":{"docs":{},"层":{"docs":{},"是":{"docs":{},"输":{"docs":{},"入":{"docs":{},"视":{"docs":{},"网":{"docs":{},"膜":{"docs":{},"。":{"docs":{},"在":{"docs":{},"上":{"docs":{},"图":{"docs":{},"总":{"docs":{},"，":{"docs":{},"第":{"docs":{},"m":{"docs":{},"层":{"docs":{},"的":{"docs":{},"单":{"docs":{},"元":{"docs":{},"有":{"docs":{},"宽":{"docs":{},"度":{"docs":{},"为":{"3":{"docs":{},"的":{"docs":{},"对":{"docs":{},"输":{"docs":{},"入":{"docs":{},"视":{"docs":{},"网":{"docs":{},"膜":{"docs":{},"的":{"docs":{},"感":{"docs":{},"受":{"docs":{},"野":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"它":{"docs":{},"们":{"docs":{},"只":{"docs":{},"连":{"docs":{},"接":{"docs":{},"视":{"docs":{},"网":{"docs":{},"膜":{"docs":{},"层":{"docs":{},"中":{"3":{"docs":{},"个":{"docs":{},"相":{"docs":{},"邻":{"docs":{},"的":{"docs":{},"神":{"docs":{},"经":{"docs":{},"元":{"docs":{},"。":{"docs":{},"第":{"docs":{},"m":{"docs":{},"层":{"docs":{},"的":{"docs":{},"单":{"docs":{},"元":{"docs":{},"与":{"docs":{},"下":{"docs":{},"一":{"docs":{},"层":{"docs":{},"有":{"docs":{},"相":{"docs":{},"似":{"docs":{},"的":{"docs":{},"连":{"docs":{},"接":{"docs":{},"。":{"docs":{},"我":{"docs":{},"们":{"docs":{},"说":{"docs":{},"，":{"docs":{},"感":{"docs":{},"受":{"docs":{},"野":{"docs":{},"连":{"docs":{},"接":{"docs":{},"于":{"docs":{},"下":{"docs":{},"一":{"docs":{},"层":{"docs":{},"的":{"docs":{},"数":{"docs":{},"目":{"docs":{},"也":{"docs":{},"是":{"3":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"感":{"docs":{},"受":{"docs":{},"野":{"docs":{},"连":{"docs":{},"接":{"docs":{},"于":{"docs":{},"输":{"docs":{},"入":{"docs":{},"的":{"docs":{},"则":{"docs":{},"更":{"docs":{},"大":{"docs":{},"（":{"5":{"docs":{},"）":{"docs":{},"。":{"docs":{},"每":{"docs":{},"个":{"docs":{},"单":{"docs":{},"元":{"docs":{},"对":{"docs":{},"视":{"docs":{},"网":{"docs":{},"膜":{"docs":{},"上":{"docs":{},"于":{"docs":{},"自":{"docs":{},"己":{"docs":{},"感":{"docs":{},"受":{"docs":{},"野":{"docs":{},"相":{"docs":{},"异":{"docs":{},"的":{"docs":{},"地":{"docs":{},"方":{"docs":{},"都":{"docs":{},"是":{"docs":{},"不":{"docs":{},"会":{"docs":{},"有":{"docs":{},"响":{"docs":{},"应":{"docs":{},"的":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"结":{"docs":{},"构":{"docs":{},"保":{"docs":{},"证":{"docs":{},"了":{"docs":{},"被":{"docs":{},"学":{"docs":{},"习":{"docs":{},"的":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"对":{"docs":{},"一":{"docs":{},"个":{"docs":{},"空":{"docs":{},"间":{"docs":{},"局":{"docs":{},"部":{"docs":{},"输":{"docs":{},"入":{"docs":{},"图":{"docs":{},"案":{"docs":{},"有":{"docs":{},"最":{"docs":{},"强":{"docs":{},"的":{"docs":{},"响":{"docs":{},"应":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}},"技":{"docs":{},"巧":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0014134275618374558},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}},"提":{"docs":{},"供":{"docs":{},"了":{"docs":{},"一":{"docs":{},"种":{"docs":{},"平":{"docs":{},"移":{"docs":{},"不":{"docs":{},"变":{"docs":{},"性":{"docs":{},"。":{"docs":{},"想":{"docs":{},"象":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"最":{"docs":{},"大":{"docs":{},"池":{"docs":{},"化":{"docs":{},"层":{"docs":{},"级":{"docs":{},"联":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"卷":{"docs":{},"积":{"docs":{},"层":{"docs":{},"。":{"docs":{},"这":{"docs":{},"里":{"docs":{},"有":{"8":{"docs":{},"个":{"docs":{},"方":{"docs":{},"向":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"输":{"docs":{},"入":{"docs":{},"图":{"docs":{},"像":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"单":{"docs":{},"个":{"docs":{},"像":{"docs":{},"素":{"docs":{},"平":{"docs":{},"移":{"docs":{},"。":{"docs":{},"假":{"docs":{},"如":{"docs":{},"说":{"docs":{},"最":{"docs":{},"大":{"docs":{},"池":{"docs":{},"化":{"docs":{},"是":{"2":{"2":{"docs":{},"的":{"docs":{},"区":{"docs":{},"域":{"docs":{},"，":{"8":{"docs":{},"个":{"docs":{},"可":{"docs":{},"能":{"docs":{},"的":{"docs":{},"方":{"docs":{},"向":{"docs":{},"中":{"docs":{},"有":{"3":{"docs":{},"个":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"产":{"docs":{},"生":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"输":{"docs":{},"出":{"docs":{},"（":{"3":{"docs":{},"/":{"8":{"docs":{},"）":{"docs":{},"。":{"docs":{},"当":{"docs":{},"池":{"docs":{},"化":{"docs":{},"层":{"docs":{},"为":{"3":{"3":{"docs":{},"时":{"docs":{},"，":{"docs":{},"概":{"docs":{},"率":{"docs":{},"增":{"docs":{},"加":{"docs":{},"到":{"5":{"docs":{},"/":{"8":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}}},"docs":{}}}}}}}}},"docs":{}},"docs":{}}}}}}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}},"docs":{}}}}}}}}}},"docs":{}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"整":{"docs":{},"个":{"docs":{},"模":{"docs":{},"型":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}},"此":{"docs":{},"外":{"docs":{},"，":{"docs":{},"两":{"docs":{},"类":{"docs":{},"基":{"docs":{},"础":{"docs":{},"细":{"docs":{},"胞":{"docs":{},"类":{"docs":{},"型":{"docs":{},"被":{"docs":{},"定":{"docs":{},"义":{"docs":{},"：":{"docs":{},"简":{"docs":{},"单":{"docs":{},"细":{"docs":{},"胞":{"docs":{},"使":{"docs":{},"用":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"感":{"docs":{},"受":{"docs":{},"野":{"docs":{},"，":{"docs":{},"最":{"docs":{},"大":{"docs":{},"限":{"docs":{},"度":{"docs":{},"的":{"docs":{},"响":{"docs":{},"应":{"docs":{},"特":{"docs":{},"定":{"docs":{},"的":{"docs":{},"棱":{"docs":{},"状":{"docs":{},"图":{"docs":{},"案":{"docs":{},"。":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"细":{"docs":{},"胞":{"docs":{},"有":{"docs":{},"更":{"docs":{},"大":{"docs":{},"的":{"docs":{},"感":{"docs":{},"受":{"docs":{},"野":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"局":{"docs":{},"部":{"docs":{},"不":{"docs":{},"变":{"docs":{},"的":{"docs":{},"确":{"docs":{},"定":{"docs":{},"图":{"docs":{},"案":{"docs":{},"精":{"docs":{},"确":{"docs":{},"位":{"docs":{},"置":{"docs":{},"。":{"docs":{},"动":{"docs":{},"物":{"docs":{},"视":{"docs":{},"觉":{"docs":{},"皮":{"docs":{},"层":{"docs":{},"是":{"docs":{},"现":{"docs":{},"存":{"docs":{},"的":{"docs":{},"最":{"docs":{},"强":{"docs":{},"大":{"docs":{},"的":{"docs":{},"视":{"docs":{},"觉":{"docs":{},"处":{"docs":{},"理":{"docs":{},"系":{"docs":{},"统":{"docs":{},"，":{"docs":{},"很":{"docs":{},"显":{"docs":{},"然":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"去":{"docs":{},"模":{"docs":{},"仿":{"docs":{},"它":{"docs":{},"的":{"docs":{},"行":{"docs":{},"为":{"docs":{},"。":{"docs":{},"因":{"docs":{},"此":{"docs":{},"，":{"docs":{},"许":{"docs":{},"多":{"docs":{},"类":{"docs":{},"神":{"docs":{},"经":{"docs":{},"模":{"docs":{},"型":{"docs":{},"在":{"docs":{},"文":{"docs":{},"献":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"，":{"docs":{},"包":{"docs":{},"括":{"docs":{},"n":{"docs":{},"e":{"docs":{},"o":{"docs":{},"c":{"docs":{},"o":{"docs":{},"g":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"，":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"和":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"c":{"docs":{},"n":{"docs":{},"n":{"docs":{},"s":{"docs":{},"中":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"只":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"共":{"docs":{},"享":{"docs":{},"同":{"docs":{},"一":{"docs":{},"组":{"docs":{},"权":{"docs":{},"值":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"该":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"形":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"特":{"docs":{},"征":{"docs":{},"映":{"docs":{},"射":{"docs":{},"（":{"docs":{},"f":{"docs":{},"e":{"docs":{},"a":{"docs":{},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"更":{"docs":{},"加":{"docs":{},"容":{"docs":{},"易":{"docs":{},"处":{"docs":{},"理":{"docs":{},"的":{"docs":{},"函":{"docs":{},"数":{"docs":{},"可":{"docs":{},"以":{"docs":{},"被":{"docs":{},"用":{"docs":{},"于":{"docs":{},"做":{"docs":{},"似":{"docs":{},"然":{"docs":{},"估":{"docs":{},"计":{"docs":{},"的":{"docs":{},"替":{"docs":{},"代":{"docs":{},"。":{"docs":{},"当":{"docs":{},"我":{"docs":{},"们":{"docs":{},"使":{"docs":{},"用":{"docs":{},"p":{"docs":{},"c":{"docs":{},"d":{"docs":{},"来":{"docs":{},"训":{"docs":{},"练":{"docs":{},"r":{"docs":{},"b":{"docs":{},"m":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"使":{"docs":{},"用":{"docs":{},"伪":{"docs":{},"似":{"docs":{},"然":{"docs":{},"估":{"docs":{},"计":{"docs":{},"来":{"docs":{},"替":{"docs":{},"代":{"docs":{},"。":{"docs":{},"伪":{"docs":{},"似":{"docs":{},"然":{"docs":{},"估":{"docs":{},"计":{"docs":{},"（":{"docs":{},"p":{"docs":{},"s":{"docs":{},"e":{"docs":{},"u":{"docs":{},"d":{"docs":{},"o":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"的":{"docs":{},"尺":{"docs":{},"寸":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"数":{"docs":{},"量":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"可":{"docs":{},"视":{"docs":{},"化":{"docs":{},"跟":{"docs":{},"踪":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}},"然":{"docs":{},"而":{"docs":{},"，":{"docs":{},"就":{"docs":{},"像":{"docs":{},"上":{"docs":{},"面":{"docs":{},"展":{"docs":{},"示":{"docs":{},"的":{"docs":{},"，":{"docs":{},"将":{"docs":{},"这":{"docs":{},"些":{"docs":{},"层":{"docs":{},"叠":{"docs":{},"加":{"docs":{},"起":{"docs":{},"来":{"docs":{},"去":{"docs":{},"形":{"docs":{},"成":{"docs":{},"（":{"docs":{},"非":{"docs":{},"线":{"docs":{},"性":{"docs":{},"）":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"，":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"变":{"docs":{},"得":{"docs":{},"越":{"docs":{},"来":{"docs":{},"越":{"docs":{},"全":{"docs":{},"局":{"docs":{},"化":{"docs":{},"。":{"docs":{},"举":{"docs":{},"例":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"第":{"docs":{},"m":{"docs":{},"＋":{"1":{"docs":{},"层":{"docs":{},"的":{"docs":{},"单":{"docs":{},"元":{"docs":{},"可":{"docs":{},"以":{"docs":{},"编":{"docs":{},"码":{"docs":{},"一":{"docs":{},"个":{"docs":{},"宽":{"docs":{},"度":{"docs":{},"为":{"5":{"docs":{},"的":{"docs":{},"非":{"docs":{},"线":{"docs":{},"性":{"docs":{},"特":{"docs":{},"征":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"后":{"docs":{},"我":{"docs":{},"们":{"docs":{},"通":{"docs":{},"过":{"docs":{},"这":{"docs":{},"些":{"docs":{},"函":{"docs":{},"数":{"docs":{},"可":{"docs":{},"以":{"docs":{},"计":{"docs":{},"算":{"docs":{},"一":{"docs":{},"个":{"docs":{},"随":{"docs":{},"机":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"下":{"docs":{},"降":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"的":{"docs":{},"c":{"docs":{},"o":{"docs":{},"s":{"docs":{},"t":{"docs":{},"和":{"docs":{},"更":{"docs":{},"新":{"docs":{},"。":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"写":{"docs":{},"成":{"docs":{},"如":{"docs":{},"下":{"docs":{},"公":{"docs":{},"式":{"docs":{},"：":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}},"白":{"docs":{},"化":{"docs":{},"(":{"docs":{},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},")":{"docs":{},"数":{"docs":{},"据":{"docs":{},"（":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"使":{"docs":{},"用":{"docs":{},"主":{"docs":{},"成":{"docs":{},"分":{"docs":{},"分":{"docs":{},"析":{"docs":{},"）":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"稀":{"docs":{},"疏":{"docs":{},"性":{"docs":{},"、":{"docs":{},"卷":{"docs":{},"积":{"docs":{},"层":{"docs":{},"和":{"docs":{},"最":{"docs":{},"大":{"docs":{},"池":{"docs":{},"化":{"docs":{},"时":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"系":{"docs":{},"列":{"docs":{},"模":{"docs":{},"型":{"docs":{},"的":{"docs":{},"核":{"docs":{},"心":{"docs":{},"。":{"docs":{},"而":{"docs":{},"准":{"docs":{},"确":{"docs":{},"的":{"docs":{},"模":{"docs":{},"型":{"docs":{},"细":{"docs":{},"节":{"docs":{},"有":{"docs":{},"很":{"docs":{},"大":{"docs":{},"的":{"docs":{},"差":{"docs":{},"异":{"docs":{},"，":{"docs":{},"下":{"docs":{},"图":{"docs":{},"显":{"docs":{},"示":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"t":{"docs":{},"模":{"docs":{},"型":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"连":{"docs":{},"接":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}},"细":{"docs":{},"节":{"docs":{},"和":{"docs":{},"注":{"docs":{},"解":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}},"经":{"docs":{},"典":{"docs":{},"的":{"docs":{},"是":{"2":{"2":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"没":{"docs":{},"有":{"docs":{},"最":{"docs":{},"大":{"docs":{},"池":{"docs":{},"化":{"docs":{},"。":{"docs":{},"非":{"docs":{},"常":{"docs":{},"大":{"docs":{},"的":{"docs":{},"图":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"较":{"docs":{},"低":{"docs":{},"的":{"docs":{},"层":{"docs":{},"使":{"docs":{},"用":{"4":{"4":{"docs":{},"的":{"docs":{},"池":{"docs":{},"化":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"需":{"docs":{},"要":{"docs":{},"记":{"docs":{},"住":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"池":{"docs":{},"化":{"docs":{},"在":{"docs":{},"通":{"docs":{},"过":{"1":{"6":{"docs":{},"个":{"docs":{},"因":{"docs":{},"子":{"docs":{},"减":{"docs":{},"少":{"docs":{},"信":{"docs":{},"号":{"docs":{},"维":{"docs":{},"度":{"docs":{},"的":{"docs":{},"同":{"docs":{},"时":{"docs":{},"，":{"docs":{},"也":{"docs":{},"可":{"docs":{},"能":{"docs":{},"导":{"docs":{},"致":{"docs":{},"信":{"docs":{},"号":{"docs":{},"细":{"docs":{},"节":{"docs":{},"的":{"docs":{},"大":{"docs":{},"量":{"docs":{},"丢":{"docs":{},"失":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}},"衰":{"docs":{},"减":{"docs":{},"每":{"docs":{},"次":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"的":{"docs":{},"学":{"docs":{},"习":{"docs":{},"速":{"docs":{},"率":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}},"让":{"docs":{},"我":{"docs":{},"们":{"docs":{},"让":{"docs":{},"它":{"docs":{},"变":{"docs":{},"得":{"docs":{},"有":{"docs":{},"趣":{"docs":{},"点":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}},"人":{"docs":{},"惊":{"docs":{},"讶":{"docs":{},"地":{"docs":{},"，":{"docs":{},"在":{"docs":{},"b":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"i":{"docs":{},"o":{"0":{"7":{"docs":{},"的":{"docs":{},"实":{"docs":{},"验":{"docs":{},"指":{"docs":{},"出":{"docs":{},"，":{"docs":{},"在":{"docs":{},"实":{"docs":{},"践":{"docs":{},"中":{"docs":{},"，":{"docs":{},"当":{"docs":{},"通":{"docs":{},"过":{"docs":{},"随":{"docs":{},"机":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"下":{"docs":{},"降":{"docs":{},"训":{"docs":{},"练":{"docs":{},"时":{"docs":{},"，":{"docs":{},"有":{"docs":{},"比":{"docs":{},"输":{"docs":{},"入":{"docs":{},"更":{"docs":{},"多":{"docs":{},"的":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"单":{"docs":{},"元":{"docs":{},"（":{"docs":{},"称":{"docs":{},"为":{"docs":{},"超":{"docs":{},"完":{"docs":{},"备":{"docs":{},"）":{"docs":{},"的":{"docs":{},"非":{"docs":{},"线":{"docs":{},"性":{"docs":{},"的":{"docs":{},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{},"可":{"docs":{},"以":{"docs":{},"产":{"docs":{},"生":{"docs":{},"有":{"docs":{},"效":{"docs":{},"的":{"docs":{},"表":{"docs":{},"达":{"docs":{},"。":{"docs":{},"（":{"docs":{},"这":{"docs":{},"里":{"docs":{},"，":{"docs":{},"有":{"docs":{},"效":{"docs":{},"指":{"docs":{},"的":{"docs":{},"是":{"docs":{},"编":{"docs":{},"码":{"docs":{},"作":{"docs":{},"为":{"docs":{},"网":{"docs":{},"络":{"docs":{},"的":{"docs":{},"输":{"docs":{},"入":{"docs":{},"获":{"docs":{},"得":{"docs":{},"了":{"docs":{},"更":{"docs":{},"低":{"docs":{},"的":{"docs":{},"分":{"docs":{},"类":{"docs":{},"误":{"docs":{},"差":{"docs":{},"）":{"docs":{},"。":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}},"超":{"docs":{},"参":{"docs":{},"的":{"docs":{},"选":{"docs":{},"择":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}},"运":{"docs":{},"行":{"docs":{},"代":{"docs":{},"码":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"这":{"docs":{},"个":{"docs":{},"代":{"docs":{},"码":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}},"通":{"docs":{},"常":{"docs":{},"在":{"docs":{},"每":{"docs":{},"个":{"docs":{},"文":{"docs":{},"献":{"docs":{},"中":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"的":{"docs":{},"尺":{"docs":{},"寸":{"docs":{},"都":{"docs":{},"有":{"docs":{},"很":{"docs":{},"大":{"docs":{},"的":{"docs":{},"不":{"docs":{},"同":{"docs":{},"，":{"docs":{},"它":{"docs":{},"常":{"docs":{},"常":{"docs":{},"是":{"docs":{},"基":{"docs":{},"于":{"docs":{},"数":{"docs":{},"据":{"docs":{},"库":{"docs":{},"的":{"docs":{},"。":{"docs":{},"m":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"在":{"docs":{},"第":{"docs":{},"一":{"docs":{},"层":{"docs":{},"的":{"docs":{},"最":{"docs":{},"好":{"docs":{},"结":{"docs":{},"果":{"docs":{},"是":{"5":{"5":{"docs":{},"层":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"。":{"docs":{},"当":{"docs":{},"自":{"docs":{},"然":{"docs":{},"图":{"docs":{},"像":{"docs":{},"（":{"docs":{},"每":{"docs":{},"维":{"docs":{},"有":{"docs":{},"几":{"docs":{},"百":{"docs":{},"个":{"docs":{},"像":{"docs":{},"素":{"docs":{},"）":{"docs":{},"趋":{"docs":{},"向":{"docs":{},"于":{"docs":{},"使":{"docs":{},"用":{"docs":{},"更":{"docs":{},"大":{"docs":{},"的":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"1":{"2":{"1":{"2":{"docs":{},"，":{"1":{"5":{"docs":{},"*":{"1":{"5":{"docs":{},"。":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"很":{"docs":{},"难":{"docs":{},"精":{"docs":{},"确":{"docs":{},"计":{"docs":{},"算":{"docs":{},"这":{"docs":{},"个":{"docs":{},"梯":{"docs":{},"度":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"式":{"docs":{},"中":{"docs":{},"第":{"docs":{},"一":{"docs":{},"项":{"docs":{},"涉":{"docs":{},"及":{"docs":{},"到":{"docs":{},"可":{"docs":{},"见":{"docs":{},"单":{"docs":{},"元":{"docs":{},"与":{"docs":{},"隐":{"docs":{},"含":{"docs":{},"单":{"docs":{},"元":{"docs":{},"的":{"docs":{},"联":{"docs":{},"合":{"docs":{},"分":{"docs":{},"布":{"docs":{},"，":{"docs":{},"由":{"docs":{},"于":{"docs":{},"归":{"docs":{},"一":{"docs":{},"化":{"docs":{},"因":{"docs":{},"子":{"docs":{},"z":{"docs":{},"(":{"docs":{},"θ":{"docs":{},")":{"docs":{},"的":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"该":{"docs":{},"分":{"docs":{},"布":{"docs":{},"很":{"docs":{},"难":{"docs":{},"获":{"docs":{},"取":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"过":{"docs":{},"消":{"docs":{},"除":{"docs":{},"非":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"，":{"docs":{},"减":{"docs":{},"少":{"docs":{},"了":{"docs":{},"更":{"docs":{},"上":{"docs":{},"层":{"docs":{},"的":{"docs":{},"计":{"docs":{},"算":{"docs":{},"量":{"docs":{"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"ref":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","tf":0.0007067137809187279}}}}}}}}}}}}}}}}}}}}},"q":{"docs":{},"_":{"docs":{},"d":{"docs":{},"(":{"docs":{},"\\":{"docs":{},"t":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"{":{"docs":{},"x":{"docs":{},"}":{"docs":{},"|":{"docs":{},"x":{"docs":{},")":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}}}}}}}}}}}},".":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}}}},"u":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}},"~":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0013166556945358788}}},"去":{"docs":{},"画":{"docs":{},"出":{"docs":{},"我":{"docs":{},"们":{"docs":{},"的":{"docs":{},"滤":{"docs":{},"波":{"docs":{},"器":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"_":{"docs":{},"i":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"看":{"docs":{},"p":{"docs":{},"l":{"docs":{},"o":{"docs":{},"t":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"自":{"docs":{},"动":{"docs":{},"编":{"docs":{},"码":{"docs":{},"机":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}},"由":{"docs":{},"能":{"docs":{},"量":{"docs":{},"为":{"docs":{},"如":{"docs":{},"下":{"docs":{},"形":{"docs":{},"式":{"docs":{},"：":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}},"重":{"docs":{},"建":{"docs":{},"误":{"docs":{},"差":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"许":{"docs":{},"多":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"度":{"docs":{},"量":{"docs":{},"，":{"docs":{},"基":{"docs":{},"于":{"docs":{},"输":{"docs":{},"入":{"docs":{},"的":{"docs":{},"分":{"docs":{},"布":{"docs":{},"假":{"docs":{},"设":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"传":{"docs":{},"统":{"docs":{},"的":{"docs":{},"平":{"docs":{},"方":{"docs":{},"误":{"docs":{},"差":{"docs":{},"是":{"docs":{},"l":{"docs":{},"(":{"docs":{},"x":{"docs":{},",":{"docs":{},"z":{"docs":{},")":{"docs":{},"=":{"docs":{},"|":{"docs":{},"|":{"docs":{},"x":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"这":{"docs":{},"里":{"docs":{},"撇":{"docs":{},"号":{"docs":{},"不":{"docs":{},"代":{"docs":{},"表":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"转":{"docs":{},"置":{"docs":{},"）":{"docs":{},"当":{"docs":{},"y":{"docs":{},"被":{"docs":{},"给":{"docs":{},"定":{"docs":{},"时":{"docs":{},"，":{"docs":{},"z":{"docs":{},"被":{"docs":{},"看":{"docs":{},"着":{"docs":{},"是":{"docs":{},"对":{"docs":{},"x":{"docs":{},"的":{"docs":{},"预":{"docs":{},"测":{"docs":{},"。":{"docs":{},"可":{"docs":{},"选":{"docs":{},"的":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"权":{"docs":{},"重":{"docs":{},"矩":{"docs":{},"阵":{"docs":{},"w":{"docs":{},"‘":{"docs":{},"的":{"docs":{},"逆":{"docs":{},"映":{"docs":{},"射":{"docs":{},"可":{"docs":{},"用":{"docs":{},"被":{"docs":{},"约":{"docs":{},"束":{"docs":{},"为":{"docs":{},"正":{"docs":{},"向":{"docs":{},"映":{"docs":{},"射":{"docs":{},"的":{"docs":{},"转":{"docs":{},"置":{"docs":{},"：":{"docs":{},"，":{"docs":{},"这":{"docs":{},"被":{"docs":{},"称":{"docs":{},"为":{"docs":{},"捆":{"docs":{},"绑":{"docs":{},"权":{"docs":{},"重":{"docs":{},"。":{"docs":{},"这":{"docs":{},"个":{"docs":{},"模":{"docs":{},"型":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"参":{"docs":{},"数":{"docs":{},"（":{"docs":{},"w":{"docs":{},"，":{"docs":{},"b":{"docs":{},"，":{"docs":{},"b":{"docs":{},"‘":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"不":{"docs":{},"使":{"docs":{},"用":{"docs":{},"捆":{"docs":{},"绑":{"docs":{},"权":{"docs":{},"重":{"docs":{},"w":{"docs":{},"’":{"docs":{},"）":{"docs":{},"通":{"docs":{},"过":{"docs":{},"优":{"docs":{},"化":{"docs":{},"最":{"docs":{},"小":{"docs":{},"平":{"docs":{},"均":{"docs":{},"重":{"docs":{},"构":{"docs":{},"误":{"docs":{},"差":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"训":{"docs":{},"练":{"docs":{},"。":{"docs":{"5_Denoising_Autoencoders_降噪自动编码.html":{"ref":"5_Denoising_Autoencoders_降噪自动编码.html","tf":0.0006583278472679394}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"以":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"（":{"docs":{},"f":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"）":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"创":{"docs":{},"建":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"方":{"docs":{},"法":{"docs":{},"用":{"docs":{},"于":{"docs":{},"在":{"docs":{},"微":{"docs":{},"调":{"docs":{},"（":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"默":{"docs":{},"认":{"docs":{},"情":{"docs":{},"况":{"docs":{},"下":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"代":{"docs":{},"码":{"docs":{},"以":{"docs":{},"块":{"docs":{},"数":{"docs":{},"目":{"docs":{},"为":{"1":{"docs":{},"，":{"docs":{},"每":{"docs":{},"一":{"docs":{},"层":{"docs":{},"循":{"docs":{},"环":{"1":{"5":{"docs":{},"次":{"docs":{},"来":{"docs":{},"进":{"docs":{},"行":{"docs":{},"预":{"docs":{},"训":{"docs":{},"练":{"docs":{},"预":{"docs":{},"训":{"docs":{},"练":{"docs":{},"。":{"docs":{},"错":{"docs":{},"差":{"docs":{},"等":{"docs":{},"级":{"docs":{},"（":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"u":{"docs":{},"p":{"docs":{},"t":{"docs":{"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"ref":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","tf":0.0010940919037199124}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"主":{"docs":{},"循":{"docs":{},"环":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"二":{"docs":{},"进":{"docs":{},"制":{"docs":{},"单":{"docs":{},"元":{"docs":{},"r":{"docs":{},"b":{"docs":{},"m":{"docs":{},"s":{"docs":{},"的":{"docs":{},"自":{"docs":{},"由":{"docs":{},"能":{"docs":{},"力":{"docs":{},"为":{"docs":{},"：":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}},"的":{"docs":{},"r":{"docs":{},"b":{"docs":{},"m":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}},"更":{"docs":{},"新":{"docs":{},"公":{"docs":{},"式":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}},"代":{"docs":{},"码":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}},"似":{"docs":{},"然":{"docs":{},"估":{"docs":{},"计":{"docs":{},"的":{"docs":{},"替":{"docs":{},"代":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}},"分":{"docs":{},"布":{"docs":{},"，":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"的":{"docs":{},"对":{"docs":{},"其":{"docs":{},"分":{"docs":{},"量":{"docs":{},"依":{"docs":{},"次":{"docs":{},"采":{"docs":{},"样":{"docs":{},"，":{"docs":{},"随":{"docs":{},"着":{"docs":{},"采":{"docs":{},"样":{"docs":{},"次":{"docs":{},"数":{"docs":{},"的":{"docs":{},"增":{"docs":{},"加":{"docs":{},"，":{"docs":{},"随":{"docs":{},"机":{"docs":{},"变":{"docs":{},"量":{"docs":{},"[":{"docs":{},"x":{"1":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},",":{"docs":{},"x":{"2":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},",":{"docs":{},"…":{"docs":{},",":{"docs":{},"x":{"docs":{},"k":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"]":{"docs":{},"的":{"docs":{},"概":{"docs":{},"率":{"docs":{},"分":{"docs":{},"布":{"docs":{},"将":{"docs":{},"以":{"docs":{},"n":{"docs":{},"的":{"docs":{},"几":{"docs":{},"何":{"docs":{},"级":{"docs":{},"数":{"docs":{},"的":{"docs":{},"速":{"docs":{},"度":{"docs":{},"收":{"docs":{},"敛":{"docs":{},"于":{"docs":{},"x":{"docs":{},"的":{"docs":{},"联":{"docs":{},"合":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"包":{"docs":{},"含":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"单":{"docs":{},"元":{"docs":{},"的":{"docs":{},"e":{"docs":{},"b":{"docs":{},"m":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}},"同":{"docs":{},"时":{"docs":{},"我":{"docs":{},"们":{"docs":{},"受":{"docs":{},"物":{"docs":{},"理":{"docs":{},"启":{"docs":{},"发":{"docs":{},"定":{"docs":{},"义":{"docs":{},"了":{"docs":{},"自":{"docs":{},"由":{"docs":{},"能":{"docs":{},"量":{"docs":{},"（":{"docs":{},"f":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}},"持":{"docs":{},"续":{"docs":{},"的":{"docs":{},"对":{"docs":{},"比":{"docs":{},"散":{"docs":{},"度":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}},"t":{"docs":{},"i":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"0":{"8":{"docs":{},"使":{"docs":{},"用":{"docs":{},"了":{"docs":{},"另":{"docs":{},"外":{"docs":{},"一":{"docs":{},"种":{"docs":{},"近":{"docs":{},"似":{"docs":{},"方":{"docs":{},"法":{"docs":{},"来":{"docs":{},"从":{"docs":{},"p":{"docs":{},"(":{"docs":{},"v":{"docs":{},",":{"docs":{},"h":{"docs":{},")":{"docs":{},"中":{"docs":{},"采":{"docs":{},"样":{"docs":{},"。":{"docs":{},"它":{"docs":{},"建":{"docs":{},"立":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"持":{"docs":{},"续":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"单":{"docs":{},"马":{"docs":{},"尔":{"docs":{},"可":{"docs":{},"夫":{"docs":{},"链":{"docs":{},"上":{"docs":{},"（":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"不":{"docs":{},"是":{"docs":{},"对":{"docs":{},"每":{"docs":{},"个":{"docs":{},"可":{"docs":{},"视":{"docs":{},"样":{"docs":{},"例":{"docs":{},"都":{"docs":{},"重":{"docs":{},"启":{"docs":{},"链":{"docs":{},"）":{"docs":{},"。":{"docs":{},"对":{"docs":{},"每":{"docs":{},"一":{"docs":{},"次":{"docs":{},"参":{"docs":{},"数":{"docs":{},"更":{"docs":{},"新":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"通":{"docs":{},"过":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"运":{"docs":{},"行":{"docs":{},"这":{"docs":{},"个":{"docs":{},"链":{"docs":{},"k":{"docs":{},"步":{"docs":{},"来":{"docs":{},"获":{"docs":{},"得":{"docs":{},"新":{"docs":{},"的":{"docs":{},"样":{"docs":{},"本":{"docs":{},"。":{"docs":{},"然":{"docs":{},"后":{"docs":{},"保":{"docs":{},"存":{"docs":{},"链":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"以":{"docs":{},"便":{"docs":{},"后":{"docs":{},"续":{"docs":{},"的":{"docs":{},"更":{"docs":{},"新":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}}}},"推":{"docs":{},"倒":{"docs":{},"公":{"docs":{},"式":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}},"概":{"docs":{},"率":{"docs":{},"分":{"docs":{},"布":{"docs":{},"p":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},"。":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{},"未":{"docs":{},"知":{"docs":{},"联":{"docs":{},"合":{"docs":{},"概":{"docs":{},"率":{"docs":{},"分":{"docs":{},"布":{"docs":{},"的":{"docs":{},"条":{"docs":{},"件":{"docs":{},"下":{"docs":{},"对":{"docs":{},"其":{"docs":{},"进":{"docs":{},"行":{"docs":{},"采":{"docs":{},"样":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"波":{"docs":{},"尔":{"docs":{},"兹":{"docs":{},"曼":{"docs":{},"机":{"docs":{},"是":{"docs":{},"对":{"docs":{},"数":{"docs":{},"线":{"docs":{},"性":{"docs":{},"马":{"docs":{},"尔":{"docs":{},"可":{"docs":{},"夫":{"docs":{},"随":{"docs":{},"机":{"docs":{},"场":{"docs":{},"（":{"docs":{},"m":{"docs":{},"r":{"docs":{},"f":{"docs":{},"）":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"形":{"docs":{},"式":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"这":{"docs":{},"个":{"docs":{},"能":{"docs":{},"量":{"docs":{},"函":{"docs":{},"数":{"docs":{},"在":{"docs":{},"它":{"docs":{},"的":{"docs":{},"自":{"docs":{},"由":{"docs":{},"参":{"docs":{},"数":{"docs":{},"下":{"docs":{},"是":{"docs":{},"线":{"docs":{},"性":{"docs":{},"的":{"docs":{},"。":{"docs":{},"为":{"docs":{},"了":{"docs":{},"使":{"docs":{},"得":{"docs":{},"它":{"docs":{},"们":{"docs":{},"能":{"docs":{},"更":{"docs":{},"强":{"docs":{},"力":{"docs":{},"的":{"docs":{},"表":{"docs":{},"达":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"分":{"docs":{},"布":{"docs":{},"（":{"docs":{},"从":{"docs":{},"受":{"docs":{},"限":{"docs":{},"的":{"docs":{},"参":{"docs":{},"数":{"docs":{},"设":{"docs":{},"定":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"非":{"docs":{},"参":{"docs":{},"数":{"docs":{},"设":{"docs":{},"定":{"docs":{},"）":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"认":{"docs":{},"为":{"docs":{},"一":{"docs":{},"些":{"docs":{},"变":{"docs":{},"量":{"docs":{},"是":{"docs":{},"不":{"docs":{},"可":{"docs":{},"见":{"docs":{},"的":{"docs":{},"（":{"docs":{},"被":{"docs":{},"称":{"docs":{},"为":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"）":{"docs":{},"。":{"docs":{},"通":{"docs":{},"过":{"docs":{},"拥":{"docs":{},"有":{"docs":{},"更":{"docs":{},"多":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"变":{"docs":{},"量":{"docs":{},"（":{"docs":{},"也":{"docs":{},"称":{"docs":{},"之":{"docs":{},"为":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"单":{"docs":{},"元":{"docs":{},"）":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"增":{"docs":{},"加":{"docs":{},"波":{"docs":{},"尔":{"docs":{},"兹":{"docs":{},"曼":{"docs":{},"机":{"docs":{},"的":{"docs":{},"模":{"docs":{},"型":{"docs":{},"容":{"docs":{},"量":{"docs":{},"。":{"docs":{},"受":{"docs":{},"限":{"docs":{},"波":{"docs":{},"尔":{"docs":{},"兹":{"docs":{},"曼":{"docs":{},"机":{"docs":{},"限":{"docs":{},"制":{"docs":{},"波":{"docs":{},"尔":{"docs":{},"兹":{"docs":{},"曼":{"docs":{},"机":{"docs":{},"可":{"docs":{},"视":{"docs":{},"层":{"docs":{},"和":{"docs":{},"隐":{"docs":{},"藏":{"docs":{},"层":{"docs":{},"的":{"docs":{},"层":{"docs":{},"内":{"docs":{},"连":{"docs":{},"接":{"docs":{},"。":{"docs":{},"r":{"docs":{},"b":{"docs":{},"m":{"docs":{},"模":{"docs":{},"型":{"docs":{},"可":{"docs":{},"以":{"docs":{},"由":{"docs":{},"下":{"docs":{},"图":{"docs":{},"描":{"docs":{},"述":{"docs":{},"：":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"结":{"docs":{},"果":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}},"而":{"docs":{},"下":{"docs":{},"面":{"docs":{},"的":{"docs":{},"几":{"docs":{},"个":{"docs":{},"选":{"docs":{},"项":{"docs":{},"对":{"docs":{},"用":{"docs":{},"户":{"docs":{},"是":{"docs":{},"有":{"docs":{},"用":{"docs":{},"的":{"docs":{},"。":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}}}}}}}}}}}}},"进":{"docs":{},"展":{"docs":{},"跟":{"docs":{},"踪":{"docs":{"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"ref":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","tf":0.0010604453870625664}}}}}}},"length":3782},"corpusTokens":["!=","![loss_function](/images/2_defining_a_loss_function_1.png)","![probality](/images/2_the_model_1.png)","![y_prediction](/images/2_the_model_2.png)","\"\"","\"\"\"","\"\"\"comput","\"\"\"denois","\"\"\"initi","\"\"\"multi","\"\"\"pool","\"\"\"restrict","\"\"\"return","\"\"\"stack","\"\"\"thi","\"..\",","\"data\",","\"minibatch\",","\"num","\"pattern","\"simulate\"","#","##","############","#############","###############","######################","#########################","#cols)","#input","#numpy.ndarray","#target","#the","#train_set,","#witch","%","%,with","%.1fs'","%.2fm'","%d,","%f","%i,","%s'","&","&=","'","'''","'''gener","'''thi","',","'...","'__main__':","'download","'http://www.iro.umontreal.ca/~lisa/deep/data/mnist/mnist.pkl.gz'","'int32')","'invals[0,","'invals[1,","'mnist.pkl.gz':","'output[0,","'output[1,","'pre","'rb')","'restructedtext","'train","'wb')","'with","'x')","'x'))","'x',","'y","'y_pred',","(","(#rows,","('the","('train","('y',","((end_tim","(1","(1)","(1,","(12","(12,","(1d","(2)","(2,","(2,)","(20,","(24,","(24/2,","(28","(28,","(3)","(4)","(4,","(500,","(8,","(8/2,","(\\theta=\\{w,b\\},","(``shared_y``","(a","(a2,","(a3,","(a4,","(across","(among","(and","(axbxc","(batch","(batch_size,","(call","(classifier.b,","(cost,","(da)","(defin","(end_tim","(epoch","(factor","(fan_in","(filter","(filter_shape[0]","(for","(here","(i,","(i.e","(if","(index","(l1","(n","(n_examples,","(n_hidden","(n_in","(n_in,","(n_in,n_out)","(n_out,),","(n_out,).","(nkerns[0],","(not","(number","(one","(param,","(param_i,","(params[i],","(pooling)","(pretraining_tim","(rbm)","(scalar)","(sda)","(sda)）","(see","(self.hiddenlayer.w","(self.logregressionlayer.w","(share","(sotr","(symbolically)","(test_set_x,","(the","(train_set_x,","(usual","(valid_set_x,","(variable,","(vector))","(w,b)","(we","(when","(x","(x_batch,","(x_batch,y_batch)","(x_i,y_i)",")","),","):","*","**","****","*=","+",",",".","..","...","...,",".2,",".3]",".5,","/","/=","0","0)","0,","0.","0.01936696","0.04995346]","0.05336255","0.1","0.10233443","0.1374747","0.13927635","0.14672857","0.1]","0.21162812","0.26554666","0.39676747]","0.39767684]]","0.41405599","0.41417927","0.49157316]","0.51488911","0.53589641","0.57411761","0.58655504]","0.58930554","0.66379465","0.67883553","0.6852195","0.69440016","0.69975836]","0.72032449","0.80739129","0.87811744]]","0.90340192","0.910000","0.920000","0.930000","0.94459476","0.995","01","01]","01]]","02","02]","04","0:","0d","0s","1","1)","1)))","1)*k_l。因此，cnns中滤波器的数量通常比mlps中隐单元的数量小很多，通常是基于特征映射的尺寸（输入图像的尺寸和滤波器的形状）。","1).","1);","1)个特征映射和m*n个像素点（例如，位置数乘以特征映射数），然后第l层有k(l)个滤波器，尺寸为mn。那么计算一个特征映射（在(m","1)的计算量。然后总共要计算k_l次。如果不是所有的特征只与前一层的所有特征相连，那么事情就变得更加复杂啦。","1,","1,y[n","1.0","1.14374817e","1.40386939e","1.46755891e","1.650000","1.690000","1.86260211e","1.936983","1.98101489e","1.入门","1/fan","10),","1000,","10000","1000],","12","12)","12),","12,","15500,with","16400,with","17800,with","1]","1])","1],","1].output","1].output,","1]]]","1d","1s","1s,","1xcx1xaxb","1xn)","1个随机变量。","1之间）。","1层中2*2的感受野计算而言（相同颜色区域）。注意，感受野包含了所有的4个输入特征映射。w_0，w_1，h_0，h_1因此都是3维权值张量。第一个维度指定输入特征映射，剩下两个表示参考坐标。","1层包含4个特征映射，第m层包含2个特征映射（h_0和h_1）。h_0和h_1中红蓝色区域的像素（输出值）由第m","1层包含k(l","1层时）如何转换你的数据。换句话说，你通过训练你的第一个da层来开始。一旦它被训练，你就可以为每一个数据节点计算隐单元的值然后将它们储存为一个新的数据集，以便你在第2层中训练da。一旦你训练完第2层的da，你以相同的方式计算第三层的数据。现在你可以明白，在这个时候，这个das被分开训练了，它们仅仅提供（一对一的）对输入的非线性转换。一旦所有的das被训练，你就可以开始微调整个模型了。","1层特征映射的数目，滤波器高度，滤波器宽度]。","1层的l个特征映射的(i,j)参考坐标的连接权值。","1损失函数","1损失函数不可微分，在大型模型中对它优化会造成巨大开销。因此我们通过最大化给定数据标签的似然函数来训练模型。","2","2)","2)):","2).reshape(1,","2).sum()","2).swapaxes(1,","2);","2,","2.04452250e","2.66ghz","2.73875932e","2.逻辑回归进行mnist分类","20,","2070000,","24)","24/2)","256.","2600k","28","28)","28))","28),","28*28","28,","285上，我们获得了如下：","2d","3","3);","3,","3.00","3.02332573e","3.13424178e","3.40ghz上，我们使用floatx=float32，获得如下的输出：","3.40ghz的机器上，这个代码跑了10.3","3.45560727e","3.96767474e","3.多层感知机","30))","30).","30,","32.52m","380.28m","3d","4","4)","4),","4*sqrt(6./(n_hidden+n_visible))","4*sqrt(6./(n_hidden+n_visible))th","4*sqrt(6./(n_visible+n_hidden))","4,","4.*sqrt(6./(n_hidden+n_visible))","4.*sqrt(6./(n_visible+n_hidden))","4.17022005e","4.17304802e","4.19194514e","4.3.2","4.7节讲述了网络中每个参数学习速率选择的方法，然后基于分类错误率自适应的选择它们。","4.卷积神经网络","40),","40,","46.76m","480上，获得如下：","4d","5","5)","5),","5+1","5+1)","5+1,","5,","5.38816734e","5.58689828e","5.降噪自动编码","50","5000","500],","516)","5，这是本教程需要着重讲解的。","6./(n_in+n_hidden))","6.70467510e","6.85219500e","6.92322616e","6.层叠降噪自动编码机","60.))","639,","639x516","6th","7.20324493e","7.489583","7.500000","7.510417","7.受限波尔兹曼机","72,","73,","74","8)","8.00744569e","8.76389152e","8.78117436e","8/2)","800)","83/83,","9","9)","9,","9.23385948e","9.68261576e","97.34m",":",":,",":]",":])",":math:`b`.",":math:`w`",":param",":paran",":type",";","=","='b')","='w')","==","=\\n","=\\n',",">",">>",">>>","@","[","[(a1,","[(classifier.w,","[(params,","[(train_set_x,","[.1,","[0,1,...,k],","[0,1,2,...","[0,1,2,...,len(y)].","[[","[]","[a,b,...,k]","[a1,","[b1,","[index],","[int]","[lp[0,y[0]],","[mini]batch","[pre_sigmoid_activation,","[pre_sigmoid_h1,","[pre_sigmoid_v1,","[self.w,","[t.grad(cost,","[test_score_i(i)","[valid_score_i(i)","[x_k","[xavier10]","\\\\","\\ell","\\frac","\\frac{1}{|\\mathcal{d}|}","\\log","\\log(","\\log(p(y=y^{(i)}|x^{(i)},","\\mathcal{d})","\\mathcal{l}","\\sum_{i=0}^{|\\mathcal{d}|}","\\tilde{x}","]","],","__docformat__","__init__(","__init__(self,","__name__","``1","``corruption_level``","``coruption_level``","``dimshuffle``","``floatx``","``hiddenlayer``","``logisticregression``","``shared_y``","`b_prime`","`da`","`fn`","`i+1`.","`i`","`index`","`initial_w`","`rng`","`test`","`train_model`","`train`","`train`,","`updates`","`valid`,","`validate`","`w_prime`","`w_values`","`w`","a2,","a3,","a4]","abs(self.hiddenlayer.w).sum()","abs(self.logregressionlayer.w).sum()","activ","activation(lin_output)","activation:","activation=t.nnet.sigmoid)","activation=t.tanh","activation=t.tanh):","activations.","actual","ad","add","afterward","ai的第五节。在这里，我们将不使用这些等式，而是通过theano的t.grad来获取梯度。","al.,2008","algorithm","alloc","allow","along","alway","amount","anoth","append","appli","application,","architectur","architecture;","argmax","argmax_i","arguabl","argument","arithmet","around","array","array),","arrays;","artifici","as:","asarray","assert","assum","auto","autoencod","autoencoders(da)）","autoencoders(sda))","autoencoders)","autoencoders)是经典自动编码机的扩展。它在vincent08中作为深度网络的一个构建块被介绍。我们通过简短的自动编码机来开始本教程。","autoencoder，sda）是层叠自动编码机（bengio07）的一个扩展，在vincent08中被介绍。","automat","averag","ax1xb","axb","axbxc","axis=1","axis=1)","b","b'","b')","b(i)：向量内的（i）点的数据符号和缩略语表","b)","b.dimshuffle('x',","b1),","b2),","b2,","b3),","b3,","b4)]","b4]","b=none,","b^{(1)}","b^{(2)}","b_i}}","b_j}}","b_prime","b_shp","b_valu","back","backpro中阅读，这是一个好的综述。这里，我们将总结下我们的代码中用到的几个重要的方法和技术。","bais","base","basic","batch","batch,","batch_begin","batch_end","batch_end]","batch_index","batch_siz","batch_size):","batch_size,","batch_size:","batch_size:(index","batch_size=20,","batch_size=600):","batch_size=batch_size)","batch_size]","batch_size],","batch_size]})","batch的大小，输入特征映射的数目，图像高度，图像宽度]。","be","becom","befor","begin","behaviour","belif","belong","below","below)的特征映射的集合。","best","best_it","best_param","best_validation_loss","better","between","bhid","bhid:","bhid=none,","bhid=sigmoid_layer.b)","bia","bias","bias.","bishop,","boltzmann","borrow=borrow)","borrow=tru","borrow=true)","borrow=true):","broadcast","broadcastable,","broadcastable;","build","build_finetune_functions(self,","bvi","bvis:","bvis=non","bvis=none):","bx1xa","by:","b：小些字母表示向量（除非特殊说明）","c","c.append(pretraining_fns[i](index=batch_index,","c.append(train_da(batch_index))","call","carlo","case","cast","cd","cd,","cd.","chain","chain,","chain.","chain:","chain_end","chain_start","chain_start],","check","chines","christoph","class","class)","class).","classif","classifi","classification.","classifier.","classifier.b","classifier.l1","classifier.l2_sqr","classifier.negative_log_likelihood(y)","classifier.params]","classifier.w","clock","clone","code","code.","coder","column","compar","compat","compil","complet","complete.","compon","compression)，它不可能对所有的x有好的压缩。优化可以使得训练样本有好的压缩，同时也希望对别的输入有好的压缩，但是不是对于任意输入。这里有一个对自动编码机的概括定义：它对于与训练样本有相似分布的测试样本有较低的重建误差，但对于随机的输入会有较高的重构误差。","comput","computations,","connect","connected,","consid","consider_constant=[chain_end])","construct","constructor","constructor.","contain","content","conv","conv.conv2d(","conv.conv2d(input,","conv_out","convert","convolut","convolutional_mlp.pi","convolv","convop","copi","core(tm)","core(tm)2","correct","correspond","corrupt","corruption=corruption_levels[i],","corruption_level","corruption_level)","corruption_level):","corruption_level,","corruption_level=0.,","corruption_level``","corruption_levels:","corruption_levels=[0.1,","cost","cost,","cpickl","cpickle,","cpickle.dump(u.get_value(borrow=true),","cpickle.dump(v.get_value(borrow=true),","cpickle.dump(w.get_value(borrow=true),","cpickle.load(f)","cpu","cpu，gotoblas下得出。","creat","cross","current","cxaxb","d","d'","d_h(i)：第i层个隐层的输入单元数目","d_loss_wrt_param","d_loss_wrt_params)]","da","da(","da(numpy_rng=numpy_rng,","da(numpy_rng=rng,","da(object):","da,","da.get_cost_updates(","da.get_cost_updates(corruption_level,","da.get_cost_updates(corruption_level=0.2,","da_lay","das.","data","data'","data,","data_dir","data_dir,","data_fil","data_i","data_x,","data_xi","datapoint","datapoint;","datapoints,","dataset","dataset)","dataset:","dataset='mnist.pkl.gz',","datasets,","datasets.","datasets:","datasets;","datasets[0]","datasets[1]","datasets[2]","datatyp","dbn","dbn,","deal","dealt","decay）”。","decid","declar","decreas","deep","deep.","deeplearn","def","default","default.","default=0.1)","default=0.2),","defin","demonstr","denois","depend","descent","descent.","describ","descript","destroy","detail","details)","details.","determin","develop","dictionari","dictionary.","differ","digit","dimens","dimension","dimension:","dimensions.","dimshuffle('x')","dimshuffle('x',","dimshuffle(0,","dimshuffle(1,","dimshuffle(2,","directory.","distanc","distribution.","documentation.","doesn't","done","done_loop","down","download","downsampl","downsample.max_pool_2d(","downsample.max_pool_2d(input,","downward","draw","drawn","ds=poolsize,","dtype","dtype='float64')","dtype=input.dtype),","dtype=theano.config.floatx","dtype=theano.config.floatx)","dtype=theano.config.floatx))","dtype=theano.config.floatx),","due","duo","dure","d：输入维度的数目","e5430","e8400","e^{w_j","each","earli","effici","element","else:","embed","en'","encod","encoders，在hinton06中被用以构建一个深度自动编码机)。","end","end_tim","energi","energy）：","enforc","entir","entri","entropi","entropy)可以被表示如下：","epoch","epoch),","epoch,","epoch/minute然后花了828","epochs,","epochs/sec","epochs/sec在这个实例中我们定义为batch的大小为600。","epochs/sec然后跑75","epochs得到了1.65%的测试错误率。","epochs，得到测试错误率为7.489%。在gpu上为10.0","equat","error","error.","errors(self,","et","etc.","everytim","exactli","exampl","example,","example.","examples)","examples,","examples:","expect","express","expression)","f","f(img_)","f(invals)[0,","f(invals)[1,","f(params)","f(params,","f(x)","f.close()","factor","fals","false:","false:'","famou","fan_in","fan_out","fan_out))","featur","feed","feedforward","few","file","filter","filter_shape,","filter_shape:","filter_shape=(nkerns[0],","filter_shape=(nkerns[1],","filter_shape=filter_shape,","filter_shape[1]","filtered_img","filters)，所以我们强烈建议读者去了解它。当然，也在pil(python","filters,","filters=self.w,","fine","finetun","finetunin","finetuning,","finit","first","fit","float","floatx","floatx(默认为float64)。假如你想要在你的gpu上跑你的代码，你也需要看gpu。","fn","form","format","format:","found","free","free_energy(self,","from:","fulli","function","function)","function,","function.","functions'","functions,","further","g(","g_b","g_b)]","g_w","g_w),","gener","generator;","get","get_corrupted_input(self,","get_cost_updates(self,","get_hidden_values(self,","get_reconstructed_input(self,","ghz上，这个代码的速度是1.936","gibb","gibbs_hvh(self,","gibbs_hvh表示从隐藏单元中开始gibbs采样的步骤。这个函数再实现cd和pcd更新中是非常有用的。","gibbs_vhv(self,","gibbs_vhv表示从可视单元中开始的gibbs采样的步骤。我们将可以看到这对于从rbm中采样是非常有用的。","git","git://github.com/lisa","give","given","given,","givens={","go","good","gparam","gparam)","gparam))","gparam,","gparams)","gparams):","gpu","gpu).","grad","grad_i","grad_i)","gradient","gradient)","grads)","grads[i])","graph","graph.","gtx","gzip","gzip,","gzip.open('mnist.pkl.gz',","gzip.open(dataset,","h0_sample):","h1_mean","h1_mean,","h1_sampl","h1_sample,","h1_sample]","hack","happens,","hbia","hbias:","hbias=none,","height","height,","here","here,","hid):","hidden","hidden):","hidden_layers_sizes=[1000,","hidden_layers_sizes=[500,","hidden_layers_sizes[i","hidden_term","hiddenlay","hiddenlayer(","hiddenlayer(object):","hiddenlayer(rng=numpy_rng,","high=.5,","high=1.0","high=4","high=numpy.sqrt(6.","high=w_bound,","highest_protocol","hold","holders,","http://deeplearning.net/software/theano/library/scan.html","http://www.iro.umontreal.ca/~lisa/deep/data/mnist/mnist.pkl.gz","hua,","hybrid","hyper","hyperplanes,","i'th","i)，其中","i.e.","i.e.,","i7","idea","ident","ignore_bord","ignore_border=false)","ignore_border=tru","ignore_border=true)","imag","image)","image.fromarray(tile_raster_images(x=da.w.get_value(borrow=true).t,","image.open(open('/images/3wolfmoon.jpg'))","image.save('filters_corruption_30.png')","image_shap","image_shape,","image_shape:","image_shape=(batch_size,","image_shape=image_shap","image_shape[1]","images).","images.","imagin","img","img.swapaxes(0,","img_","img_shape=(28,","implement","import","important:","improv","improvement_threshold","in,","in]的均匀分布中随机取样，fan","index","index,","index.","indexes.","individually,","infer","infinit","info","inform","initi","initial_w","input","input):","input,","input.","input:","input=conv_out,","input=input,","input=layer0.output,","input=layer0_input,","input=layer2_input,","input=layer_input,","input=none,","input=self.hiddenlayer.output,","input=self.sigmoid_layers[","input=x,","input_s","inputs=[","inputs=[index],","insert","instanti","instead","int","int.","int64","integ","intermedi","intern","introduc","inval","invals[0,","invals[1,","invert","in是一个隐单元的输入数。对mlp，它是下一层单元的数目。对cnns，我不得不需要去考虑到输入特征映射的数目和感受野的大小。","in是由感受野和输入特征映射数决定的。","issu","iter","iterate,","i表示集合s中除si的n","j","k","k/pcd","k:","k=1):","keep","k和pcd","k的更新的象征性梯度。","k）","l","l(x,z)","l1","l1/l2正则化","l1/l2正则化就是在损失函数中添加额外的项，用以惩罚一定的参数结构。对于l2正则化，又被称为“权制递减（weight","l1_reg","l1_reg:","l1_reg=0.00,","l2","l2);","l2_reg","l2_reg:","l2_reg=0.0001,","l2_sqr","lab,","lab/deeplearningtutorials.git","label","labels,","lambda_1","lambda_2","larg","larger","last","latent","later,","layer","layer,","layer.","layer0","layer0.param","layer0_input","layer1","layer1.output.flatten(2)","layer1.param","layer2","layer2.param","layer2_input","layer3","layer3.errors(y),","layer3.negative_log_likelihood(y)","layer3.param","layer:","layer;","layer_input","layers.","lead","learn","learning\"","learning.","learning_r","learning_rate)","learning_rate):","learning_rate:","learning_rate=learning_r","learning_rate=learning_rate)","len(hidden_layers_sizes)","lenetconvpoollay","lenetconvpoollayer(","lenetconvpoollayer(object):","lenet）","length","length,","less","let","level.","level）在第一层被设为0.1，第二层被设为0.2，第三层被设为0.3。预训练的学习速率为0.001，微调学习速率为0.1。预训练花了585.01分钟，平均每层13分钟。微调在36次迭代，444.2分钟后完成。平均每层迭代12.34分钟。最后的验证得分为1.39%，测试得分为1.3%。所有的结果都是在intel","library)的帮助下，下面行的代码将把滤波器保存为图像：","library,","lie","lifeng","likeihood,pl）更加简于计算，因为它假设所有的比特都是相互独立的，因此有：","likelihood","lin_output","linear","lisa","list","littl","load","load_data","load_data(dataset)","load_data(dataset):","log","logist","logistic_sgd","logisticregress","logisticregression(","logisticregression(input=layer2.output,","logisticregression(input=x,","logisticregression(object):","logisticregression,","longer","look","loop","loss","loss,","low=","lower","lp)","lp[1,y[1]],","lp[2,y[2]],","lp[n","lp[t.arange(y.shape[0]),y]","lr,","lr:","lr=0.1,","lr=pretrain_lr))","l：标签的数目","m","m)(n","m.","m[0,a],","m[1,b],","m[k,k]","machin","machines(rbm)）","machines）","machines，在后面的章节中讨论），还有降噪自动编码机，在后面讨论。","made","make","mani","manual","map","maps,","map）。梯度下降算法在小改动后可以学习这种共享参数。这个被共享权值的梯度就是被共享的参数的梯度的简单求和。","math::","mathematically,","matric","matrix","matrix)","maxim","maxpool","maxpool_shap","maxpool_shape,","mean","membership","memori","method","min(","min(n_train_batches,","mini","minibatch","minibatch)","minibatch.","minibatches,","minim","minutes'","miscellan","mistak","mlp","mlp(","mlp(object):","mlp,","mlp.","mlp.pi","mlp:","mnist","mnist)","mnist.","mnist数据集(mnist.pkl.gz)","mnist是一个包含60000个训练样例和10000个测试样例的手写数字图像的数据集。在许多论文，包括本教程，都将60000个训练样例分为50000个样例的训练集和10000个样例的验证集（为了超参数，例如学习率、模型尺寸等等）。所有的数字图像都被归一化和中心化为2828的像素，256位图的灰度图。","model","model'","model,","models）","monitoring_cost","monitoring_cost,","mont","montreal","more","msgd","msgd(x_batch,","much","multilay","multipl","music","n","n)","n)mn*k_(l","n)个像素位置应用每个mn大小的滤波器）将消耗(m","n=1,","n_epochs:","n_epochs=1000,","n_filters,","n_hidden","n_hidden)","n_hidden)),","n_hidden,","n_hidden:","n_hidden=500","n_hidden=500)","n_hidden=500):","n_hidden=500,","n_hidden=hidden_layers_sizes[i],","n_hidden=n_hidden,","n_in","n_in)","n_in,","n_in:","n_in=28","n_in=500,","n_in=hidden_layers_sizes[","n_in=input_size,","n_in=n_hidden,","n_in=n_in,","n_in=nkerns[1]","n_ins:","n_ins=28","n_ins=784,","n_layers_sizes:","n_out","n_out)","n_out)),","n_out),","n_out):","n_out,","n_out:","n_out=10","n_out=10)","n_out=500,","n_out=hidden_layers_sizes[i],","n_out=n_hidden,","n_out=n_out","n_outs:","n_outs=10","n_outs=10,","n_steps=k","n_test_batch","n_train_batch","n_valid_batch","n_visibl","n_visible)),","n_visible,","n_visible:","n_visible=28","n_visible=784,","n_visible=input_size,","name","name='b',","name='bhid')","name='bvis')","name='hbias',","name='test'","name='train'","name='valid'","name='vbias',","name='w')","name='w',","need","neg","negative_log_likelihood(self,","net","network","network;","networks(lenet)）","neural","new","new_path","newli","nh_means,","nh_sampl","nh_samples[","nkerns[0],","nkerns[1]","nkerns[1],","nll","nll,","nll：负对数似然函数","non","none","none,","none:","nonlinear","norm","norm'","normal","note","note:","notimplementederror()","now","num","num_pixels)","number","numpi","numpy'","numpy.asarray(","numpy.asarray(img,","numpy.asarray(numpy_rng.uniform(","numpy.inf","numpy.mean(c)","numpy.ndarray","numpy.prod(filter_shape[1:])","numpy.prod(filter_shape[2:])","numpy.prod(poolsize))","numpy.random.randomst","numpy.random.randomstate(1).rand(3,","numpy.random.randomstate(123)","numpy.random.randomstate(1234)","numpy.random.randomstate(23455)","numpy.random.randomstate(89677)","numpy.sqrt(3","numpy.sqrt(6.","numpy.zeros((filter_shape[0],),","numpy.zeros((n_out,),","numpy.zeros(n_visible,","numpy_rng","numpy_rng,","numpy_rng.uniform(","numpy_rng:","numpy_rng=none,","numpy_rng=numpy_rng,","numpy_rng=rng,","nv_means,","nv_samples,","nv_samples[","nx1)","obtain","old","on","onto","open","open('path')","open('path',","oper","ops）,","optim","optimizations,","option","order","order,","origin","os","os.path.isfile(dataset))","os.path.isfile(dataset):","os.path.isfile(new_path)","os.path.join(","os.path.split(__file__)[0],","os.path.split(__file__)[1]","os.path.split(dataset)","ou","out","output","output)","output.","output[0,","output[1,","outputs=classifier.errors(y),","outputs=cost,","outputs=self.finetune_cost,","outputs_info=[none,","over","overwrit","p(x)的样本可以通过运行马尔可夫链的汇聚、gibbs采样的过渡来得到。","p(y=i|x).","p(y=i|x,","p(y=i|x,w,b)","p=1","p=h1_mean,","p=v1_mean,","pair","pairs,","pairs.","param","param)","param,","param_i","param_i,","paramet","parameter.","parameters,","parameters.","parametr","params)","part","parti","partial","particular","path","patienc","patience/2)","patience/2.的原因。","patience_increas","pcd","pcd,","per","perceptron","perceptron）","perform","performance.","persist","persistent:","persistent=none,","ph_mean,","ph_sampl","phase","philosoph","pil","place","plain","pleas","plot","plu","point","polyphon","pool","pool_out","pooled_out","poolsize:","poolsize=(2,","posit","power","pre","pre_sigmoid_activ","pre_sigmoid_h1,","pre_sigmoid_nhs,","pre_sigmoid_nvs,","pre_sigmoid_nvs[","pre_sigmoid_ph,","pre_sigmoid_v1,","predict","present","pretrain","pretrain_fn","pretrain_fns.append(fn)","pretraining,","pretraining_fn","pretraining_functions(self,","print","print('curr","probabilistic,","probability.","probabl","problem","produc","project","propag","propdown(self,","propup(self,","proxi","pseudo","put","pylab","pylab.axis('off');","pylab.gray();","pylab.imshow(filtered_img[0,","pylab.imshow(img)","pylab.show()","pylab.subplot(1,","python","python命名空间","q_d(\\tilde{x}|x)","q_d.","question...","rais","ran","random","randomli","randomstream","randomstreams(numpy_rng.randint(2","randomstreams(rng.randint(2","raster","rate","rbm","rbm(object):","rbms的训练是特别困难的。由于归一化函数z，我们无法在训练的时候估计对数似然函数log(p(x))。因而我们没有直接可以度量超参数优化与否的方法。","rbm的能量函数可以被定义如下：","read","reason","recal","receiv","recognit","reconstruct","recurr","reduc","refer","references:","regardless","regress","regressing）","regression)","regressor","regular","regularization)","rel","repeat","replac","repres","reproject","requir","reshap","respect","result","retriev","return","right","rng","rng,","rng.uniform(","rng.uniform(low=","rng:","rng=rng,","rnn","row","row'","rule","run","runabl","rval","s(","s(w","s(w'","same","sampl","sample_h_given_v(self,","sample_v_given_h(self,","sampling,","save_fil","save_file,","save_file.close()","say","scan","score","sda","sda(","sda(object):","sda,","sda.pretraining_functions(train_set_x=train_set_x,","second","section","seed","select","self,","self.b","self.b)","self.b,","self.b.dimshuffle('x',","self.b]","self.b_prim","self.b_prime)","self.b_prime]","self.da_lay","self.da_layers.append(da_layer)","self.da_layers:","self.error","self.errors,","self.finetune_cost","self.free_energy(chain_end))","self.get_corrupted_input(self.x,","self.get_hidden_values(","self.get_hidden_values(tilde_x)","self.get_pseudo_likelihood_cost(updates)","self.get_reconstructed_input(y)","self.get_reconstruction_cost(updates,","self.gibbs_hvh,","self.hbia","self.hbias,","self.hiddenlay","self.hiddenlayer.param","self.i","self.input","self.l1","self.l2_sqr","self.loglay","self.loglayer.errors(self.y)","self.loglayer.negative_log_likelihood(self.y)","self.logregressionlay","self.logregressionlayer.error","self.logregressionlayer.negative_log_likelihood","self.logregressionlayer.param","self.n_hidden","self.n_lay","self.n_vis","self.negative_log_likelihood","self.output","self.p_y_given_x","self.param","self.params)","self.params):","self.params,","self.params.extend(self.loglayer.params)","self.params.extend(sigmoid_layer.params)","self.propdown(h0_sample)","self.propup(v0_sample)","self.sample_h_given_v(self.input)","self.sample_h_given_v(v0_sample)","self.sample_h_given_v(v1_sample)","self.sample_v_given_h(h0_sample)","self.sample_v_given_h(h1_sample)","self.sigmoid_lay","self.sigmoid_layers.append(sigmoid_layer)","self.sigmoid_layers[","self.sigmoid_layers将会储存多层感知机的sigmoid层，self.da_layers将会储存连接多层感知机层的降噪自动编码机。","self.theano_rng","self.theano_rng.binomial(size=h1_mean.shape,","self.theano_rng.binomial(size=input.shape,","self.theano_rng.binomial(size=v1_mean.shape,","self.vbia","self.vbias)","self.vbias]","self.w","self.w)","self.w.t","self.w.t)","self.w_prim","self.w_prime)","self.x","self.x)","self.x:","self.y:","self.y_pr","self.y_pred',","self.y_pred.ndim:","self.y_pred.type)","sense)","separ","sequenc","set","set)","set,","set;","sever","sgd","sgd_optimization_mnist()","sgd_optimization_mnist(learning_rate=0.13,","shape","shape(size)","share","shared_dataset(data_xy):","shared_dataset(data_xy,","shared_dataset(test_set)","shared_dataset(train_set)","shared_dataset(valid_set)","shared_i","shared_x","shared_x,","shuffl","sigmoid","sigmoid)","sigmoid_lay","sigmoid。","signific","simpli","size","size,","size=(n_in,","size=(n_visible,","size=b_shp),","size=filter_shape),","size=w_shp),","slow,","small","snippet","softamx","softmax_i(w","space","space.","specifi","sqrt(","sqrt(6./(n_in+n_hidden))","squar","stabl","stack","stackeddaa","stage","standalon","start","start_tim","start_time)","start_time)))","started）","state","state'''","step","stochast","stop","stopping_condition_is_met:","stopping。","stopping代码取出了。因为它和mlp中是一样的。有兴趣的读者，可以阅读教程开头的源代码。","stopping或l1/l2惩罚），隐藏节点数和泛化表现的分布图，将呈现u型（即隐藏节点越多，在后期并不能提高泛化性）。","stopping技术需要我们将数据分割为训练集、验证集、测试集。测试集使用minibatch的随机梯度下降来对目标函数进行逼近。同时引入l1/l2正则项来应对过拟合。","stopping的关键。它们都是来统计minibatch中分类错误的样例数。","stopping的随机梯度下降是与参数的l2正则化相似的。为了去实现对连续性输入有更好的重建，包含非线性隐藏单元的单隐藏层的自动编码机需要非常小的权值在第一（编码）层，以使得将非线性隐藏单元进入他们的线性区域（参考sigmoid函数），然后在第二（解码）层有更大的权值。对于二进制输入，非常大的权值也需要彻底的最小化重构误差。因为隐性的或者显性的正则化将使得获得大权值的解决方案变得困难，这个最优化算法发现在训练样本中表现好的编码。这意味着，表达是利用训练集的统计规律来实现的，而不仅仅是复制输入。","stopping通过监控模型在验证集上的表现来应对过拟合。验证集是一个我们从未在梯度下降中使用，也不在测试集的数据集合，它被认为是为了测试数据的一个表达。当在验证集上，模型的表现不再提高，或者表现更差，那么启发式算法应该放弃继续优化。","storag","store","string","subset","success","such","suggest","suitabl","sum","sum_{k=1}^d","support","sure","sy","symbol","syntax","syntax:","sys.stderr,","t","t.arange(y.shape[0])","t.argmax(self.p_y_given_x,","t.cast(","t.cast(shared_y,","t.dmatrix(name='input')","t.dot(hid,","t.dot(input,","t.dot(v_sample,","t.dot(vis,","t.dtensor4('input')","t.exp(wx_b)),","t.grad(cost,","t.grad(cost=cost,","t.grad(loss,","t.grad(self.finetune_cost,","t.ivector('y')","t.log(1","t.log(self.p_y_given_x)","t.log(z)","t.lscalar('index')","t.lscalar()","t.matrix('input')","t.matrix('x')","t.mean(","t.mean(l)","t.mean(lp[t.arange(y.shape[0]),y])","t.mean(self.free_energy(self.input))","t.mean(t.log(self.p_y_given_x)[t.arange(y.shape[0]),","t.mean(t.neq(self.y_pred,","t.neq","t.nnet.sigmoid(conv_out","t.nnet.sigmoid(pre_sigmoid_activation)]","t.nnet.sigmoid(t.dot(hidden,","t.nnet.sigmoid(t.dot(input,","t.nnet.softmax(t.dot(input,","t.scalar('corruption')","t.scalar('lr')","t.sum(abs(param))","t.sum(param","t.sum(self.x","t.sum(t.log(1","t.sum(t.log(p_y_given_x)[t.arange(y.shape[0]),","t.sum(t.neq(t.argmax(p_y_given_x),","t.tanh(pooled_out","t.tensor4(name='input')","tackl","take","tanh","tanh(dot(input,w)","tanh.","target","target)","team,","tediou","tensor","tensor)","tensor,","tensor;","term","term.","test","test_mlp()","test_mlp(learning_rate=0.01,","test_model","test_scor","test_score():","test_score_i","test_set","test_set_i","test_set_x,","test_set_x.get_value(borrow=true).shape[0]","test_set_x[","test_set_x[index","test_set_y)","test_set_y)]","test_set_y[","test_set_y[index","textbooks:","that).","theano","theano.","theano.config.floatx","theano.function(","theano.function([index],","theano.function([input],","theano.function([input],pool_out)","theano.function([x_batch,y_batch],","theano.op","theano.param(corruption_level,","theano.param(learning_rate,","theano.rng.binomi","theano.scan(","theano.shared(","theano.shared(numpy.asarray(","theano.shared(numpy.asarray(data_x,","theano.shared(numpy.asarray(data_y,","theano.shared(valu","theano.shared(value=b_values,","theano.shared(value=initial_w,","theano.shared(value=numpy.zeros(n_hidden,","theano.shared(value=w_values,","theano.tensor","theano.tensor.dmatrix","theano.tensor.dtensor4","theano.tensor.nnet","theano.tensor.nnet.sigmoid:","theano.tensor.shared_randomstream","theano.tensor.shared_randomstreams.randomstream","theano.tensor.sign","theano.tensor.tensortyp","theano/python技巧","theano_rng","theano_rng.binomi","theano_rng:","theano_rng=non","theano_rng=none,","theano_rng=theano_rng,","theano代码如下。","theano的进阶（t.grad）,","therefor","theta","theta：给定模型的参数集合","thing","things).","third","those","three","through","thu","ti","tilde_x","tilde_x)","tile_shape=(10,","tile_spacing=(1,","time","time.clock","time.clock()","times.","took","tool","top","total","train","train_batch","train_batches:","train_da","train_fn","train_fn,","train_model","train_set,","train_set_i","train_set_x,","train_set_x.get_value(borrow=true).shape[0]","train_set_x:","train_set_x[","train_set_x[batch_begin:","train_set_x[index","train_set_y)","train_set_y),","train_set_y[","train_set_y[index","training'","training,","training_set:","training_tim","trainng","trainnig","translat","transpos","tri","trial","trigger","true:","true:'","tune","tuning）。这里，我们考虑监督微调，当我们需要最小化一个监督任务的预测误差吧。为此我们现在网络的顶端添加一个逻辑回归层（使输出层的编码更加精确）。然后我们像训练多层感知器一样训练整个网络。这里，我们考虑每个自动编码的机的编码模块。这个阶段是有监督的，因为我们在训练的时候使用了目标类别（更多细节请看多层感知机）","tuning）循环和多层感知机中的非常类似，唯一的不同是我们将使用在build_funetune_functions中给定的新函数。","tuning）时需要的构建函数（train_model，validate_model，test_model函数）。","tupl","tuple(input,","turn","tutori","tutorial,","two","typeerror(","typic","u.set_value(cpickle.load(save_file),","under","uniform","unit","units)","units).","units,","univers","updat","updates)","updates.","updates.append((param,","updates=updates)","updates=updates,","updates[param]","updates[persistent]","update是一个list，用以更新每一步的参数。given是一个字典，用以表示象征变量，和你在该步中表示的数据。这个train_model定义如下：","upward","urllib","urllib.urlretrieve(origin,","us","used.","usual","v","v,","v.set_value(cpickle.load(save_file),","v0_sample):","v1_mean","v1_mean,","v1_sampl","v1_sample,","v1_sample]","v_sample):","valid","valid_score():","valid_score,","valid_score_i","valid_set,","valid_set_i","valid_set_x,","valid_set_x.get_value(borrow=true).shape[0]","valid_set_x[","valid_set_x[index","valid_set_y)","valid_set_y),","valid_set_y[","valid_set_y[index","validate_model","validation_frequ","valu","value,","value=numpy.zeros(","values.","variabl","variable)","variable),","variables,","variables），通过minibatch的索引（一个固定的被告知的batch的尺寸）来存取它们。使用共享变量的原因是为了使用gpu。因为往gpux显存中复制数据是一个巨大的开销。如果不使用共享变量，gpu代码的运行效率将不会比cpu代码快。如果你将自己的数据定义为共享变量，当共享变量被构建的时候，你就给了theano在一次请求中将整个数据复制到gpu上的可能。之后，gpu就可以通过共享变量的slice（切片）来存取任何一个minibatch，而不必再从cpu上拷贝数据。同时，因为数据向量（实数）和标签（整数）通常是不同属性的，测试集、验证集和训练集是不同目的的，所以我们建议通过不同的共享变量来储存（这就产生了6个不同的共享变量）。","variable）,","vbia","vbias:","vbias=none,","vbias_term","vector","vector,","vector.","versa),","version","vice","vincent","vis):","visibl","w","w'","w(.j)：矩阵的一列","w(i,j)：矩阵内（i，j）点的数据","w(i.)：矩阵的一行","w)","w,b)","w,b))","w.set_value(cpickle.load(save_file),","w:","w=none,","w=sigmoid_layer.w,","w^{(1)}","w^{(2)}(","w_bound","w_bound,","w_prime","w_shp","w_valu","wait","want","warning:","weight","weights,","weights.","well","when,","where:","whose","width","width\"","width)","wise","without","word","work","write","written","wrt=classifier.b)","wrt=classifier.w)","wx_b","w：大写字母表示矩阵（除非特殊说明）","x","x))),","x))）和n_layers个降噪自动编码机，当然n_layers就是我们模型的深度。我们连接sigmoid函数，使得他们形成一个mlp，构建每一个自动编码机和他们对应的sigmoid层，去共享编码部分的权值矩阵和偏执","x.reshape((batch_size,","x:","x_batch","x_batch,","x_i,","x_k)","xeon","xrange(n_test_batches)]","xrange(n_train_batches):","xrange(n_valid_batches)]","xrange(pretraining_epochs):","xrange(sda.n_layers):","xrange(self.n_layers):","xrange(training_epochs):","y","y))","y):","y,","y.","y.dtype.startswith('int'):","y.ndim","y.shape[0]","y.type,","y:","y])","y_batch","y_batch)","y_batch))","y_batch;","y_i)","y_pred","y_{pred}","z","z),","z_k","z_k)]","zero","zero.","zero_one_loss","zhejiang","zip","zip(classifier.params,","zip(gparams,","zip(params,","zip(self.params,","z||^2，可以被使用。假如这个输入是通过比特向量或者比特概率向量来表述，重构交叉熵([cross","{\\sum_j","{e^{w_i","{x:","}","},","~","一个多层感知机（或者说人工神经网络——ann）,在只有一个隐藏层时可以被表示为如下的图：","一个特征映射是由一个函数在整个图像的某一子区域重复使用来获得的，换句话说，就是通过线性滤波器来卷积输入图像，加上偏置后，再输入到非线性函数。如果我们定义第k个特征映射是为h_k，滤波器有w_k，b_k定义，则特征映射可以被表现为如下形式：","一个简单的解释是，使用earli","一个隐藏层的权值初始化，应当从基于激活函数的均匀间隔中均匀采样。对于sigmoid函数而言，这个间隔是。其中fan_in是第（i－1）层的单元数目，fan_out是第（i）层单元的数目，结论出自这里。","一般直觉的是，如果参数的更新是足够小相比链的混合率，那么马尔科夫链应该能够“赶上”模型的变化。","上图显示了一个cnn的两层，第m","下一个我们将在theano中使用的结构是单隐层的多层感知机（mlp）。mlp可以被看作一个逻辑回归分类器。这个中间层被称为隐藏层。一个单隐层对于mlp成为通用近似器是有效的。然而在后面，我们将讲述使用多个隐藏层的好处，例如深度学习的前提。这个课程介绍了mlp，反向误差传导，如何训练mlps。","下一步就是去定义函数来构建s图。代码如下：","下一步，我们构建n_layers个sigmoid层（我们使用在多层感知机中介绍的hiddenlayer类，唯一的更改是将原本的非线性函数tanh换成了logistic函数s=1/(1+exp(","下载","下面的theano代码实现了类似图1的卷积层。输入包括大小为120160的3个特征映射（1一个rgb彩图）。我们使用2个大小为99感受野的卷积滤波器。","下面的代码定义了一个对给定的minibatch的损失函数。","下面的几行代码去构建层叠自动编码机：","与权值矩阵w相关的4维张量，尺寸包括如下：[m层特征映射的数目，m","与输入的minibatch有关的4维张量，尺寸包括如下：[mini","为了了解网络学习了什么东西，我们将会描述出滤波器（通过权值矩阵来定义）。记住，事实上它没有提供完整的情况，因为我们忽略了偏置，并且画出的权值被乘以了常数（权值被转换到了0","为了形成数据更丰富的表达，隐藏层有多层特征映射组成｛h_k,k=0..k｝。一个隐层的权值矩阵w可以用一个4维张量来表示，包含了每个目标特征映射、源目标特征映射、源水平位置，源垂直位置的元素。偏置b则是一个向量，纪录每个目标特征映射的元素。我们可以用如下的图来表示：","为了方便在python中的使用，我们对数据集进行了处理。你可以在这里下载。这个文件被表示为包含3个lists的tuple：训练集、验证集和测试集。每个lists都是都是两个list的组合，一个list是有numpy的1维array表示的784（2828）维的0～1（0是黑，1是白）的float值，另一个list是0～9的图像标签。下面的代码显示了如何去加载这个数据集。","为了有能力在训练时，改变差错等级或者训练速率。我们用一个theano变量来联系它们。","为了获得实际的模型预测，我们使用t_argmax操作，来返回p_y_given_x的最大值对应的y。","主循环","事实上，一个单隐藏层的mlp是一个如下的函数，其中x是输入向量的维度，l是输出向量的维度。我们用下面的公式来表示mlp模型：","二进制单元rbms的自由能力为：","二进制单元的rbm","二进制单元的更新公式","什么是普通的梯度下降？梯度下降是一个简单的算法，利用负梯度方向来决定每次迭代的新的搜索方向，使得每次迭代能使待优化的目标函数逐步减小。","从上图的实现来看，较低层的操作都是建立在4维张量上的。然后它需要被压缩为2维的特征映射，来适应之后的mlp实现。","从自动编码机的类转换为降噪自动编码机，我们需要去增加一个随机误差步骤去应用到输入中。这个输入可以通过许多方法来污染，但在这个教程中，我们将支持以输入的随机性来腐化原始数据，使它趋向于0。代码如下：","从逻辑回归到多层感知机","代码如下：","以相同的方式（fashion），我们创建了一个方法用于在微调（fin","伪代码如下。","伪代码如下所示。","似然估计的替代","作者/author","使用pickle在共享变量中储存numpy的ndarray","使用逻辑回归进行mnist分类(classifi","使用逻辑回归进行mnist分类（classifi","假如persistent为none，则我们使用正相位时产生的隐藏样本来初始化gibbs链，以此实现cd。当我们已经建立了这个链的开始点的时候，我们就可以计算这个gibbs链的终点的样本，以及我们需要的去获得梯度的样本。为了获得这些，我们使用theano提供的sacn操作，我们建议读者去阅读这个链接。","假如你想要在新的数据集上采用这个模型，下面的一些小技巧可能能让你获得更好的结果：","假设第l","假设除了最小化重构误差外没有别的的限制，一个有n个输入和n（或者更大）维编码学习能力的自动编码机定义函数，将倾向于去映射出它的输入副本。这种自动编码机将无法从训练样本的分布中区分任何测试样例。（无效编码机：输出与输入完全相同）。","入门（get","其中b_1，w_1是输出层到隐藏层的偏置向量和权值矩阵，s是该层的激活函数。而b_2，w_2是隐藏层到输出层的偏置向量和权值矩阵，g是该层的激活函数。通常选择s为sigmoid函数，g为softmax函数。","其中’表示转置，b,c,w为模型的参数，b,c分别为可见层和隐含层的偏置，w为可见层与隐含层的链接权重。","其中对于2维卷积有如下定义：","其中归一化因子z被称为分割函数：","其中随机梯度为，其中theta为模型的参数。","典型的方法是使用l1/l2正则化，同时lambda设为0.01，0.001等。尽管在我们之前提及的框架里面，它并没有显著提高性能，但它仍然是一个值得探讨的方法。","内容/content","分布，迭代的对其分量依次采样，随着采样次数的增加，随机变量[x1(n),x2(n),…,xk(n)]的概率分布将以n的几何级数的速度收敛于x的联合","创建一个逻辑回归类","动机","包含隐藏单元的ebm","卷积操作","卷积操作是theano实现卷积层的主要消耗。卷积操作通过theano.tensor.signal.conv2d，它包括两个输入符号：","卷积神经网络另一个重大的概念是最大池化，一个非线性的降采样形式。最大池化就是将输入图像分割为一系列不重叠的矩阵，然后对每个子区域，输出最大值。","卷积神经网络是多层感知机的生物灵感变种。从hubel和wiesel先前对猫的视觉皮层的研究，我们知道视皮层中含有细胞的复杂分布。这些细胞只对小的视觉子区域敏感，称为感受野。这些子区域平铺来覆盖整个视场。这些细胞表现为输入图像空间的局部滤波器，非常适合检测自然图像中的强空间局部相关性。","卷积神经网络的训练相比与标准的mlp是相当困难的，因为它添加了更多的超参数。当我们在应用学习率和正则化的规则下，下面的方法也需要在优化cnns被考虑：","卷积神经网络通过在相邻层的神经元之间实施局部连接模式来检测局部空间相关性。换句话说就是，第m层的隐藏单元的输入来自第m－1层单元的子集，单元拥有空间上的感受野连接。我们可以通过如下的图来表示：","卷积神经网络（convolut","原则上来说，增加一个正则项，可以平滑神经网络的网络映射（通过惩罚大的参数值，可以减少网络模型的非线性参数数）。因而最小化这个和，就可以寻找到与训练数据最贴合同时范化性更好的模型。更具奥卡姆剃刀原则，最好的模型总是最简单的。","去画出我们的滤波器，我们需要title_raster_images(看plot","受限波尔兹曼机（rbm）","受限波尔兹曼机（restrict","可以观察到不同实验下验证误差和测试误差的不同，这是由不同硬件的取整结构不同造成的。可以忽略。","同时我们受物理启发定义了自由能量（free","因为y是视为x的有损压缩(lossi","因为我们希望p(v)=p_train(v)（数据的真实、底层分布），所以我们使用一个训练样本来初始化马尔可夫链（例如，从一个被预计接近于p的分布，所以这个链已经开始去收敛这个最终的分布p）。","因为特征映射的尺寸会随着深度的增加而减小，靠近输入层的层将趋向于有更少的滤波器，而更高的层有更多的滤波器。事实上，为了平衡每一层的计算量，特征数和图像位置数的乘积在层的传递过程中都是基本一致的。为了保护输入信息，我们需要保证总的激活数量（特征映射数*像素位置数）在层间传递的时候是至于减少（当然我们在做监督学习的时候当然是希望它减小的）。特征映射的数量直接控制整个容量，同时它依赖于可用样例的数目和任务的复杂度。","因此这个技巧事实上是去寻找正确等级的“粒度”，以便对给定的数据集去形成合适范围内的抽象。","在bengio09的第4.6节中，有自动编码机的简介。一个自动编码机，由d维的[0,1]之间的输入向量x，通过第一层映射（使用一个编码器）来获得隐藏的d‘维度的[0,1]的输出表达y。通过如下的决定性映射：","在geforc","在intel(r)","在rbm中进行采样","在theano中呢，这是非常简单的。它自动微分，并且使用了一定的数学转换来提高数学稳定性。","在vincent08中，随机差错进程随机的设定部分（也可以是一半）输入为0。因此降噪自动编码机尝试去从未被污染的值中去预测被污染的（丢失）的值，通过随机的选择丢失模式下的仔鸡。注意如何能预测从剩下的变量的任意子集是一个充分条件，去完全捕获一组变量之间的联合分布（这是gibbs采样工作）。","在一台core","在一台intel(r)","在上面的代码中国，有一些是不能进行梯度下降来优化的。严格意义上将，发现最优的超参集合是不可能的任务。第一，我们不能独立的优化每一个参数。第二，我们不能很容易的求解所有参数的梯度（有些是离散的值，有些是实数）。第三，这个优化问题是非凸的，容易陷入局部最优。","在之前论述中所说，我们对分类错误的样本感兴趣（不仅仅是可能性）。因此模型中增加了一个额外的实例方法，来纪录每个minibatch中的错误分类样例数。","在使用二进制单元（v和h都属于{0,1}）的普通研究情况时，概率版的普通神经激活函数表示如下：","在初始化权值的时候，我们一般需要它们在0附近，要足够小（在激活函数的近似线性区域可以获得最大的梯度）。另一个特性，尤其对深度网络而言，是可以减小层与层之间的激活函数的方差和反向传导梯度的方差。这就可以让信息更好的向下和向上的传导，减少层间差异。数学推倒，请看xavier10。","在实现msgd的许多语言中，需要通过手动求解损失函数对每个参数的梯度（微分）来实现。","在层叠自动编码机类(层叠自动编码机)中，da类中的权值不得不和相应的sigmoid层共享。因为这个原因，da的构建也将theano变量指向了共享参数。假如这些参数被设置为none，新的参数会被构建。","在很多情况下，我们无法观察到x样本的全部分布，或者我们需要引进一些没有观察到的变量，以增加模型的表达能力。因而我们考虑将模型分为2部分，一个可见部分（x的观察分布）和一个隐藏部分h，这样得到的就是包含隐含变量的ebm：","在本节中，假设你已经了解了使用逻辑回归进行mnist分类。同时本节的所有代码可以在这里下载.","在本节中，我们也使用l1/l2正则化（l1/l2正则化）。所以我们需要去计算w_1和w_2矩阵的l1正则和l2平方正则。","在此之前，我们使用minibatch的随机梯度下降来训练这个模型。不同的是，我们现在在cost函数里面添加了正则项。l1_reg和l2_reg可以控制权值矩阵的正则化。计算新cost的代码如下：","在每一个学习算法的页面，你都需要去下载相关的文件。加入你想要一次下载所有的文件，你可以克隆本教程的git仓库。","在给定模型下，输入x，输出为y的概率，可以用如下公式表示","在训练mlp模型的参数时，我们使用minibatch的随机梯度下降，在获得梯度后使用反向误差传导算法来实现参数的训练。由于theano提供自动的微分，我们不需要在这个教程里面谈及这个方面。","在训练中获得的负样本是可以可视化的。在训练进程中，我们知道由rbm定义的模型不断逼近真实分布，p_train(x)。负样例就可以视为训练集中的样本。显而易见的，坏的超参数将在这种方式下被丢弃。","在训练这个网络时，有两个阶段，一层是预训练，之后是微调。","在这一章节，我们假设读者已经阅读了使用逻辑回归进行mnist分类和多层感知机。当然，假如你要使用gpu来运行代码，你还需要阅读gpu。","在这一节假设读者已经阅读了之前的两章使用逻辑回归进行mnist分类和多层感知机。","在这一节，我们假设读者已经了解了使用逻辑回归进行mnist分类和多层感知机。如果你需要在gpu上进行运算，你还需要了解gpu。","在这一节，我们将展示theano如何实现最基本的分类器：逻辑回归分类器。我们以模型的快速入门开始，复习(refresher)和巩固(anchor)数学负号，也展示了数学表达式如何映射到theano图中。","在这个理论里面，每个参数在学习进程中的更新都需要运行这样几个链来趋近。毫无疑问这将耗费很大的计算量。一些新的算法已经被提出来，以有效的学习p(v,h)中的样本情况。","在这里我们使用错误的平均来表示损失函数，以减少minibatch尺寸对我们的影响。","在选择minibatch的尺寸b时中有个权衡。当尺寸比较大时，在梯度估计时就要花费更多时间计算方差；当尺寸比较小的时候呢，就要进行更多的迭代，也更容易波动。因而尺寸的选择要结合模型、数据集、硬件结构等，从1到几百不等。","在选择何时终止优化方面，主要基于主观判断和一些启发式的方法，但在这个教程里，我们使用一个几何级数增加的patience量的策略。","基于能量模型（energi","基于能量的模型可以利用使用梯度下降或随机梯度下降的方法来学习，具体而言，就是以先验（训练集）的负对数似然函数作为损失函数，就像在逻辑回归中我们定义的那样，","基于能量的模型（ebm）把我们所关心变量的各种组合和一个标量能量联系在一起。训练模型的过程就是不断改变标量能量的过程，使其能量函数的形状满足期望的形状。比如，如果一个变量组合被认为是合理的，它同时也具有较小的能量。基于能量的概率模型通过能量函数来定义概率分布：","基本数学算子（basic","复制单元使得特征可以无视其在视觉野中的位置而被检测到。此外，权值共享增加了学习效率，减少了需要被学习的自由参数的数目。这样的设定，使得cnns在视觉问题上有更好的泛化性。","多层感知机（multilay","好消息是，过去25年，研究者发明了一些在神经网络中选择超参数的方法和规则。你可以在lecun等人的effici","如果你再gpu上跑代码，并且数据集太大，可能导致内存崩溃。在这个时候，你就应当把数据存储为共享变量。你可以将数据储存为一个充分小的大块（几个minibatch）在一个共享变量里面，然后在训练的时候使用它。一旦你使用了这个大块，更新它储存的值。这将最小化cpu和gpu的内存交换。","如果你已经阅读了上面的隐藏层输出和使用逻辑回归进行mnist分类。那么你可以看下面的mlp类的实现了。","如果你想要在gpu上跑样例，你需要一个好的gpu。至少是1gb显存的。当显示器连接在显卡上时，你可能需要更大的显存。","如果想要获得完整的theano算子，看算子列表","如果过训练数据的batch批次。","学习一个分类器","学习优化模型参数需要最小化一个损失参数。在多分类的逻辑回归中，很显然是使用负对数似然函数作为损失函数。似然函数和损失函数定义如下：","学习模型","学习率","定义一个损失函数","实现","对于rbms来说，s包含了可视和隐藏单元的集合。然而，由于它们的条件独立性，可以执行块gibbs抽样。在这个设定中，可视单元被采样，同时给出隐藏单元的固定值，同样的，隐藏单元也是如此：","对于预训练阶段，我们将循环网络中的所有层。对于每一层，我们将使用编译的theano函数来实现sgd(随机梯度下降)，以实现权值优化，来见效每层的重构损失。这个函数将在训练集中被应用，并且是以pretraining_epochs中给出的固定次数的迭代。","对标准mlp而言，第l层如果有kl个神经元，那计算量只有k(k","对比散度算法（cd","对比散度算法，是一种成功的用于求解对数似然函数关于未知参数梯度的近似的方法。它使用两个技巧来技术采样过程：","对比梯度不需要等待链的收敛。样本在k步gibbs采样后就可以获得。在实际中，k=1时就可以获得惊人的好的效果。","将产生这样的输出：","将会产生下面的输出：","将它组合起来","层叠自动编码机","层叠自动编码机(stcake","层叠降噪自动编码机（stack","已经解释了所有的基本该概念，下面的代码就是一个完整的mlp类。","当gpu连接在显示器上时，每次gpu的调用会有几秒钟的限制。这是必须的，因为gpus不能在计算的时候，同时被用于显示器。如果没有这个限制，屏幕会长时间不动，就像死机一样。这个例子会说中中等质量的gpus。当gpu不连接显示器时，没有这个时间限制。你可以通过降低batch的大小来出来延时问题。","当t趋向于无穷时，(v(t),h(t))将越加逼近正确样本的概率分布p(v,h)。","当你做实验的时候，用梯度下降算法可能要好几个小时去发现一个最优解。你可能在发现解的时候，想要保存这些权值。你也可能想要保存搜索进程中当前最优化的解。","当你已经产生了这个链，我们在链的末尾的样例获得负相位的自由能量。注意，这个chain_end是模型参数项中的一个的象征性的theano变量，当我们简单的求解t.grad的时候，这个函数将通过gibbs链来得到这个梯度。这不是我们想要的（它会搞乱我们的梯度），因此我们需要指示t.grad，chain_end是一个常量。我们通过t.grad的consider_constant来做这个事情。","当我们不使用任何噪声的时候，获得的滤波器如下：","当我们使用这个数据集的时候，通常将它分割维几个minibatch。我们建议你将数据集储存为共享变量（shar","当然，事实上，简单模型并不一定意味着好的泛化。但从经验上看，这个正则化方案可以提高神经网络的泛化能力，尤其是对于小数据集而言。下面的代码我们分别给两个正则项一个对应的权重。","当选择每层滤波器数量的时候，需要记住计算单卷积层的活性比传统的mlp会更加昂贵。","总结","想象一下，第m－1层是输入视网膜。在上图总，第m层的单元有宽度为3的对输入视网膜的感受野，因此它们只连接视网膜层中3个相邻的神经元。第m层的单元与下一层有相似的连接。我们说，感受野连接于下一层的数目也是3，但是感受野连接于输入的则更大（5）。每个单元对视网膜上于自己感受野相异的地方都是不会有响应的。这个结构保证了被学习的滤波器对一个空间局部输入图案有最强的响应。","我们不止一次的在深度学习中提及这个变体——“minibatches”。minibatch随机梯度下降区别与随机梯度下降，在每次梯度估计时使用一个minibatch的数据。这个技术减小了每次梯度估计时的方差，也适合现代电脑的分层内存构架。","我们使用梯度来更新模型参数，这基本和逻辑回归里面的一样。我们从模型的params中获取参数列表，然后分析它，并计算每一步的梯度。","我们依据在验证集上表现最好的参数作为模型的参数，去在测试集上进行测试。","我们创建了test_model函数，然后也创建了validate_model来调用去修正这个值。当然validate_model是earli","我们只能通过一些采样方法（如gibbs采样）获取其近似值，其具体方法将在后文中详述。","我们可以从x的一个任意状态(比如[x1(0),x2(0),…,xk(0)])开始，利用上述条件","我们可以获得如下的一个二进制单元rbm的对数似然梯度：","我们定义数据集为d,包括3个部分，d_train，d_valid，d_test三个集合。d内每个索引都是一个(x,y)对。","我们希望这样，这个编码y是一个分布式表达，可以捕捉数据中主要因子变化的位置。这就类似与主成分凸出，金额也捕捉数据中主要因子的变化。事实上，假如这里有一个线性隐藏层（这个编码），并且平均平方误差准则被用以训练这个网络，然后这k个隐藏单元学习去凸出这个输入，在该数据的前k个主成分的范围中。假如这个隐藏层是非线性的，这个自动编码机表现的是与pca不同的，它有着捕捉输入分布的多模态方面的能力。从pca开始变得更加重要，当我们考虑堆叠混合编码机(stack","我们希望通过theano中来实现自动编码机，作为一个类的形式，它可以在未来去构建一个层叠自动编码机。这个第一步是去创建自动编码机的共享变量参数（w，b，b‘）。","我们把进行实际训练和earli","我们构建一个rbm类。这个网络的参数既可以通过构造函数初始化，也可以作为参数进行传入。当rbm被用于构建一个深度网络时，这个选项——权重矩阵和隐藏层偏置与一个mlp网络的相应的s形层共享，就是非常有用的。","我们现在可以定义一个函数来实现重复的更新参数w，b，b‘，直到这个重构消耗大约是最小的。","我们通过如下代码来实例化这个类。","我们随后添加一个get_cost_update方法，目的是产生cd","技巧","把它们组合起来","把它们都放一起就是，w_k_l(i,j)，表示第m层的第k个特征映射，在第m","把它组合起来","持续的对比散度","持续的对比散度tieleman08使用了另外一种近似方法来从p(v,h)中采样。它建立在一个拥有持续状态的单马尔可夫链上（例如，不是对每个可视样例都重启链）。对每一次参数更新，我们通过简单的运行这个链k步来获得新的样本。然后保存链的状态以便后续的更新。","推倒公式如下：","提供了一种平移不变性。想象一下，一个最大池化层级联在一个卷积层。这里有8个方向，一个输入图像可以通过单个像素平移。假如说最大池化是22的区域，8个可能的方向中有3个可能会产生相同的输出（3/8）。当池化层为33时，概率增加到5/8。","数学约定","数据的服对数似然函数梯度就有如下有趣的形式：","数据集","数据集标记","整个模型","最后的代码如下。","最后的降噪自动编码机类就变成了这样：","最后，我们增加由scan返回的更新字典（包含了随机状态的theano_rng更新规则）来获取参数更新。在pcd例子中，也需要更新包含gibbs链状态的共享变量。","最后，我们定义了一个cost变量来最小化。","最后，我们通过使用在使用逻辑回归进行mnist分类中定义的logisticregression类，和多层感知机中的hiddenlayer类来实例化我们的网络：","最大池化","最大池化在theano中通过theano.tensor.signal.downsample.max_pool_2d。这个函数被设计为可以接受n维的张量和一个缩减因子，然后对张量的最后2维执行最大池化。","最大池化在视觉中是有用的，由如下2个原因：","最大池化的尺寸","最常见的就是sigmoid和tanh函数。在第4.4节中解释的，非线性是关于原点对称的，它倾向去输出0均值的输出（这是被期望的属性）。根据我们的经验，tanh(双曲函数)拥有更好的收敛性。","有30%噪声的时候，滤波器如下：","有许多文献专注在好的学习速率的选择上。最简单的方案就是选择一个固定速率。经验法则：尝试对数间隔的值(0.1，001，。。)，然后缩小（对数）网络搜索的范围（你获得最低验证错误的区域）。","本教程将专注于单隐藏层的mlp。我们以隐藏层的类的实现开始，如果要构建一个mlp，只需要在此基础上添加一个逻辑回归就好。","本节假定读者属性了下面的theano概念：共享变量（shar","本节所有的代码都可用在这里下载。","本节的所有代码可以在这里下载。","本节的所有代码都可以在这里下载。","本节的所有代码，可以在这里下载，还有3狼月亮图。","权值共享","权值初始化","标记","概率分布p(x)。也就是说，我们可以在未知联合概率分布的条件下对其进行采样。","模型","模型比较低的层是由卷积和最大池化层的交替来构建的，较高的层则是全连接的传统mlp（隐藏层＋逻辑回归）。第一个全连接层的输入是前一层(the","正则化","正则化参数","正则化是为了防止在msgd训练过程中出现过拟合。为了应对过拟合，我们提出了几个方法：l1/l2正则化和earli","此外，两类基础细胞类型被定义：简单细胞使用它们的感受野，最大限度的响应特定的棱状图案。复杂细胞有更大的感受野，可以局部不变的确定图案精确位置。动物视觉皮层是现存的最强大的视觉处理系统，很显然，我们需要去模仿它的行为。因此，许多类神经模型在文献中出现，包括neocognitron，hmax和lenet","此外，在cnns中，每一只滤波器共享同一组权值，这样该滤波器就可以形成一个特征映射（feaatur","此外，更加容易处理的函数可以被用于做似然估计的替代。当我们使用pcd来训练rbm的时候，可以使用伪似然估计来替代。伪似然估计（pseudo","每一次函数调用，它都先用index对应的训练集的切片来更新x，y。然后计算该minibatch下的cost，以及申请update操作。","每次train_model(inedx)被调用，它都计算并返回该minibatch的cost，当然这也是msgd的一步。整个学习算法因循环了数据集所有样例。","波尔兹曼机是对数线性马尔可夫随机场（mrf）的一种特殊形式，例如这个能量函数在它的自由参数下是线性的。为了使得它们能更强力的表达复杂分布（从受限的参数设定到一个非参数设定），我们认为一些变量是不可见的（被称为隐藏）。通过拥有更多隐藏变量（也称之为隐藏单元），我们可以增加波尔兹曼机的模型容量。受限波尔兹曼机限制波尔兹曼机可视层和隐藏层的层内连接。rbm模型可以由下图描述：","注意get_cost_update作为参数被变量化为persistent。这允许我们去使用相同的代码来实现cd和pcd。为了使用pcd，persistent需要被关联到一个共享变量，它包含前一次迭代的gibbs链的状态。","注意我们使用了与mlp相同得权值初始化方案。权值在一个范围为[","注意，一个随机的初始化滤波器表现得很像一个特征检测器。","注意，与其他theano代码相比，max_pool_2d操作有点特殊。它需要缩减因子ds(长度维2的tuple，班汉图像长度和宽度的缩减因子)在图构建的时候被告知。这在未来可能会发生改变。","注意，当初始化权重值的时候，fan","注意，我们将input作为一个参数来传递给自动编码机。我们可以串联自动编码机来实现深度网络：第k层的输出(y)可以变成第k+1层的输入。","注意，我们通过会将一个给定的非线性函数作为隐藏层的激活函数。默认是tanh函数，当然很多时候你可能需要其他函数。","注意，这里返回的valid_score和test_score并不是theano函数，而是python函数，在整个验证集和测试集循环，以产生这些集合的损失数的list。","测试","深度学习教程中文版","深度学习的监督优化入门","滤波器的可视化跟踪","滤波器的尺寸","滤波器的数量","然后我们可以写成如下公式：","然后我们通过这些函数可以计算一个随机梯度下降步骤的cost和更新。","然而，就像上面展示的，将这些层叠加起来去形成（非线性）滤波器，就可以变得越来越全局化。举例而言，第m＋1层的单元可以编码一个宽度为5的非线性特征。","版权/copyright","现在任何一个pretrain_fns[i]函数，可以将index，corruption——差错等级，lr——学习速率作为参数。注意，这些参数的名字是theano变量的名字，而不是python变量的名字（learning_rate或者corruption_level）。在使用theano时，注意这一点。","现在去构建一个da类和训练它变得很简单了。","现在我们已经知道了在theano中实现lenet的所有方法。那我们先实现一个lenetconvpoollayer类，它是{卷积＋最大池化}层。","现在，我们可以使用这些函数来定义一个gibbs采样步骤的符号图。我们定义如下两个函数：","现在，我们可以预计去重构信号的潜在表达的计算量。","现在，我们要定义一个逻辑回归的类，来概括逻辑回归的基本行为。代码已经是我们之前涵盖的了，不再进行过多解释。","现在，我们需要在sigmoid层的上方添加逻辑层，所以我们将有一个mlp。我们将使用在使用逻辑回归进mnist分类的logisticregression类。","由n个随机变量（s=(s1,s2,...sn)）的联合分布的gibbs采样，可以通过n个采样子步骤来实现,形式如si～p(si|","由于0","由于rbm的特殊结构，可视层和隐藏层层间单元是相互独立的。利用这个特性，我们定义如下：","由于我们通常说最小化损失函数，所以我们给对数似然函数添加负号，来使得我们可以求解最小化负对数似然损失函数。","由于模型的参数需要不断的存取和修正，所以我们把w和b定义为共享变量。这个dot（点乘）和softmax运算用以计算这个p(y|x,w,b)。这个结果p_y_given_x(probability)是一个vector类型的概率向量。","由于现在的数据再一个变量里面，一个minibatch被定义为这个变量的一个切片。通过指定它的索引和它的尺寸，可以更加自然的来定义一个minibatch。下面的代码展示了如何去存取数据和如何存取一个minibatch。","由模型训练的滤波器是可以可视化的。我们可以将每个单元的权值以灰度图的方式展示。滤波器应该选出数据中强的特征。对于任意的数据集，这个滤波器都是不确定的。例如，训练mnist，滤波器就表现的像“stroke”检测器，而训练自然图像的稀疏编码的时候，则像gabor滤波器。","白化(whitening)数据（例如，使用主成分分析）","稀疏性、卷积层和最大池化时lenet系列模型的核心。而准确的模型细节有很大的差异，下图显示了一个lenet模型。","稀疏连接","简介","细节和注解","经典的是22，或者没有最大池化。非常大的图可以在较低的层使用44的池化。但是需要记住的是，池化在通过16个因子减少信号维度的同时，也可能导致信号细节的大量丢失。","结果","翻译者/translat","而下面的几个选项对用户是有用的。","自动编码机","自由能量为如下形式：","虽然整本书都致力于探讨最小化话题，但梯度下降是迄今为止最简单的最小化非线性函数的方法。在这个教程中，我们使用minibatch随机梯度下降算法。可以看随机梯度下降来获得更多细节。","衰减每次迭代的学习速率。","让人惊讶地，在bengio07的实验指出，在实践中，当通过随机梯度下降训练时，有比输入更多的隐藏单元（称为超完备）的非线性的自动编码机可以产生有效的表达。（这里，有效指的是编码作为网络的输入获得了更低的分类误差）。","让我们让它变得有趣点...","训练mlps的技巧","训练模型","读者也可以在这个页面查看mnist的识别结果。","负对数似然损失函数","负样本的检查","超参的选择","载入和保存模型","输入是minibatch的index，batch的大小之前已经固定，以此被定义为x，以及其相关的y。","运行代码","运行这个代码","返回是该index下与x，y相关的cost/损失函数。","这一节假设读者一节阅读了使用逻辑回归进行mnist分类，多层感知机。如果你需要在gpu上跑代码，你也需要阅读gpu。","这个validation_frequency应该要比patience更小。这个代码应该至少检查了两次，在使用patience之前。这就是我们使用这个等式validation_frequ","这个公式的更多细节推倒，读者可以阅读这一页，或者learn","这个函数train_model可以被定义如下。","这个微调（fine","这个教程并不是为了巩固研究生或者本科生的机器学习课程，但我们确实对一些重要的概念（和公式）做了的快速的概述，来确保我们在谈论同个概念。同时，你也需要去下载数据集，以便可以跑未来课程的样例代码。","这个教程建立在前一个降噪自动编码机之上。我们建议，对于没有自动编码机经验的人应该阅读上述章节。","这个数据以float的形式被存储在gpu上（dtype被定义为theano.confug.floatx）。然后再将标签转换为int型。","这个算法可能会有更好的表现，当我们通过统计显著性的测试来代替简单的比较来决定是否增加patient。","这个类也提供一个方法去产生与不同层相关的降噪自动编码机的训练函数。它们以list的形式返回，第i个元素就是一个实现训练第i层的da的函数。","这个类还有一个函数去计算模型的自由能量，以便去计算参数的梯度。注意我们也会返回pre","这个超参数是非常基于数据集的。模糊的来说就是，输入分布越复杂，去模拟它的网络就需要更大的容量，那么隐藏单元的数目就要更大。事实上，一个层的权值矩阵就是可以直接度量的（输入维度＊输出维度）。","这个输出将是如下的格式","这个降噪自动编码机是自动编码机的随机版本。直观上讲，一个降噪自动编码机做2件事情：尝试对输入进行编码（保护输入信息），然后尝试去消除输入中的随机差错产生的影响。后者可以通过捕捉输入间的统计相关性来实现。降噪自动编码机可以从不到的角度来理解（流行学习角度，随机操作角度，自下而上的信息论角度，自上而下的生成模型角度），所有的这些在vincent08中被解释。在bengio09的第7.2节有自动编码机的综述。","这在theano里面，使用之前定义的降噪自动编码机，可以轻易的被实现。我们可以将层叠降噪自动编码机看作两部分，一个是自动编码机链表，另一个是一个多层感知机。在预训练阶段，我们使用了第一部分，例如我们将模型看作一系列的自动编码机，然后分别训练每一个自动编码机。在第二阶段，我们使用第二部分。这个两个部分通过分享参数来实现连接。","这是一个翻译自深度学习0.1文档的中文教程。在这个教程里面所有的算法和模型都是通过pyhton和theano实现的。theano是一个著名的第三方库，允许程序员使用gpu或者cpu去运行他的python代码。","这是对优化章节的总结。earli","这样的初始化，保证了在训练的早期，每个神经元都可以工作在它激活函数的控制范围内，从而使得信息可以更简单的前向传导（从输入到输出的激活）和后向传导（从输出到输入的梯度）。","这里s是一个非线性的函数，例如sigmoid。这个潜在的表达y，或者码，被映射回一个重构机z，来重构x。这个映射通过下面的简单转换来实现：","这里有一个方法去提高代码的运行速度（假定你有足够的可用内存），是去计算这个网络（直到第k","这里有其他方法，使得一个有比输入有更多隐藏单元的自动编码机，去避免只学习它本身，而是在输入的隐藏表达中捕捉到有用的东西。一个是添加稀疏性（迫使许多隐单元是0或者接近0）。稀疏性已经被很成功的发挥了ranzato07lee08。另一个是，在输入到重建过程中，增加从输入到重建的转换中的随机性。这个技术在受限玻尔兹曼机中被使用（restrict","这里，h(n)表示马尔可夫链中第n布的隐藏单元的集合。这意味着，h(n+1)根据概率simg(w‘v(n)+ci)来随机地被选为0/1。类似地v(n+1)也是如此。这个过程可以通过下面地图来展现：","进展跟踪","通常在每个文献中滤波器的尺寸都有很大的不同，它常常是基于数据库的。mnist在第一层的最好结果是55层滤波器。当自然图像（每维有几百个像素）趋向于使用更大的滤波器，例如1212，15*15。","通常我们很难精确计算这个梯度，因为式中第一项涉及到可见单元与隐含单元的联合分布，由于归一化因子z(θ)的存在，该分布很难获取。","通过消除非最大值，减少了更上层的计算量","逻辑回归模型是一个线性概率模型。它由一个权值矩阵w和偏置向量b参数化。分类通过将输入向量提交到一组超平面，每个超平面对应一个类。输入向量和超平面的距离是这个输入属于该类的一个概率量化。","重建误差可以通过许多方法来度量，基于输入的分布假设。这个传统的平方误差是l(x,z)=||x","降噪自动编码机","降噪自动编码机(denois","降噪自动编码机可以被叠加起来形成一个深度网络，通过反馈前一层的降噪自动编码机的潜在表达（输出编码）作为当前层的输入。这个非监督的预学习结构一次只能学习一个层。每一层都被作为一个降噪自动编码机以最小化重构误差来进行训练。当前k个层被训练完了，我们可以进行k+1层的训练，因此此时我们才可以计算前一层的编码和潜在表达。当所有的层都被训练了，整个网络进行第二阶段训练，称为微调（fine","降噪自动编码机器（denois","降噪自动编码机的思想是很简单饿。为了迫使隐藏层去发现更加鲁棒性的特征，避免它只是去简单的学习定义，我们训练自动编码机去重建被破坏的输入版本的数据。","除非我们去使用正则选项（earli","随机梯度下降","随机梯度下降则是普通梯度下降的优化。通过使用一部分样本来优化梯度代替所有样本优化梯度，从而得以更快逼近结果。下面的代码，我们一次只用一个样本来计算梯度。","随着时间的推移减小学习速率有时候也是一个好主意。一个简单的方法是使用这个公式：u/(1+d*t)，u是初始速率（可以使用上面讲的网格搜索选择），d是减小常量，用以控制学习速率，可以设为0.001或者更小，t是迭代次数或者时间。","隐藏节点数","需要注意的是上述的梯度包含2个项，包括正相位和负相位。正和负的术语不指公式中的每个项的符号，而是反映其对模型所定义的概率密度的影响。第一项增加训练数据的概率（通过减少相关的自由能量），而第二项减小模型产生的样本的概率。","需要注意的是，输入向量x，和其相关的标签y都是定义在logisticregression实体外的。这个类需要将输入数据作为__init__函数的参数。这在将这些类的实例连接起来构建深网络方面非常有用。一层的输出可以作为下一层的输入。","非线性","预计将会得到这样的输出：","默认情况下，这个代码以块数目为1，每一层循环15次来进行预训练预训练。错差等级（corrupt","（这里撇号不代表矩阵转置）当y被给定时，z被看着是对x的预测。可选的，这个权重矩阵w‘的逆映射可用被约束为正向映射的转置：，这被称为捆绑权重。这个模型的所有参数（w，b，b‘，或者不使用捆绑权重w’）通过优化最小平均重构误差来实现训练。"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"简介","keywords":"","body":"Deep Learning Tutorial in Chinese\n深度学习教程中文版\nThis is a Chinese tutorial which is translated from DeepLearning 0.1 documentation. And in this tutorial, all algorithms and models are coded by Python and Theano. Theano is a famous third-party library, and allows coder to use GPU or CPU to run his Python code.\n这是一个翻译自深度学习0.1文档的中文教程。在这个教程里面所有的算法和模型都是通过Pyhton和Theano实现的。Theano是一个著名的第三方库，允许程序员使用GPU或者CPU去运行他的Python代码。\n内容/Contents\n\n入门（Getting Started）\n使用逻辑回归进行MNIST分类(Classifying MNIST digits using Logistic Regression)\n多层感知机（Multilayer Perceptron）\n卷积神经网络（Convolutional Neural Networks(LeNet)）\n降噪自动编码机器（Denoising Autoencoders(dA)）\n层叠自动编码机(Stcaked Denoising Autoencoders(SdA))\n受限波尔兹曼机（Restricted Boltzmann Machines(RBM)）\nDeep Belif Networks\nHybrid Monte-Carlo Sampling\nRecurrent Neural Networks with Word Embeddings\nModeling and generating sequences of polyphonic music the RNN-RBM\nMiscellaneous\n\n版权/Copyright\n作者/Author\nTheano Development Team, LISA lab, University of Montreal\n翻译者/Translator\nLifeng Hua, Zhejiang University\n"},"1_Getting_Started_入门.html":{"url":"1_Getting_Started_入门.html","title":"1.入门","keywords":"","body":"入门（Getting Started）\n这个教程并不是为了巩固研究生或者本科生的机器学习课程，但我们确实对一些重要的概念（和公式）做了的快速的概述，来确保我们在谈论同个概念。同时，你也需要去下载数据集，以便可以跑未来课程的样例代码。\n下载\n 在每一个学习算法的页面，你都需要去下载相关的文件。加入你想要一次下载所有的文件，你可以克隆本教程的git仓库。\ngit clone git://github.com/lisa-lab/DeepLearningTutorials.git\n数据集\nMNIST数据集(mnist.pkl.gz)\n MNIST是一个包含60000个训练样例和10000个测试样例的手写数字图像的数据集。在许多论文，包括本教程，都将60000个训练样例分为50000个样例的训练集和10000个样例的验证集（为了超参数，例如学习率、模型尺寸等等）。所有的数字图像都被归一化和中心化为2828的像素，256位图的灰度图。\n 为了方便在Python中的使用，我们对数据集进行了处理。你可以在这里下载。这个文件被表示为包含3个lists的tuple：训练集、验证集和测试集。每个lists都是都是两个list的组合，一个list是有numpy的1维array表示的784（2828）维的0～1（0是黑，1是白）的float值，另一个list是0～9的图像标签。下面的代码显示了如何去加载这个数据集。\nimport cPickle, gzip, numpy\n# Load the dataset\nf = gzip.open('mnist.pkl.gz', 'rb')\ntrain_set, valid_set, test_set = cPickle.load(f)\nf.close()\n\n 当我们使用这个数据集的时候，通常将它分割维几个minibatch。我们建议你将数据集储存为共享变量（shared variables），通过minibatch的索引（一个固定的被告知的batch的尺寸）来存取它们。使用共享变量的原因是为了使用GPU。因为往GPUX显存中复制数据是一个巨大的开销。如果不使用共享变量，GPU代码的运行效率将不会比CPU代码快。如果你将自己的数据定义为共享变量，当共享变量被构建的时候，你就给了Theano在一次请求中将整个数据复制到GPU上的可能。之后，GPU就可以通过共享变量的slice（切片）来存取任何一个minibatch，而不必再从CPU上拷贝数据。同时，因为数据向量（实数）和标签（整数）通常是不同属性的，测试集、验证集和训练集是不同目的的，所以我们建议通过不同的共享变量来储存（这就产生了6个不同的共享变量）。\n 由于现在的数据再一个变量里面，一个minibatch被定义为这个变量的一个切片。通过指定它的索引和它的尺寸，可以更加自然的来定义一个minibatch。下面的代码展示了如何去存取数据和如何存取一个minibatch。\ndef shared_dataset(data_xy):\n    \"\"\" Function that loads the dataset into shared variables\n\n    The reason we store our dataset in shared variables is to allow\n    Theano to copy it into the GPU memory (when code is run on GPU).\n    Since copying data into the GPU is slow, copying a minibatch everytime\n    is needed (the default behaviour if the data is not in a shared\n    variable) would lead to a large decrease in performance.\n    \"\"\"\n    data_x, data_y = data_xy\n    shared_x = theano.shared(numpy.asarray(data_x, dtype=theano.config.floatX))\n    shared_y = theano.shared(numpy.asarray(data_y, dtype=theano.config.floatX))\n    # When storing data on the GPU it has to be stored as floats\n    # therefore we will store the labels as ``floatX`` as well\n    # (``shared_y`` does exactly that). But during our computations\n    # we need them as ints (we use labels as index, and if they are\n    # floats it doesn't make sense) therefore instead of returning\n    # ``shared_y`` we will have to cast it to int. This little hack\n    # lets us get around this issue\n    return shared_x, T.cast(shared_y, 'int32')\n\n 这个数据以float的形式被存储在GPU上（dtype被定义为theano.confug.floatX）。然后再将标签转换为int型。\n    如果你再GPU上跑代码，并且数据集太大，可能导致内存崩溃。在这个时候，你就应当把数据存储为共享变量。你可以将数据储存为一个充分小的大块（几个minibatch）在一个共享变量里面，然后在训练的时候使用它。一旦你使用了这个大块，更新它储存的值。这将最小化CPU和GPU的内存交换。\n标记\n数据集标记\n我们定义数据集为D,包括3个部分，D_train，D_valid，D_test三个集合。D内每个索引都是一个(x,y)对。\n数学约定\n\nW：大写字母表示矩阵（除非特殊说明）\nW(i,j)：矩阵内（i，j）点的数据\nW(i.)：矩阵的一行\nW(.j)：矩阵的一列\nb：小些字母表示向量（除非特殊说明）\nb(i)：向量内的（i）点的数据符号和缩略语表\n\nD：输入维度的数目\nD_h(i)：第i层个隐层的输入单元数目\nL：标签的数目\nNLL：负对数似然函数\ntheta：给定模型的参数集合\n\nPython命名空间\nimport theano\nimport theano.tensor as T\nimport numpy\n\n深度学习的监督优化入门\n学习一个分类器\n0-1损失函数\n\n\n\n# zero_one_loss is a Theano variable representing a symbolic\n# expression of the zero one loss ; to get the actual value this\n# symbolic expression has to be compiled into a Theano function (see\n# the Theano tutorial for more details)\nzero_one_loss = T.sum(T.neq(T.argmax(p_y_given_x), y))\n\n负对数似然损失函数\n 由于0-1损失函数不可微分，在大型模型中对它优化会造成巨大开销。因此我们通过最大化给定数据标签的似然函数来训练模型。\n\n\n 由于我们通常说最小化损失函数，所以我们给对数似然函数添加负号，来使得我们可以求解最小化负对数似然损失函数。\n# NLL is a symbolic variable ; to get the actual value of NLL, this symbolic\n# expression has to be compiled into a Theano function (see the Theano\n# tutorial for more details)\nNLL = -T.sum(T.log(p_y_given_x)[T.arange(y.shape[0]), y])\n# note on syntax: T.arange(y.shape[0]) is a vector of integers [0,1,2,...,len(y)].\n# Indexing a matrix M by the two vectors [0,1,...,K], [a,b,...,k] returns the\n# elements M[0,a], M[1,b], ..., M[K,k] as a vector.  Here, we use this\n# syntax to retrieve the log-probability of the correct labels, y.\n\n随机梯度下降\n 什么是普通的梯度下降？梯度下降是一个简单的算法，利用负梯度方向来决定每次迭代的新的搜索方向，使得每次迭代能使待优化的目标函数逐步减小。\n伪代码如下所示。\n# GRADIENT DESCENT\n\nwhile True:\n    loss = f(params)\n    d_loss_wrt_params = ... # compute gradient\n    params -= learning_rate * d_loss_wrt_params\n    if :\n        return params\n\n 随机梯度下降则是普通梯度下降的优化。通过使用一部分样本来优化梯度代替所有样本优化梯度，从而得以更快逼近结果。下面的代码，我们一次只用一个样本来计算梯度。\n# STOCHASTIC GRADIENT DESCENT\nfor (x_i,y_i) in training_set:\n                            # imagine an infinite generator\n                            # that may repeat examples (if there is only a finite training set)\n    loss = f(params, x_i, y_i)\n    d_loss_wrt_params = ... # compute gradient\n    params -= learning_rate * d_loss_wrt_params\n    if :\n        return params\n\n 我们不止一次的在深度学习中提及这个变体——“minibatches”。Minibatch随机梯度下降区别与随机梯度下降，在每次梯度估计时使用一个minibatch的数据。这个技术减小了每次梯度估计时的方差，也适合现代电脑的分层内存构架。\nfor (x_batch,y_batch) in train_batches:\n                            # imagine an infinite generator\n                            # that may repeat examples\n    loss = f(params, x_batch, y_batch)\n    d_loss_wrt_params = ... # compute gradient using theano\n    params -= learning_rate * d_loss_wrt_params\n    if :\n        return params\n\n 在选择minibatch的尺寸B时中有个权衡。当尺寸比较大时，在梯度估计时就要花费更多时间计算方差；当尺寸比较小的时候呢，就要进行更多的迭代，也更容易波动。因而尺寸的选择要结合模型、数据集、硬件结构等，从1到几百不等。\n 伪代码如下。\n# Minibatch Stochastic Gradient Descent\n\n# assume loss is a symbolic description of the loss function given\n# the symbolic variables params (shared variable), x_batch, y_batch;\n\n# compute gradient of loss with respect to params\nd_loss_wrt_params = T.grad(loss, params)\n\n# compile the MSGD step into a theano function\nupdates = [(params, params - learning_rate * d_loss_wrt_params)]\nMSGD = theano.function([x_batch,y_batch], loss, updates=updates)\n\nfor (x_batch, y_batch) in train_batches:\n    # here x_batch and y_batch are elements of train_batches and\n    # therefore numpy arrays; function MSGD also updates the params\n    print('Current loss is ', MSGD(x_batch, y_batch))\n    if stopping_condition_is_met:\n        return params\n\n正则化\n 正则化是为了防止在MSGD训练过程中出现过拟合。为了应对过拟合，我们提出了几个方法：L1/L2正则化和early-stopping。\nL1/L2正则化\n L1/L2正则化就是在损失函数中添加额外的项，用以惩罚一定的参数结构。对于L2正则化，又被称为“权制递减（weight decay）”。\n\n\n 原则上来说，增加一个正则项，可以平滑神经网络的网络映射（通过惩罚大的参数值，可以减少网络模型的非线性参数数）。因而最小化这个和，就可以寻找到与训练数据最贴合同时范化性更好的模型。更具奥卡姆剃刀原则，最好的模型总是最简单的。\n 当然，事实上，简单模型并不一定意味着好的泛化。但从经验上看，这个正则化方案可以提高神经网络的泛化能力，尤其是对于小数据集而言。下面的代码我们分别给两个正则项一个对应的权重。\n# symbolic Theano variable that represents the L1 regularization term\nL1  = T.sum(abs(param))\n\n# symbolic Theano variable that represents the squared L2 term\nL2_sqr = T.sum(param ** 2)\n\n# the loss\nloss = NLL + lambda_1 * L1 + lambda_2 * L2\n\nEarly-stopping\n Early-stopping通过监控模型在验证集上的表现来应对过拟合。验证集是一个我们从未在梯度下降中使用，也不在测试集的数据集合，它被认为是为了测试数据的一个表达。当在验证集上，模型的表现不再提高，或者表现更差，那么启发式算法应该放弃继续优化。\n 在选择何时终止优化方面，主要基于主观判断和一些启发式的方法，但在这个教程里，我们使用一个几何级数增加的patience量的策略。\n# early-stopping parameters\npatience = 5000  # look as this many examples regardless\npatience_increase = 2     # wait this much longer when a new best is\n                              # found\nimprovement_threshold = 0.995  # a relative improvement of this much is\n                               # considered significant\nvalidation_frequency = min(n_train_batches, patience/2)\n                              # go through this many\n                              # minibatches before checking the network\n                              # on the validation set; in this case we\n                              # check every epoch\n\nbest_params = None\nbest_validation_loss = numpy.inf\ntest_score = 0.\nstart_time = time.clock()\n\ndone_looping = False\nepoch = 0\nwhile (epoch \n 如果过训练数据的batch批次。\n    这个validation_frequency应该要比patience更小。这个代码应该至少检查了两次，在使用patience之前。这就是我们使用这个等式validation_frequency = min( value, patience/2.的原因。\n    这个算法可能会有更好的表现，当我们通过统计显著性的测试来代替简单的比较来决定是否增加patient。\n测试\n 我们依据在验证集上表现最好的参数作为模型的参数，去在测试集上进行测试。\n总结\n 这是对优化章节的总结。Early-stopping技术需要我们将数据分割为训练集、验证集、测试集。测试集使用minibatch的随机梯度下降来对目标函数进行逼近。同时引入L1/L2正则项来应对过拟合。\nTheano/Python技巧\n载入和保存模型\n 当你做实验的时候，用梯度下降算法可能要好几个小时去发现一个最优解。你可能在发现解的时候，想要保存这些权值。你也可能想要保存搜索进程中当前最优化的解。\n使用Pickle在共享变量中储存numpy的ndarrays\n>>> import cPickle\n>>> save_file = open('path', 'wb')  # this will overwrite current contents\n>>> cPickle.dump(w.get_value(borrow=True), save_file, -1)  # the -1 is for HIGHEST_PROTOCOL\n>>> cPickle.dump(v.get_value(borrow=True), save_file, -1)  # .. and it triggers much more efficient\n>>> cPickle.dump(u.get_value(borrow=True), save_file, -1)  # .. storage than numpy's default\n>>> save_file.close()\n\n>>> save_file = open('path')\n>>> w.set_value(cPickle.load(save_file), borrow=True)\n>>> v.set_value(cPickle.load(save_file), borrow=True)\n>>> u.set_value(cPickle.load(save_file), borrow=True)\n\n"},"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html":{"url":"2_Classifying_MNIST_using_LR_逻辑回归进行MNIST分类.html","title":"2.逻辑回归进行MNIST分类","keywords":"","body":"使用逻辑回归进行MNIST分类（Classifying MNIST using Logistic Regressing）\n本节假定读者属性了下面的Theano概念：共享变量（shared variable）, 基本数学算子（basic arithmetic ops）, Theano的进阶（T.grad）, floatX(默认为float64)。假如你想要在你的GPU上跑你的代码，你也需要看GPU。\n本节的所有代码可以在这里下载。\n在这一节，我们将展示Theano如何实现最基本的分类器：逻辑回归分类器。我们以模型的快速入门开始，复习(refresher)和巩固(anchor)数学负号，也展示了数学表达式如何映射到Theano图中。\n模型\n逻辑回归模型是一个线性概率模型。它由一个权值矩阵W和偏置向量b参数化。分类通过将输入向量提交到一组超平面，每个超平面对应一个类。输入向量和超平面的距离是这个输入属于该类的一个概率量化。\n在给定模型下，输入x，输出为y的概率，可以用如下公式表示\n![probality](/images/2_the_model_1.png)\n\n![y_prediction](/images/2_the_model_2.png)\n\nTheano代码如下。\n        # initialize with 0 the weights W as a matrix of shape (n_in, n_out)\n        self.W = theano.shared(\n            value=numpy.zeros(\n                (n_in, n_out),\n                dtype=theano.config.floatX\n            ),\n            name='W',\n            borrow=True\n        )\n        # initialize the baises b as a vector of n_out 0s\n        self.b = theano.shared(\n            value=numpy.zeros(\n                (n_out,),\n                dtype=theano.config.floatX\n            ),\n            name='b',\n            borrow=True\n        )\n\n        # symbolic expression for computing the matrix of class-membership\n        # probabilities\n        # Where:\n        # W is a matrix where column-k represent the separation hyper plain for\n        # class-k\n        # x is a matrix where row-j  represents input training sample-j\n        # b is a vector where element-k represent the free parameter of hyper\n        # plain-k\n        self.p_y_given_x = T.nnet.softmax(T.dot(input, self.W) + self.b)\n\n        # symbolic description of how to compute prediction as class whose\n        # probability is maximal\n        self.y_pred = T.argmax(self.p_y_given_x, axis=1)\n\n由于模型的参数需要不断的存取和修正，所以我们把W和b定义为共享变量。这个dot（点乘）和softmax运算用以计算这个P(Y|x,W,b)。这个结果p_y_given_x(probability)是一个vector类型的概率向量。\n为了获得实际的模型预测，我们使用T_argmax操作，来返回p_y_given_x的最大值对应的y。\n    如果想要获得完整的Theano算子，看算子列表\n定义一个损失函数\n学习优化模型参数需要最小化一个损失参数。在多分类的逻辑回归中，很显然是使用负对数似然函数作为损失函数。似然函数和损失函数定义如下：\n![loss_function](/images/2_defining_a_loss_function_1.png)\n\n虽然整本书都致力于探讨最小化话题，但梯度下降是迄今为止最简单的最小化非线性函数的方法。在这个教程中，我们使用minibatch随机梯度下降算法。可以看随机梯度下降来获得更多细节。\n下面的代码定义了一个对给定的minibatch的损失函数。\n        # y.shape[0] is (symbolically) the number of rows in y, i.e.,\n        # number of examples (call it n) in the minibatch\n        # T.arange(y.shape[0]) is a symbolic vector which will contain\n        # [0,1,2,... n-1] T.log(self.p_y_given_x) is a matrix of\n        # Log-Probabilities (call it LP) with one row per example and\n        # one column per class LP[T.arange(y.shape[0]),y] is a vector\n        # v containing [LP[0,y[0]], LP[1,y[1]], LP[2,y[2]], ...,\n        # LP[n-1,y[n-1]]] and T.mean(LP[T.arange(y.shape[0]),y]) is\n        # the mean (across minibatch examples) of the elements in v,\n        # i.e., the mean log-likelihood across the minibatch.\n        return -T.mean(T.log(self.p_y_given_x)[T.arange(y.shape[0]), y])\n\n在这里我们使用错误的平均来表示损失函数，以减少minibatch尺寸对我们的影响。\n创建一个逻辑回归类\n现在，我们要定义一个逻辑回归的类，来概括逻辑回归的基本行为。代码已经是我们之前涵盖的了，不再进行过多解释。\nclass LogisticRegression(object):\n    \"\"\"Multi-class Logistic Regression Class\n\n    The logistic regression is fully described by a weight matrix :math:`W`\n    and bias vector :math:`b`. Classification is done by projecting data\n    points onto a set of hyperplanes, the distance to which is used to\n    determine a class membership probability.\n    \"\"\"\n\n    def __init__(self, input, n_in, n_out):\n        \"\"\" Initialize the parameters of the logistic regression\n\n        :type input: theano.tensor.TensorType\n        :param input: symbolic variable that describes the input of the\n                      architecture (one minibatch)\n\n        :type n_in: int\n        :param n_in: number of input units, the dimension of the space in\n                     which the datapoints lie\n\n        :type n_out: int\n        :param n_out: number of output units, the dimension of the space in\n                      which the labels lie\n\n        \"\"\"\n        # start-snippet-1\n        # initialize with 0 the weights W as a matrix of shape (n_in, n_out)\n        self.W = theano.shared(\n            value=numpy.zeros(\n                (n_in, n_out),\n                dtype=theano.config.floatX\n            ),\n            name='W',\n            borrow=True\n        )\n        # initialize the baises b as a vector of n_out 0s\n        self.b = theano.shared(\n            value=numpy.zeros(\n                (n_out,),\n                dtype=theano.config.floatX\n            ),\n            name='b',\n            borrow=True\n        )\n\n        # symbolic expression for computing the matrix of class-membership\n        # probabilities\n        # Where:\n        # W is a matrix where column-k represent the separation hyper plain for\n        # class-k\n        # x is a matrix where row-j  represents input training sample-j\n        # b is a vector where element-k represent the free parameter of hyper\n        # plain-k\n        self.p_y_given_x = T.nnet.softmax(T.dot(input, self.W) + self.b)\n\n        # symbolic description of how to compute prediction as class whose\n        # probability is maximal\n        self.y_pred = T.argmax(self.p_y_given_x, axis=1)\n        # end-snippet-1\n\n        # parameters of the model\n        self.params = [self.W, self.b]\n\n    def negative_log_likelihood(self, y):\n        \"\"\"Return the mean of the negative log-likelihood of the prediction\n        of this model under a given target distribution.\n\n        .. math::\n\n            \\frac{1}{|\\mathcal{D}|} \\mathcal{L} (\\theta=\\{W,b\\}, \\mathcal{D}) =\n            \\frac{1}{|\\mathcal{D}|} \\sum_{i=0}^{|\\mathcal{D}|}\n                \\log(P(Y=y^{(i)}|x^{(i)}, W,b)) \\\\\n            \\ell (\\theta=\\{W,b\\}, \\mathcal{D})\n\n        :type y: theano.tensor.TensorType\n        :param y: corresponds to a vector that gives for each example the\n                  correct label\n\n        Note: we use the mean instead of the sum so that\n              the learning rate is less dependent on the batch size\n        \"\"\"\n        # start-snippet-2\n        # y.shape[0] is (symbolically) the number of rows in y, i.e.,\n        # number of examples (call it n) in the minibatch\n        # T.arange(y.shape[0]) is a symbolic vector which will contain\n        # [0,1,2,... n-1] T.log(self.p_y_given_x) is a matrix of\n        # Log-Probabilities (call it LP) with one row per example and\n        # one column per class LP[T.arange(y.shape[0]),y] is a vector\n        # v containing [LP[0,y[0]], LP[1,y[1]], LP[2,y[2]], ...,\n        # LP[n-1,y[n-1]]] and T.mean(LP[T.arange(y.shape[0]),y]) is\n        # the mean (across minibatch examples) of the elements in v,\n        # i.e., the mean log-likelihood across the minibatch.\n        return -T.mean(T.log(self.p_y_given_x)[T.arange(y.shape[0]), y])\n        # end-snippet-2\n\n    def errors(self, y):\n        \"\"\"Return a float representing the number of errors in the minibatch\n        over the total number of examples of the minibatch ; zero one\n        loss over the size of the minibatch\n\n        :type y: theano.tensor.TensorType\n        :param y: corresponds to a vector that gives for each example the\n                  correct label\n        \"\"\"\n\n        # check if y has same dimension of y_pred\n        if y.ndim != self.y_pred.ndim:\n            raise TypeError(\n                'y should have the same shape as self.y_pred',\n                ('y', y.type, 'y_pred', self.y_pred.type)\n            )\n        # check if y is of the correct datatype\n        if y.dtype.startswith('int'):\n            # the T.neq operator returns a vector of 0s and 1s, where 1\n            # represents a mistake in prediction\n            return T.mean(T.neq(self.y_pred, y))\n        else:\n            raise NotImplementedError()\n\n我们通过如下代码来实例化这个类。\n    # generate symbolic variables for input (x and y represent a\n    # minibatch)\n    x = T.matrix('x')  # data, presented as rasterized images\n    y = T.ivector('y')  # labels, presented as 1D vector of [int] labels\n\n    # construct the logistic regression class\n    # Each MNIST image has size 28*28\n    classifier = LogisticRegression(input=x, n_in=28 * 28, n_out=10)\n\n需要注意的是，输入向量x，和其相关的标签y都是定义在LogisticRegression实体外的。这个类需要将输入数据作为__init__函数的参数。这在将这些类的实例连接起来构建深网络方面非常有用。一层的输出可以作为下一层的输入。\n最后，我们定义了一个cost变量来最小化。\n    # the cost we minimize during training is the negative log likelihood of\n    # the model in symbolic format\n    cost = classifier.negative_log_likelihood(y)\n\n学习模型\n在实现MSGD的许多语言中，需要通过手动求解损失函数对每个参数的梯度（微分）来实现。\n在Theano中呢，这是非常简单的。它自动微分，并且使用了一定的数学转换来提高数学稳定性。\n    g_W = T.grad(cost=cost, wrt=classifier.W)\n    g_b = T.grad(cost=cost, wrt=classifier.b)\n\n这个函数train_model可以被定义如下。\n    # specify how to update the parameters of the model as a list of\n    # (variable, update expression) pairs.\n    updates = [(classifier.W, classifier.W - learning_rate * g_W),\n               (classifier.b, classifier.b - learning_rate * g_b)]\n\n    # compiling a Theano function `train_model` that returns the cost, but in\n    # the same time updates the parameter of the model based on the rules\n    # defined in `updates`\n    train_model = theano.function(\n        inputs=[index],\n        outputs=cost,\n        updates=updates,\n        givens={\n            x: train_set_x[index * batch_size: (index + 1) * batch_size],\n            y: train_set_y[index * batch_size: (index + 1) * batch_size]\n        }\n    )\n\nupdate是一个list，用以更新每一步的参数。given是一个字典，用以表示象征变量，和你在该步中表示的数据。这个train_model定义如下：\n\n输入是minibatch的index，batch的大小之前已经固定，以此被定义为x，以及其相关的y。\n返回是该index下与x，y相关的cost/损失函数。\n每一次函数调用，它都先用index对应的训练集的切片来更新x，y。然后计算该minibatch下的cost，以及申请update操作。\n每次train_model(inedx)被调用，它都计算并返回该minibatch的cost，当然这也是MSGD的一步。整个学习算法因循环了数据集所有样例。\n\n训练模型\n在之前论述中所说，我们对分类错误的样本感兴趣（不仅仅是可能性）。因此模型中增加了一个额外的实例方法，来纪录每个minibatch中的错误分类样例数。\n   def errors(self, y):\n        \"\"\"Return a float representing the number of errors in the minibatch\n        over the total number of examples of the minibatch ; zero one\n        loss over the size of the minibatch\n\n        :type y: theano.tensor.TensorType\n        :param y: corresponds to a vector that gives for each example the\n                  correct label\n        \"\"\"\n\n        # check if y has same dimension of y_pred\n        if y.ndim != self.y_pred.ndim:\n            raise TypeError(\n                'y should have the same shape as self.y_pred',\n                ('y', y.type, 'y_pred', self.y_pred.type)\n            )\n        # check if y is of the correct datatype\n        if y.dtype.startswith('int'):\n            # the T.neq operator returns a vector of 0s and 1s, where 1\n            # represents a mistake in prediction\n            return T.mean(T.neq(self.y_pred, y))\n        else:\n            raise NotImplementedError()\n\n我们创建了test_model函数，然后也创建了validate_model来调用去修正这个值。当然validate_model是early-stopping的关键。它们都是来统计minibatch中分类错误的样例数。\n    # compiling a Theano function that computes the mistakes that are made by\n    # the model on a minibatch\n    test_model = theano.function(\n        inputs=[index],\n        outputs=classifier.errors(y),\n        givens={\n            x: test_set_x[index * batch_size: (index + 1) * batch_size],\n            y: test_set_y[index * batch_size: (index + 1) * batch_size]\n        }\n    )\n\n    validate_model = theano.function(\n        inputs=[index],\n        outputs=classifier.errors(y),\n        givens={\n            x: valid_set_x[index * batch_size: (index + 1) * batch_size],\n            y: valid_set_y[index * batch_size: (index + 1) * batch_size]\n        }\n    )\n\n把它们组合起来\n最后的代码如下。\n\"\"\"\nThis tutorial introduces logistic regression using Theano and stochastic\ngradient descent.\n\nLogistic regression is a probabilistic, linear classifier. It is parametrized\nby a weight matrix :math:`W` and a bias vector :math:`b`. Classification is\ndone by projecting data points onto a set of hyperplanes, the distance to\nwhich is used to determine a class membership probability.\n\nMathematically, this can be written as:\n\n.. math::\n  P(Y=i|x, W,b) &= softmax_i(W x + b) \\\\\n                &= \\frac {e^{W_i x + b_i}} {\\sum_j e^{W_j x + b_j}}\n\n\nThe output of the model or prediction is then done by taking the argmax of\nthe vector whose i'th element is P(Y=i|x).\n\n.. math::\n\n  y_{pred} = argmax_i P(Y=i|x,W,b)\n\n\nThis tutorial presents a stochastic gradient descent optimization method\nsuitable for large datasets.\n\n\nReferences:\n\n    - textbooks: \"Pattern Recognition and Machine Learning\" -\n                 Christopher M. Bishop, section 4.3.2\n\n\"\"\"\n__docformat__ = 'restructedtext en'\n\nimport cPickle\nimport gzip\nimport os\nimport sys\nimport time\n\nimport numpy\n\nimport theano\nimport theano.tensor as T\n\n\nclass LogisticRegression(object):\n    \"\"\"Multi-class Logistic Regression Class\n\n    The logistic regression is fully described by a weight matrix :math:`W`\n    and bias vector :math:`b`. Classification is done by projecting data\n    points onto a set of hyperplanes, the distance to which is used to\n    determine a class membership probability.\n    \"\"\"\n\n    def __init__(self, input, n_in, n_out):\n        \"\"\" Initialize the parameters of the logistic regression\n\n        :type input: theano.tensor.TensorType\n        :param input: symbolic variable that describes the input of the\n                      architecture (one minibatch)\n\n        :type n_in: int\n        :param n_in: number of input units, the dimension of the space in\n                     which the datapoints lie\n\n        :type n_out: int\n        :param n_out: number of output units, the dimension of the space in\n                      which the labels lie\n\n        \"\"\"\n        # start-snippet-1\n        # initialize with 0 the weights W as a matrix of shape (n_in, n_out)\n        self.W = theano.shared(\n            value=numpy.zeros(\n                (n_in, n_out),\n                dtype=theano.config.floatX\n            ),\n            name='W',\n            borrow=True\n        )\n        # initialize the baises b as a vector of n_out 0s\n        self.b = theano.shared(\n            value=numpy.zeros(\n                (n_out,),\n                dtype=theano.config.floatX\n            ),\n            name='b',\n            borrow=True\n        )\n\n        # symbolic expression for computing the matrix of class-membership\n        # probabilities\n        # Where:\n        # W is a matrix where column-k represent the separation hyper plain for\n        # class-k\n        # x is a matrix where row-j  represents input training sample-j\n        # b is a vector where element-k represent the free parameter of hyper\n        # plain-k\n        self.p_y_given_x = T.nnet.softmax(T.dot(input, self.W) + self.b)\n\n        # symbolic description of how to compute prediction as class whose\n        # probability is maximal\n        self.y_pred = T.argmax(self.p_y_given_x, axis=1)\n        # end-snippet-1\n\n        # parameters of the model\n        self.params = [self.W, self.b]\n\n    def negative_log_likelihood(self, y):\n        \"\"\"Return the mean of the negative log-likelihood of the prediction\n        of this model under a given target distribution.\n\n        .. math::\n\n            \\frac{1}{|\\mathcal{D}|} \\mathcal{L} (\\theta=\\{W,b\\}, \\mathcal{D}) =\n            \\frac{1}{|\\mathcal{D}|} \\sum_{i=0}^{|\\mathcal{D}|}\n                \\log(P(Y=y^{(i)}|x^{(i)}, W,b)) \\\\\n            \\ell (\\theta=\\{W,b\\}, \\mathcal{D})\n\n        :type y: theano.tensor.TensorType\n        :param y: corresponds to a vector that gives for each example the\n                  correct label\n\n        Note: we use the mean instead of the sum so that\n              the learning rate is less dependent on the batch size\n        \"\"\"\n        # start-snippet-2\n        # y.shape[0] is (symbolically) the number of rows in y, i.e.,\n        # number of examples (call it n) in the minibatch\n        # T.arange(y.shape[0]) is a symbolic vector which will contain\n        # [0,1,2,... n-1] T.log(self.p_y_given_x) is a matrix of\n        # Log-Probabilities (call it LP) with one row per example and\n        # one column per class LP[T.arange(y.shape[0]),y] is a vector\n        # v containing [LP[0,y[0]], LP[1,y[1]], LP[2,y[2]], ...,\n        # LP[n-1,y[n-1]]] and T.mean(LP[T.arange(y.shape[0]),y]) is\n        # the mean (across minibatch examples) of the elements in v,\n        # i.e., the mean log-likelihood across the minibatch.\n        return -T.mean(T.log(self.p_y_given_x)[T.arange(y.shape[0]), y])\n        # end-snippet-2\n\n    def errors(self, y):\n        \"\"\"Return a float representing the number of errors in the minibatch\n        over the total number of examples of the minibatch ; zero one\n        loss over the size of the minibatch\n\n        :type y: theano.tensor.TensorType\n        :param y: corresponds to a vector that gives for each example the\n                  correct label\n        \"\"\"\n\n        # check if y has same dimension of y_pred\n        if y.ndim != self.y_pred.ndim:\n            raise TypeError(\n                'y should have the same shape as self.y_pred',\n                ('y', y.type, 'y_pred', self.y_pred.type)\n            )\n        # check if y is of the correct datatype\n        if y.dtype.startswith('int'):\n            # the T.neq operator returns a vector of 0s and 1s, where 1\n            # represents a mistake in prediction\n            return T.mean(T.neq(self.y_pred, y))\n        else:\n            raise NotImplementedError()\n\n\ndef load_data(dataset):\n    ''' Loads the dataset\n\n    :type dataset: string\n    :param dataset: the path to the dataset (here MNIST)\n    '''\n\n    #############\n    # LOAD DATA #\n    #############\n\n    # Download the MNIST dataset if it is not present\n    data_dir, data_file = os.path.split(dataset)\n    if data_dir == \"\" and not os.path.isfile(dataset):\n        # Check if dataset is in the data directory.\n        new_path = os.path.join(\n            os.path.split(__file__)[0],\n            \"..\",\n            \"data\",\n            dataset\n        )\n        if os.path.isfile(new_path) or data_file == 'mnist.pkl.gz':\n            dataset = new_path\n\n    if (not os.path.isfile(dataset)) and data_file == 'mnist.pkl.gz':\n        import urllib\n        origin = (\n            'http://www.iro.umontreal.ca/~lisa/deep/data/mnist/mnist.pkl.gz'\n        )\n        print 'Downloading data from %s' % origin\n        urllib.urlretrieve(origin, dataset)\n\n    print '... loading data'\n\n    # Load the dataset\n    f = gzip.open(dataset, 'rb')\n    train_set, valid_set, test_set = cPickle.load(f)\n    f.close()\n    #train_set, valid_set, test_set format: tuple(input, target)\n    #input is an numpy.ndarray of 2 dimensions (a matrix)\n    #witch row's correspond to an example. target is a\n    #numpy.ndarray of 1 dimensions (vector)) that have the same length as\n    #the number of rows in the input. It should give the target\n    #target to the example with the same index in the input.\n\n    def shared_dataset(data_xy, borrow=True):\n        \"\"\" Function that loads the dataset into shared variables\n\n        The reason we store our dataset in shared variables is to allow\n        Theano to copy it into the GPU memory (when code is run on GPU).\n        Since copying data into the GPU is slow, copying a minibatch everytime\n        is needed (the default behaviour if the data is not in a shared\n        variable) would lead to a large decrease in performance.\n        \"\"\"\n        data_x, data_y = data_xy\n        shared_x = theano.shared(numpy.asarray(data_x,\n                                               dtype=theano.config.floatX),\n                                 borrow=borrow)\n        shared_y = theano.shared(numpy.asarray(data_y,\n                                               dtype=theano.config.floatX),\n                                 borrow=borrow)\n        # When storing data on the GPU it has to be stored as floats\n        # therefore we will store the labels as ``floatX`` as well\n        # (``shared_y`` does exactly that). But during our computations\n        # we need them as ints (we use labels as index, and if they are\n        # floats it doesn't make sense) therefore instead of returning\n        # ``shared_y`` we will have to cast it to int. This little hack\n        # lets ous get around this issue\n        return shared_x, T.cast(shared_y, 'int32')\n\n    test_set_x, test_set_y = shared_dataset(test_set)\n    valid_set_x, valid_set_y = shared_dataset(valid_set)\n    train_set_x, train_set_y = shared_dataset(train_set)\n\n    rval = [(train_set_x, train_set_y), (valid_set_x, valid_set_y),\n            (test_set_x, test_set_y)]\n    return rval\n\n\ndef sgd_optimization_mnist(learning_rate=0.13, n_epochs=1000,\n                           dataset='mnist.pkl.gz',\n                           batch_size=600):\n    \"\"\"\n    Demonstrate stochastic gradient descent optimization of a log-linear\n    model\n\n    This is demonstrated on MNIST.\n\n    :type learning_rate: float\n    :param learning_rate: learning rate used (factor for the stochastic\n                          gradient)\n\n    :type n_epochs: int\n    :param n_epochs: maximal number of epochs to run the optimizer\n\n    :type dataset: string\n    :param dataset: the path of the MNIST dataset file from\n                 http://www.iro.umontreal.ca/~lisa/deep/data/mnist/mnist.pkl.gz\n\n    \"\"\"\n    datasets = load_data(dataset)\n\n    train_set_x, train_set_y = datasets[0]\n    valid_set_x, valid_set_y = datasets[1]\n    test_set_x, test_set_y = datasets[2]\n\n    # compute number of minibatches for training, validation and testing\n    n_train_batches = train_set_x.get_value(borrow=True).shape[0] / batch_size\n    n_valid_batches = valid_set_x.get_value(borrow=True).shape[0] / batch_size\n    n_test_batches = test_set_x.get_value(borrow=True).shape[0] / batch_size\n\n    ######################\n    # BUILD ACTUAL MODEL #\n    ######################\n    print '... building the model'\n\n    # allocate symbolic variables for the data\n    index = T.lscalar()  # index to a [mini]batch\n\n    # generate symbolic variables for input (x and y represent a\n    # minibatch)\n    x = T.matrix('x')  # data, presented as rasterized images\n    y = T.ivector('y')  # labels, presented as 1D vector of [int] labels\n\n    # construct the logistic regression class\n    # Each MNIST image has size 28*28\n    classifier = LogisticRegression(input=x, n_in=28 * 28, n_out=10)\n\n    # the cost we minimize during training is the negative log likelihood of\n    # the model in symbolic format\n    cost = classifier.negative_log_likelihood(y)\n\n    # compiling a Theano function that computes the mistakes that are made by\n    # the model on a minibatch\n    test_model = theano.function(\n        inputs=[index],\n        outputs=classifier.errors(y),\n        givens={\n            x: test_set_x[index * batch_size: (index + 1) * batch_size],\n            y: test_set_y[index * batch_size: (index + 1) * batch_size]\n        }\n    )\n\n    validate_model = theano.function(\n        inputs=[index],\n        outputs=classifier.errors(y),\n        givens={\n            x: valid_set_x[index * batch_size: (index + 1) * batch_size],\n            y: valid_set_y[index * batch_size: (index + 1) * batch_size]\n        }\n    )\n\n    # compute the gradient of cost with respect to theta = (W,b)\n    g_W = T.grad(cost=cost, wrt=classifier.W)\n    g_b = T.grad(cost=cost, wrt=classifier.b)\n\n    # start-snippet-3\n    # specify how to update the parameters of the model as a list of\n    # (variable, update expression) pairs.\n    updates = [(classifier.W, classifier.W - learning_rate * g_W),\n               (classifier.b, classifier.b - learning_rate * g_b)]\n\n    # compiling a Theano function `train_model` that returns the cost, but in\n    # the same time updates the parameter of the model based on the rules\n    # defined in `updates`\n    train_model = theano.function(\n        inputs=[index],\n        outputs=cost,\n        updates=updates,\n        givens={\n            x: train_set_x[index * batch_size: (index + 1) * batch_size],\n            y: train_set_y[index * batch_size: (index + 1) * batch_size]\n        }\n    )\n    # end-snippet-3\n\n    ###############\n    # TRAIN MODEL #\n    ###############\n    print '... training the model'\n    # early-stopping parameters\n    patience = 5000  # look as this many examples regardless\n    patience_increase = 2  # wait this much longer when a new best is\n                                  # found\n    improvement_threshold = 0.995  # a relative improvement of this much is\n                                  # considered significant\n    validation_frequency = min(n_train_batches, patience / 2)\n                                  # go through this many\n                                  # minibatche before checking the network\n                                  # on the validation set; in this case we\n                                  # check every epoch\n\n    best_validation_loss = numpy.inf\n    test_score = 0.\n    start_time = time.clock()\n\n    done_looping = False\n    epoch = 0\n    while (epoch > sys.stderr, ('The code for file ' +\n                          os.path.split(__file__)[1] +\n                          ' ran for %.1fs' % ((end_time - start_time)))\n\nif __name__ == '__main__':\n    sgd_optimization_mnist()\n\n这个输出将是如下的格式\n...\nepoch 72, minibatch 83/83, validation error 7.510417 %\nepoch 72, minibatch 83/83, test error of best model 7.510417 %\nepoch 73, minibatch 83/83, validation error 7.500000 %\nepoch 73, minibatch 83/83, test error of best model 7.489583 %\nOptimization complete with best validation score of 7.500000 %,with test performance 7.489583 %\nThe code run for 74 epochs, with 1.936983 epochs/sec\n在Intel(R) Core(TM)2 Duo CPU E8400 @ 3.00 Ghz上，这个代码的速度是1.936 epochs/sec然后跑75 epochs，得到测试错误率为7.489%。在GPU上为10.0 epochs/sec在这个实例中我们定义为batch的大小为600。\n"},"3_Multilayer_Perceptron_多层感知机.html":{"url":"3_Multilayer_Perceptron_多层感知机.html","title":"3.多层感知机","keywords":"","body":"多层感知机（Multilayer Perceptron）\n在本节中，假设你已经了解了使用逻辑回归进行MNIST分类。同时本节的所有代码可以在这里下载.\n下一个我们将在Theano中使用的结构是单隐层的多层感知机（MLP）。MLP可以被看作一个逻辑回归分类器。这个中间层被称为隐藏层。一个单隐层对于MLP成为通用近似器是有效的。然而在后面，我们将讲述使用多个隐藏层的好处，例如深度学习的前提。这个课程介绍了MLP，反向误差传导，如何训练MLPs。\n模型\n一个多层感知机（或者说人工神经网络——ANN）,在只有一个隐藏层时可以被表示为如下的图：\n\n事实上，一个单隐藏层的MLP是一个如下的函数，其中x是输入向量的维度，L是输出向量的维度。我们用下面的公式来表示MLP模型：\n\n其中b_1，W_1是输出层到隐藏层的偏置向量和权值矩阵，s是该层的激活函数。而b_2，W_2是隐藏层到输出层的偏置向量和权值矩阵，G是该层的激活函数。通常选择s为sigmoid函数，G为softmax函数。\n在训练MLP模型的参数时，我们使用minibatch的随机梯度下降，在获得梯度后使用反向误差传导算法来实现参数的训练。由于Theano提供自动的微分，我们不需要在这个教程里面谈及这个方面。\n从逻辑回归到多层感知机\n本教程将专注于单隐藏层的MLP。我们以隐藏层的类的实现开始，如果要构建一个MLP，只需要在此基础上添加一个逻辑回归就好。\nclass HiddenLayer(object):\n    def __init__(self, rng, input, n_in, n_out, W=None, b=None,\n                 activation=T.tanh):\n        \"\"\"\n        Typical hidden layer of a MLP: units are fully-connected and have\n        sigmoidal activation function. Weight matrix W is of shape (n_in,n_out)\n        and the bias vector b is of shape (n_out,).\n\n        NOTE : The nonlinearity used here is tanh\n\n        Hidden unit activation is given by: tanh(dot(input,W) + b)\n\n        :type rng: numpy.random.RandomState\n        :param rng: a random number generator used to initialize weights\n\n        :type input: theano.tensor.dmatrix\n        :param input: a symbolic tensor of shape (n_examples, n_in)\n\n        :type n_in: int\n        :param n_in: dimensionality of input\n\n        :type n_out: int\n        :param n_out: number of hidden units\n\n        :type activation: theano.Op or function\n        :param activation: Non linearity to be applied in the hidden\n                           layer\n        \"\"\"\n        self.input = input\n\n一个隐藏层的权值初始化，应当从基于激活函数的均匀间隔中均匀采样。对于sigmoid函数而言，这个间隔是。其中fan_in是第（i－1）层的单元数目，fan_out是第（i）层单元的数目，结论出自这里。\n这样的初始化，保证了在训练的早期，每个神经元都可以工作在它激活函数的控制范围内，从而使得信息可以更简单的前向传导（从输入到输出的激活）和后向传导（从输出到输入的梯度）。\n        # `W` is initialized with `W_values` which is uniformely sampled\n        # from sqrt(-6./(n_in+n_hidden)) and sqrt(6./(n_in+n_hidden))\n        # for tanh activation function\n        # the output of uniform if converted using asarray to dtype\n        # theano.config.floatX so that the code is runable on GPU\n        # Note : optimal initialization of weights is dependent on the\n        #        activation function used (among other things).\n        #        For example, results presented in [Xavier10] suggest that you\n        #        should use 4 times larger initial weights for sigmoid\n        #        compared to tanh\n        #        We have no info for other function, so we use the same as\n        #        tanh.\n        if W is None:\n            W_values = numpy.asarray(\n                rng.uniform(\n                    low=-numpy.sqrt(6. / (n_in + n_out)),\n                    high=numpy.sqrt(6. / (n_in + n_out)),\n                    size=(n_in, n_out)\n                ),\n                dtype=theano.config.floatX\n            )\n            if activation == theano.tensor.nnet.sigmoid:\n                W_values *= 4\n\n            W = theano.shared(value=W_values, name='W', borrow=True)\n\n        if b is None:\n            b_values = numpy.zeros((n_out,), dtype=theano.config.floatX)\n            b = theano.shared(value=b_values, name='b', borrow=True)\n\n        self.W = W\n        self.b = b\n\n注意，我们通过会将一个给定的非线性函数作为隐藏层的激活函数。默认是tanh函数，当然很多时候你可能需要其他函数。\n        lin_output = T.dot(input, self.W) + self.b\n        self.output = (\n            lin_output if activation is None\n            else activation(lin_output)\n        )\n\n如果你已经阅读了上面的隐藏层输出和使用逻辑回归进行MNIST分类。那么你可以看下面的MLP类的实现了。\nclass MLP(object):\n    \"\"\"Multi-Layer Perceptron Class\n\n    A multilayer perceptron is a feedforward artificial neural network model\n    that has one layer or more of hidden units and nonlinear activations.\n    Intermediate layers usually have as activation function tanh or the\n    sigmoid function (defined here by a ``HiddenLayer`` class)  while the\n    top layer is a softamx layer (defined here by a ``LogisticRegression``\n    class).\n    \"\"\"\n\n    def __init__(self, rng, input, n_in, n_hidden, n_out):\n        \"\"\"Initialize the parameters for the multilayer perceptron\n\n        :type rng: numpy.random.RandomState\n        :param rng: a random number generator used to initialize weights\n\n        :type input: theano.tensor.TensorType\n        :param input: symbolic variable that describes the input of the\n        architecture (one minibatch)\n\n        :type n_in: int\n        :param n_in: number of input units, the dimension of the space in\n        which the datapoints lie\n\n        :type n_hidden: int\n        :param n_hidden: number of hidden units\n\n        :type n_out: int\n        :param n_out: number of output units, the dimension of the space in\n        which the labels lie\n\n        \"\"\"\n\n        # Since we are dealing with a one hidden layer MLP, this will translate\n        # into a HiddenLayer with a tanh activation function connected to the\n        # LogisticRegression layer; the activation function can be replaced by\n        # sigmoid or any other nonlinear function\n        self.hiddenLayer = HiddenLayer(\n            rng=rng,\n            input=input,\n            n_in=n_in,\n            n_out=n_hidden,\n            activation=T.tanh\n        )\n\n        # The logistic regression layer gets as input the hidden units\n        # of the hidden layer\n        self.logRegressionLayer = LogisticRegression(\n            input=self.hiddenLayer.output,\n            n_in=n_hidden,\n            n_out=n_out\n        )\n\n在本节中，我们也使用L1/L2正则化（L1/L2正则化）。所以我们需要去计算W_1和W_2矩阵的L1正则和L2平方正则。\n        # L1 norm ; one regularization option is to enforce L1 norm to\n        # be small\n        self.L1 = (\n            abs(self.hiddenLayer.W).sum()\n            + abs(self.logRegressionLayer.W).sum()\n        )\n\n        # square of L2 norm ; one regularization option is to enforce\n        # square of L2 norm to be small\n        self.L2_sqr = (\n            (self.hiddenLayer.W ** 2).sum()\n            + (self.logRegressionLayer.W ** 2).sum()\n        )\n\n        # negative log likelihood of the MLP is given by the negative\n        # log likelihood of the output of the model, computed in the\n        # logistic regression layer\n        self.negative_log_likelihood = (\n            self.logRegressionLayer.negative_log_likelihood\n        )\n        # same holds for the function computing the number of errors\n        self.errors = self.logRegressionLayer.errors\n\n        # the parameters of the model are the parameters of the two layer it is\n        # made out of\n        self.params = self.hiddenLayer.params + self.logRegressionLayer.params\n\n在此之前，我们使用minibatch的随机梯度下降来训练这个模型。不同的是，我们现在在cost函数里面添加了正则项。L1_reg和L2_reg可以控制权值矩阵的正则化。计算新cost的代码如下：\n    # the cost we minimize during training is the negative log likelihood of\n    # the model plus the regularization terms (L1 and L2); cost is expressed\n    # here symbolically\n    cost = (\n        classifier.negative_log_likelihood(y)\n        + L1_reg * classifier.L1\n        + L2_reg * classifier.L2_sqr\n    )\n\n我们使用梯度来更新模型参数，这基本和逻辑回归里面的一样。我们从模型的params中获取参数列表，然后分析它，并计算每一步的梯度。\n    # compute the gradient of cost with respect to theta (sotred in params)\n    # the resulting gradients will be stored in a list gparams\n    gparams = [T.grad(cost, param) for param in classifier.params]\n\n    # specify how to update the parameters of the model as a list of\n    # (variable, update expression) pairs\n\n    # given two list the zip A = [a1, a2, a3, a4] and B = [b1, b2, b3, b4] of\n    # same length, zip generates a list C of same size, where each element\n    # is a pair formed from the two lists :\n    #    C = [(a1, b1), (a2, b2), (a3, b3), (a4, b4)]\n    updates = [\n        (param, param - learning_rate * gparam)\n        for param, gparam in zip(classifier.params, gparams)\n    ]\n\n    # compiling a Theano function `train_model` that returns the cost, but\n    # in the same time updates the parameter of the model based on the rules\n    # defined in `updates`\n    train_model = theano.function(\n        inputs=[index],\n        outputs=cost,\n        updates=updates,\n        givens={\n            x: train_set_x[index * batch_size: (index + 1) * batch_size],\n            y: train_set_y[index * batch_size: (index + 1) * batch_size]\n        }\n    )\n\n把它组合起来\n已经解释了所有的基本该概念，下面的代码就是一个完整的MLP类。\n\"\"\"\nThis tutorial introduces the multilayer perceptron using Theano.\n\n A multilayer perceptron is a logistic regressor where\ninstead of feeding the input to the logistic regression you insert a\nintermediate layer, called the hidden layer, that has a nonlinear\nactivation function (usually tanh or sigmoid) . One can use many such\nhidden layers making the architecture deep. The tutorial will also tackle\nthe problem of MNIST digit classification.\n\n.. math::\n\n    f(x) = G( b^{(2)} + W^{(2)}( s( b^{(1)} + W^{(1)} x))),\n\nReferences:\n\n    - textbooks: \"Pattern Recognition and Machine Learning\" -\n                 Christopher M. Bishop, section 5\n\n\"\"\"\n__docformat__ = 'restructedtext en'\n\n\nimport os\nimport sys\nimport time\n\nimport numpy\n\nimport theano\nimport theano.tensor as T\n\n\nfrom logistic_sgd import LogisticRegression, load_data\n\n\n# start-snippet-1\nclass HiddenLayer(object):\n    def __init__(self, rng, input, n_in, n_out, W=None, b=None,\n                 activation=T.tanh):\n        \"\"\"\n        Typical hidden layer of a MLP: units are fully-connected and have\n        sigmoidal activation function. Weight matrix W is of shape (n_in,n_out)\n        and the bias vector b is of shape (n_out,).\n\n        NOTE : The nonlinearity used here is tanh\n\n        Hidden unit activation is given by: tanh(dot(input,W) + b)\n\n        :type rng: numpy.random.RandomState\n        :param rng: a random number generator used to initialize weights\n\n        :type input: theano.tensor.dmatrix\n        :param input: a symbolic tensor of shape (n_examples, n_in)\n\n        :type n_in: int\n        :param n_in: dimensionality of input\n\n        :type n_out: int\n        :param n_out: number of hidden units\n\n        :type activation: theano.Op or function\n        :param activation: Non linearity to be applied in the hidden\n                           layer\n        \"\"\"\n        self.input = input\n        # end-snippet-1\n\n        # `W` is initialized with `W_values` which is uniformely sampled\n        # from sqrt(-6./(n_in+n_hidden)) and sqrt(6./(n_in+n_hidden))\n        # for tanh activation function\n        # the output of uniform if converted using asarray to dtype\n        # theano.config.floatX so that the code is runable on GPU\n        # Note : optimal initialization of weights is dependent on the\n        #        activation function used (among other things).\n        #        For example, results presented in [Xavier10] suggest that you\n        #        should use 4 times larger initial weights for sigmoid\n        #        compared to tanh\n        #        We have no info for other function, so we use the same as\n        #        tanh.\n        if W is None:\n            W_values = numpy.asarray(\n                rng.uniform(\n                    low=-numpy.sqrt(6. / (n_in + n_out)),\n                    high=numpy.sqrt(6. / (n_in + n_out)),\n                    size=(n_in, n_out)\n                ),\n                dtype=theano.config.floatX\n            )\n            if activation == theano.tensor.nnet.sigmoid:\n                W_values *= 4\n\n            W = theano.shared(value=W_values, name='W', borrow=True)\n\n        if b is None:\n            b_values = numpy.zeros((n_out,), dtype=theano.config.floatX)\n            b = theano.shared(value=b_values, name='b', borrow=True)\n\n        self.W = W\n        self.b = b\n\n        lin_output = T.dot(input, self.W) + self.b\n        self.output = (\n            lin_output if activation is None\n            else activation(lin_output)\n        )\n        # parameters of the model\n        self.params = [self.W, self.b]\n\n\n# start-snippet-2\nclass MLP(object):\n    \"\"\"Multi-Layer Perceptron Class\n\n    A multilayer perceptron is a feedforward artificial neural network model\n    that has one layer or more of hidden units and nonlinear activations.\n    Intermediate layers usually have as activation function tanh or the\n    sigmoid function (defined here by a ``HiddenLayer`` class)  while the\n    top layer is a softamx layer (defined here by a ``LogisticRegression``\n    class).\n    \"\"\"\n\n    def __init__(self, rng, input, n_in, n_hidden, n_out):\n        \"\"\"Initialize the parameters for the multilayer perceptron\n\n        :type rng: numpy.random.RandomState\n        :param rng: a random number generator used to initialize weights\n\n        :type input: theano.tensor.TensorType\n        :param input: symbolic variable that describes the input of the\n        architecture (one minibatch)\n\n        :type n_in: int\n        :param n_in: number of input units, the dimension of the space in\n        which the datapoints lie\n\n        :type n_hidden: int\n        :param n_hidden: number of hidden units\n\n        :type n_out: int\n        :param n_out: number of output units, the dimension of the space in\n        which the labels lie\n\n        \"\"\"\n\n        # Since we are dealing with a one hidden layer MLP, this will translate\n        # into a HiddenLayer with a tanh activation function connected to the\n        # LogisticRegression layer; the activation function can be replaced by\n        # sigmoid or any other nonlinear function\n        self.hiddenLayer = HiddenLayer(\n            rng=rng,\n            input=input,\n            n_in=n_in,\n            n_out=n_hidden,\n            activation=T.tanh\n        )\n\n        # The logistic regression layer gets as input the hidden units\n        # of the hidden layer\n        self.logRegressionLayer = LogisticRegression(\n            input=self.hiddenLayer.output,\n            n_in=n_hidden,\n            n_out=n_out\n        )\n        # end-snippet-2 start-snippet-3\n        # L1 norm ; one regularization option is to enforce L1 norm to\n        # be small\n        self.L1 = (\n            abs(self.hiddenLayer.W).sum()\n            + abs(self.logRegressionLayer.W).sum()\n        )\n\n        # square of L2 norm ; one regularization option is to enforce\n        # square of L2 norm to be small\n        self.L2_sqr = (\n            (self.hiddenLayer.W ** 2).sum()\n            + (self.logRegressionLayer.W ** 2).sum()\n        )\n\n        # negative log likelihood of the MLP is given by the negative\n        # log likelihood of the output of the model, computed in the\n        # logistic regression layer\n        self.negative_log_likelihood = (\n            self.logRegressionLayer.negative_log_likelihood\n        )\n        # same holds for the function computing the number of errors\n        self.errors = self.logRegressionLayer.errors\n\n        # the parameters of the model are the parameters of the two layer it is\n        # made out of\n        self.params = self.hiddenLayer.params + self.logRegressionLayer.params\n        # end-snippet-3\n\n\ndef test_mlp(learning_rate=0.01, L1_reg=0.00, L2_reg=0.0001, n_epochs=1000,\n             dataset='mnist.pkl.gz', batch_size=20, n_hidden=500):\n    \"\"\"\n    Demonstrate stochastic gradient descent optimization for a multilayer\n    perceptron\n\n    This is demonstrated on MNIST.\n\n    :type learning_rate: float\n    :param learning_rate: learning rate used (factor for the stochastic\n    gradient\n\n    :type L1_reg: float\n    :param L1_reg: L1-norm's weight when added to the cost (see\n    regularization)\n\n    :type L2_reg: float\n    :param L2_reg: L2-norm's weight when added to the cost (see\n    regularization)\n\n    :type n_epochs: int\n    :param n_epochs: maximal number of epochs to run the optimizer\n\n    :type dataset: string\n    :param dataset: the path of the MNIST dataset file from\n                 http://www.iro.umontreal.ca/~lisa/deep/data/mnist/mnist.pkl.gz\n\n\n   \"\"\"\n    datasets = load_data(dataset)\n\n    train_set_x, train_set_y = datasets[0]\n    valid_set_x, valid_set_y = datasets[1]\n    test_set_x, test_set_y = datasets[2]\n\n    # compute number of minibatches for training, validation and testing\n    n_train_batches = train_set_x.get_value(borrow=True).shape[0] / batch_size\n    n_valid_batches = valid_set_x.get_value(borrow=True).shape[0] / batch_size\n    n_test_batches = test_set_x.get_value(borrow=True).shape[0] / batch_size\n\n    ######################\n    # BUILD ACTUAL MODEL #\n    ######################\n    print '... building the model'\n\n    # allocate symbolic variables for the data\n    index = T.lscalar()  # index to a [mini]batch\n    x = T.matrix('x')  # the data is presented as rasterized images\n    y = T.ivector('y')  # the labels are presented as 1D vector of\n                        # [int] labels\n\n    rng = numpy.random.RandomState(1234)\n\n    # construct the MLP class\n    classifier = MLP(\n        rng=rng,\n        input=x,\n        n_in=28 * 28,\n        n_hidden=n_hidden,\n        n_out=10\n    )\n\n    # start-snippet-4\n    # the cost we minimize during training is the negative log likelihood of\n    # the model plus the regularization terms (L1 and L2); cost is expressed\n    # here symbolically\n    cost = (\n        classifier.negative_log_likelihood(y)\n        + L1_reg * classifier.L1\n        + L2_reg * classifier.L2_sqr\n    )\n    # end-snippet-4\n\n    # compiling a Theano function that computes the mistakes that are made\n    # by the model on a minibatch\n    test_model = theano.function(\n        inputs=[index],\n        outputs=classifier.errors(y),\n        givens={\n            x: test_set_x[index * batch_size:(index + 1) * batch_size],\n            y: test_set_y[index * batch_size:(index + 1) * batch_size]\n        }\n    )\n\n    validate_model = theano.function(\n        inputs=[index],\n        outputs=classifier.errors(y),\n        givens={\n            x: valid_set_x[index * batch_size:(index + 1) * batch_size],\n            y: valid_set_y[index * batch_size:(index + 1) * batch_size]\n        }\n    )\n\n    # start-snippet-5\n    # compute the gradient of cost with respect to theta (sotred in params)\n    # the resulting gradients will be stored in a list gparams\n    gparams = [T.grad(cost, param) for param in classifier.params]\n\n    # specify how to update the parameters of the model as a list of\n    # (variable, update expression) pairs\n\n    # given two list the zip A = [a1, a2, a3, a4] and B = [b1, b2, b3, b4] of\n    # same length, zip generates a list C of same size, where each element\n    # is a pair formed from the two lists :\n    #    C = [(a1, b1), (a2, b2), (a3, b3), (a4, b4)]\n    updates = [\n        (param, param - learning_rate * gparam)\n        for param, gparam in zip(classifier.params, gparams)\n    ]\n\n    # compiling a Theano function `train_model` that returns the cost, but\n    # in the same time updates the parameter of the model based on the rules\n    # defined in `updates`\n    train_model = theano.function(\n        inputs=[index],\n        outputs=cost,\n        updates=updates,\n        givens={\n            x: train_set_x[index * batch_size: (index + 1) * batch_size],\n            y: train_set_y[index * batch_size: (index + 1) * batch_size]\n        }\n    )\n    # end-snippet-5\n\n    ###############\n    # TRAIN MODEL #\n    ###############\n    print '... training'\n\n    # early-stopping parameters\n    patience = 10000  # look as this many examples regardless\n    patience_increase = 2  # wait this much longer when a new best is\n                           # found\n    improvement_threshold = 0.995  # a relative improvement of this much is\n                                   # considered significant\n    validation_frequency = min(n_train_batches, patience / 2)\n                                  # go through this many\n                                  # minibatche before checking the network\n                                  # on the validation set; in this case we\n                                  # check every epoch\n\n    best_validation_loss = numpy.inf\n    best_iter = 0\n    test_score = 0.\n    start_time = time.clock()\n\n    epoch = 0\n    done_looping = False\n\n    while (epoch > sys.stderr, ('The code for file ' +\n                          os.path.split(__file__)[1] +\n                          ' ran for %.2fm' % ((end_time - start_time) / 60.))\n\n\nif __name__ == '__main__':\n    test_mlp()\n\n预计将会得到这样的输出：\nOptimization complete. Best validation score of 1.690000 % obtained at iteration 2070000, with test performance 1.650000 %\nThe code for file mlp.py ran for 97.34m\n在一台Intel(R) Core(TM) i7-2600K CPU @ 3.40GHz的机器上，这个代码跑了10.3 epoch/minute然后花了828 epochs得到了1.65%的测试错误率。\n读者也可以在这个页面查看MNIST的识别结果。\n训练MLPs的技巧\n在上面的代码中国，有一些是不能进行梯度下降来优化的。严格意义上将，发现最优的超参集合是不可能的任务。第一，我们不能独立的优化每一个参数。第二，我们不能很容易的求解所有参数的梯度（有些是离散的值，有些是实数）。第三，这个优化问题是非凸的，容易陷入局部最优。\n好消息是，过去25年，研究者发明了一些在神经网络中选择超参数的方法和规则。你可以在LeCun等人的Efficient BackPro中阅读，这是一个好的综述。这里，我们将总结下我们的代码中用到的几个重要的方法和技术。\n非线性\n最常见的就是sigmoid和tanh函数。在第4.4节中解释的，非线性是关于原点对称的，它倾向去输出0均值的输出（这是被期望的属性）。根据我们的经验，tanh(双曲函数)拥有更好的收敛性。\n权值初始化\n在初始化权值的时候，我们一般需要它们在0附近，要足够小（在激活函数的近似线性区域可以获得最大的梯度）。另一个特性，尤其对深度网络而言，是可以减小层与层之间的激活函数的方差和反向传导梯度的方差。这就可以让信息更好的向下和向上的传导，减少层间差异。数学推倒，请看Xavier10。\n学习率\n有许多文献专注在好的学习速率的选择上。最简单的方案就是选择一个固定速率。经验法则：尝试对数间隔的值(0.1，001，。。)，然后缩小（对数）网络搜索的范围（你获得最低验证错误的区域）。\n随着时间的推移减小学习速率有时候也是一个好主意。一个简单的方法是使用这个公式：u/(1+d*t)，u是初始速率（可以使用上面讲的网格搜索选择），d是减小常量，用以控制学习速率，可以设为0.001或者更小，t是迭代次数或者时间。\n4.7节讲述了网络中每个参数学习速率选择的方法，然后基于分类错误率自适应的选择它们。\n隐藏节点数\n这个超参数是非常基于数据集的。模糊的来说就是，输入分布越复杂，去模拟它的网络就需要更大的容量，那么隐藏单元的数目就要更大。事实上，一个层的权值矩阵就是可以直接度量的（输入维度＊输出维度）。\n除非我们去使用正则选项（early-stopping或L1/L2惩罚），隐藏节点数和泛化表现的分布图，将呈现U型（即隐藏节点越多，在后期并不能提高泛化性）。\n正则化参数\n典型的方法是使用L1/L2正则化，同时lambda设为0.01，0.001等。尽管在我们之前提及的框架里面，它并没有显著提高性能，但它仍然是一个值得探讨的方法。\n"},"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html":{"url":"4_Convoltional_Neural_Networks_LeNet_卷积神经网络.html","title":"4.卷积神经网络","keywords":"","body":"卷积神经网络（Convolutional Neural Networks LeNet）\n在这一节假设读者已经阅读了之前的两章使用逻辑回归进行MNIST分类和多层感知机。\n如果你想要在GPU上跑样例，你需要一个好的GPU。至少是1GB显存的。当显示器连接在显卡上时，你可能需要更大的显存。\n当GPU连接在显示器上时，每次GPU的调用会有几秒钟的限制。这是必须的，因为GPUs不能在计算的时候，同时被用于显示器。如果没有这个限制，屏幕会长时间不动，就像死机一样。这个例子会说中中等质量的GPUs。当GPU不连接显示器时，没有这个时间限制。你可以通过降低batch的大小来出来延时问题。\n本节的所有代码，可以在这里下载，还有3狼月亮图。\n动机\n卷积神经网络是多层感知机的生物灵感变种。从Hubel和Wiesel先前对猫的视觉皮层的研究，我们知道视皮层中含有细胞的复杂分布。这些细胞只对小的视觉子区域敏感，称为感受野。这些子区域平铺来覆盖整个视场。这些细胞表现为输入图像空间的局部滤波器，非常适合检测自然图像中的强空间局部相关性。\n此外，两类基础细胞类型被定义：简单细胞使用它们的感受野，最大限度的响应特定的棱状图案。复杂细胞有更大的感受野，可以局部不变的确定图案精确位置。动物视觉皮层是现存的最强大的视觉处理系统，很显然，我们需要去模仿它的行为。因此，许多类神经模型在文献中出现，包括NeoCognitron，HMAX和LeNet-5，这是本教程需要着重讲解的。\n稀疏连接\n卷积神经网络通过在相邻层的神经元之间实施局部连接模式来检测局部空间相关性。换句话说就是，第m层的隐藏单元的输入来自第m－1层单元的子集，单元拥有空间上的感受野连接。我们可以通过如下的图来表示：\n\n想象一下，第m－1层是输入视网膜。在上图总，第m层的单元有宽度为3的对输入视网膜的感受野，因此它们只连接视网膜层中3个相邻的神经元。第m层的单元与下一层有相似的连接。我们说，感受野连接于下一层的数目也是3，但是感受野连接于输入的则更大（5）。每个单元对视网膜上于自己感受野相异的地方都是不会有响应的。这个结构保证了被学习的滤波器对一个空间局部输入图案有最强的响应。\n然而，就像上面展示的，将这些层叠加起来去形成（非线性）滤波器，就可以变得越来越全局化。举例而言，第m＋1层的单元可以编码一个宽度为5的非线性特征。\n权值共享\n此外，在CNNs中，每一只滤波器共享同一组权值，这样该滤波器就可以形成一个特征映射（feaature map）。梯度下降算法在小改动后可以学习这种共享参数。这个被共享权值的梯度就是被共享的参数的梯度的简单求和。\n复制单元使得特征可以无视其在视觉野中的位置而被检测到。此外，权值共享增加了学习效率，减少了需要被学习的自由参数的数目。这样的设定，使得CNNs在视觉问题上有更好的泛化性。\n细节和注解\n一个特征映射是由一个函数在整个图像的某一子区域重复使用来获得的，换句话说，就是通过线性滤波器来卷积输入图像，加上偏置后，再输入到非线性函数。如果我们定义第k个特征映射是为h_k，滤波器有W_k，b_k定义，则特征映射可以被表现为如下形式：\n\n其中对于2维卷积有如下定义：\n\n为了形成数据更丰富的表达，隐藏层有多层特征映射组成｛h_k,k=0..K｝。一个隐层的权值矩阵W可以用一个4维张量来表示，包含了每个目标特征映射、源目标特征映射、源水平位置，源垂直位置的元素。偏置b则是一个向量，纪录每个目标特征映射的元素。我们可以用如下的图来表示：\n\n上图显示了一个CNN的两层，第m-1层包含4个特征映射，第m层包含2个特征映射（h_0和h_1）。h_0和h_1中红蓝色区域的像素（输出值）由第m-1层中2*2的感受野计算而言（相同颜色区域）。注意，感受野包含了所有的4个输入特征映射。W_0，W_1，h_0，h_1因此都是3维权值张量。第一个维度指定输入特征映射，剩下两个表示参考坐标。\n把它们都放一起就是，W_k_l(i,j)，表示第m层的第k个特征映射，在第m-1层的l个特征映射的(i,j)参考坐标的连接权值。\n卷积操作\n卷积操作是Theano实现卷积层的主要消耗。卷积操作通过theano.tensor.signal.conv2d，它包括两个输入符号：\n\n与输入的minibatch有关的4维张量，尺寸包括如下：[mini-batch的大小，输入特征映射的数目，图像高度，图像宽度]。\n与权值矩阵W相关的4维张量，尺寸包括如下：[m层特征映射的数目，m-1层特征映射的数目，滤波器高度，滤波器宽度]。\n\n下面的Theano代码实现了类似图1的卷积层。输入包括大小为120160的3个特征映射（1一个RGB彩图）。我们使用2个大小为99感受野的卷积滤波器。\nfrom theano.tensor.nnet import conv\nrng = numpy.random.RandomState(23455)\n\n# instantiate 4D tensor for input\ninput = T.tensor4(name='input')\n\n# initialize shared variable for weights.\nw_shp = (2, 3, 9, 9)\nw_bound = numpy.sqrt(3 * 9 * 9)\nW = theano.shared( numpy.asarray(\n            rng.uniform(\n                low=-1.0 / w_bound,\n                high=1.0 / w_bound,\n                size=w_shp),\n            dtype=input.dtype), name ='W')\n\n# initialize shared variable for bias (1D tensor) with random values\n# IMPORTANT: biases are usually initialized to zero. However in this\n# particular application, we simply apply the convolutional layer to\n# an image without learning the parameters. We therefore initialize\n# them to random values to \"simulate\" learning.\nb_shp = (2,)\nb = theano.shared(numpy.asarray(\n            rng.uniform(low=-.5, high=.5, size=b_shp),\n            dtype=input.dtype), name ='b')\n\n# build symbolic expression that computes the convolution of input with filters in w\nconv_out = conv.conv2d(input, W)\n\n# build symbolic expression to add bias and apply activation function, i.e. produce neural net layer output\n# A few words on ``dimshuffle`` :\n#   ``dimshuffle`` is a powerful tool in reshaping a tensor;\n#   what it allows you to do is to shuffle dimension around\n#   but also to insert new ones along which the tensor will be\n#   broadcastable;\n#   dimshuffle('x', 2, 'x', 0, 1)\n#   This will work on 3d tensors with no broadcastable\n#   dimensions. The first dimension will be broadcastable,\n#   then we will have the third dimension of the input tensor as\n#   the second of the resulting tensor, etc. If the tensor has\n#   shape (20, 30, 40), the resulting tensor will have dimensions\n#   (1, 40, 1, 20, 30). (AxBxC tensor is mapped to 1xCx1xAxB tensor)\n#   More examples:\n#    dimshuffle('x') -> make a 0d (scalar) into a 1d vector\n#    dimshuffle(0, 1) -> identity\n#    dimshuffle(1, 0) -> inverts the first and second dimensions\n#    dimshuffle('x', 0) -> make a row out of a 1d vector (N to 1xN)\n#    dimshuffle(0, 'x') -> make a column out of a 1d vector (N to Nx1)\n#    dimshuffle(2, 0, 1) -> AxBxC to CxAxB\n#    dimshuffle(0, 'x', 1) -> AxB to Ax1xB\n#    dimshuffle(1, 'x', 0) -> AxB to Bx1xA\noutput = T.nnet.sigmoid(conv_out + b.dimshuffle('x', 0, 'x', 'x'))\n\n# create theano function to compute filtered images\nf = theano.function([input], output)\n\n让我们让它变得有趣点...\nimport numpy\nimport pylab\nfrom PIL import Image\n\n# open random image of dimensions 639x516\nimg = Image.open(open('/images/3wolfmoon.jpg'))\nimg = numpy.asarray(img, dtype='float64') / 256.\n\n# put image in 4D tensor of shape (1, 3, height, width)\nimg_ = img.swapaxes(0, 2).swapaxes(1, 2).reshape(1, 3, 639, 516)\nfiltered_img = f(img_)\n\n# plot original image and first and second components of output\npylab.subplot(1, 3, 1); pylab.axis('off'); pylab.imshow(img)\npylab.gray();\n# recall that the convOp output (filtered image) is actually a \"minibatch\",\n# of size 1 here, so we take index 0 in the first dimension:\npylab.subplot(1, 3, 2); pylab.axis('off'); pylab.imshow(filtered_img[0, 0, :, :])\npylab.subplot(1, 3, 3); pylab.axis('off'); pylab.imshow(filtered_img[0, 1, :, :])\npylab.show()\n\n将产生这样的输出：\n\n注意，一个随机的初始化滤波器表现得很像一个特征检测器。\n注意我们使用了与MLP相同得权值初始化方案。权值在一个范围为[-1/fan-in, 1/fan-in]的均匀分布中随机取样，fan-in是一个隐单元的输入数。对MLP，它是下一层单元的数目。对CNNs，我不得不需要去考虑到输入特征映射的数目和感受野的大小。\n最大池化\n卷积神经网络另一个重大的概念是最大池化，一个非线性的降采样形式。最大池化就是将输入图像分割为一系列不重叠的矩阵，然后对每个子区域，输出最大值。\n最大池化在视觉中是有用的，由如下2个原因：\n\n通过消除非最大值，减少了更上层的计算量\n提供了一种平移不变性。想象一下，一个最大池化层级联在一个卷积层。这里有8个方向，一个输入图像可以通过单个像素平移。假如说最大池化是22的区域，8个可能的方向中有3个可能会产生相同的输出（3/8）。当池化层为33时，概率增加到5/8。\n\n最大池化在Theano中通过theano.tensor.signal.downsample.max_pool_2d。这个函数被设计为可以接受N维的张量和一个缩减因子，然后对张量的最后2维执行最大池化。\nfrom theano.tensor.signal import downsample\n\ninput = T.dtensor4('input')\nmaxpool_shape = (2, 2)\npool_out = downsample.max_pool_2d(input, maxpool_shape, ignore_border=True)\nf = theano.function([input],pool_out)\n\ninvals = numpy.random.RandomState(1).rand(3, 2, 5, 5)\nprint 'With ignore_border set to True:'\nprint 'invals[0, 0, :, :] =\\n', invals[0, 0, :, :]\nprint 'output[0, 0, :, :] =\\n', f(invals)[0, 0, :, :]\n\npool_out = downsample.max_pool_2d(input, maxpool_shape, ignore_border=False)\nf = theano.function([input],pool_out)\nprint 'With ignore_border set to False:'\nprint 'invals[1, 0, :, :] =\\n ', invals[1, 0, :, :]\nprint 'output[1, 0, :, :] =\\n ', f(invals)[1, 0, :, :]\n\n将会产生下面的输出：\nWith ignore_border set to True:\n    invals[0, 0, :, :] =\n    [[  4.17022005e-01   7.20324493e-01   1.14374817e-04   3.02332573e-01 1.46755891e-01]\n     [  9.23385948e-02   1.86260211e-01   3.45560727e-01   3.96767474e-01 5.38816734e-01]\n     [  4.19194514e-01   6.85219500e-01   2.04452250e-01   8.78117436e-01 2.73875932e-02]\n     [  6.70467510e-01   4.17304802e-01   5.58689828e-01   1.40386939e-01 1.98101489e-01]\n     [  8.00744569e-01   9.68261576e-01   3.13424178e-01   6.92322616e-01 8.76389152e-01]]\n    output[0, 0, :, :] =\n    [[ 0.72032449  0.39676747]\n     [ 0.6852195   0.87811744]]\n\nWith ignore_border set to False:\n    invals[1, 0, :, :] =\n    [[ 0.01936696  0.67883553  0.21162812  0.26554666  0.49157316]\n     [ 0.05336255  0.57411761  0.14672857  0.58930554  0.69975836]\n     [ 0.10233443  0.41405599  0.69440016  0.41417927  0.04995346]\n     [ 0.53589641  0.66379465  0.51488911  0.94459476  0.58655504]\n     [ 0.90340192  0.1374747   0.13927635  0.80739129  0.39767684]]\n    output[1, 0, :, :] =\n    [[ 0.67883553  0.58930554  0.69975836]\n     [ 0.66379465  0.94459476  0.58655504]\n     [ 0.90340192  0.80739129  0.39767684]]\n注意，与其他Theano代码相比，max_pool_2d操作有点特殊。它需要缩减因子ds(长度维2的tuple，班汉图像长度和宽度的缩减因子)在图构建的时候被告知。这在未来可能会发生改变。\n整个模型\n稀疏性、卷积层和最大池化时LeNet系列模型的核心。而准确的模型细节有很大的差异，下图显示了一个LeNet模型。\n\n模型比较低的层是由卷积和最大池化层的交替来构建的，较高的层则是全连接的传统MLP（隐藏层＋逻辑回归）。第一个全连接层的输入是前一层(the layer below)的特征映射的集合。\n从上图的实现来看，较低层的操作都是建立在4维张量上的。然后它需要被压缩为2维的特征映射，来适应之后的MLP实现。\n将它组合起来\n现在我们已经知道了在Theano中实现LeNet的所有方法。那我们先实现一个LeNetConvPoolLayer类，它是{卷积＋最大池化}层。\nclass LeNetConvPoolLayer(object):\n    \"\"\"Pool Layer of a convolutional network \"\"\"\n\n    def __init__(self, rng, input, filter_shape, image_shape, poolsize=(2, 2)):\n        \"\"\"\n        Allocate a LeNetConvPoolLayer with shared variable internal parameters.\n\n        :type rng: numpy.random.RandomState\n        :param rng: a random number generator used to initialize weights\n\n        :type input: theano.tensor.dtensor4\n        :param input: symbolic image tensor, of shape image_shape\n\n        :type filter_shape: tuple or list of length 4\n        :param filter_shape: (number of filters, num input feature maps,\n                              filter height, filter width)\n\n        :type image_shape: tuple or list of length 4\n        :param image_shape: (batch size, num input feature maps,\n                             image height, image width)\n\n        :type poolsize: tuple or list of length 2\n        :param poolsize: the downsampling (pooling) factor (#rows, #cols)\n        \"\"\"\n\n        assert image_shape[1] == filter_shape[1]\n        self.input = input\n\n        # there are \"num input feature maps * filter height * filter width\"\n        # inputs to each hidden unit\n        fan_in = numpy.prod(filter_shape[1:])\n        # each unit in the lower layer receives a gradient from:\n        # \"num output feature maps * filter height * filter width\" /\n        #   pooling size\n        fan_out = (filter_shape[0] * numpy.prod(filter_shape[2:]) /\n                   numpy.prod(poolsize))\n        # initialize weights with random weights\n        W_bound = numpy.sqrt(6. / (fan_in + fan_out))\n        self.W = theano.shared(\n            numpy.asarray(\n                rng.uniform(low=-W_bound, high=W_bound, size=filter_shape),\n                dtype=theano.config.floatX\n            ),\n            borrow=True\n        )\n\n        # the bias is a 1D tensor -- one bias per output feature map\n        b_values = numpy.zeros((filter_shape[0],), dtype=theano.config.floatX)\n        self.b = theano.shared(value=b_values, borrow=True)\n\n        # convolve input feature maps with filters\n        conv_out = conv.conv2d(\n            input=input,\n            filters=self.W,\n            filter_shape=filter_shape,\n            image_shape=image_shape\n        )\n\n        # downsample each feature map individually, using maxpooling\n        pooled_out = downsample.max_pool_2d(\n            input=conv_out,\n            ds=poolsize,\n            ignore_border=True\n        )\n\n        # add the bias term. Since the bias is a vector (1D array), we first\n        # reshape it to a tensor of shape (1, n_filters, 1, 1). Each bias will\n        # thus be broadcasted across mini-batches and feature map\n        # width & height\n        self.output = T.tanh(pooled_out + self.b.dimshuffle('x', 0, 'x', 'x'))\n\n        # store parameters of this layer\n        self.params = [self.W, self.b]\n\n注意，当初始化权重值的时候，fan-in是由感受野和输入特征映射数决定的。\n最后，我们通过使用在使用逻辑回归进行MNIST分类中定义的LogisticRegression类，和多层感知机中的HiddenLayer类来实例化我们的网络：\n    x = T.matrix('x')   # the data is presented as rasterized images\n    y = T.ivector('y')  # the labels are presented as 1D vector of\n                        # [int] labels\n\n    ######################\n    # BUILD ACTUAL MODEL #\n    ######################\n    print '... building the model'\n\n    # Reshape matrix of rasterized images of shape (batch_size, 28 * 28)\n    # to a 4D tensor, compatible with our LeNetConvPoolLayer\n    # (28, 28) is the size of MNIST images.\n    layer0_input = x.reshape((batch_size, 1, 28, 28))\n\n    # Construct the first convolutional pooling layer:\n    # filtering reduces the image size to (28-5+1 , 28-5+1) = (24, 24)\n    # maxpooling reduces this further to (24/2, 24/2) = (12, 12)\n    # 4D output tensor is thus of shape (batch_size, nkerns[0], 12, 12)\n    layer0 = LeNetConvPoolLayer(\n        rng,\n        input=layer0_input,\n        image_shape=(batch_size, 1, 28, 28),\n        filter_shape=(nkerns[0], 1, 5, 5),\n        poolsize=(2, 2)\n    )\n\n    # Construct the second convolutional pooling layer\n    # filtering reduces the image size to (12-5+1, 12-5+1) = (8, 8)\n    # maxpooling reduces this further to (8/2, 8/2) = (4, 4)\n    # 4D output tensor is thus of shape (nkerns[0], nkerns[1], 4, 4)\n    layer1 = LeNetConvPoolLayer(\n        rng,\n        input=layer0.output,\n        image_shape=(batch_size, nkerns[0], 12, 12),\n        filter_shape=(nkerns[1], nkerns[0], 5, 5),\n        poolsize=(2, 2)\n    )\n\n    # the HiddenLayer being fully-connected, it operates on 2D matrices of\n    # shape (batch_size, num_pixels) (i.e matrix of rasterized images).\n    # This will generate a matrix of shape (batch_size, nkerns[1] * 4 * 4),\n    # or (500, 50 * 4 * 4) = (500, 800) with the default values.\n    layer2_input = layer1.output.flatten(2)\n\n    # construct a fully-connected sigmoidal layer\n    layer2 = HiddenLayer(\n        rng,\n        input=layer2_input,\n        n_in=nkerns[1] * 4 * 4,\n        n_out=500,\n        activation=T.tanh\n    )\n\n    # classify the values of the fully-connected sigmoidal layer\n    layer3 = LogisticRegression(input=layer2.output, n_in=500, n_out=10)\n\n    # the cost we minimize during training is the NLL of the model\n    cost = layer3.negative_log_likelihood(y)\n\n    # create a function to compute the mistakes that are made by the model\n    test_model = theano.function(\n        [index],\n        layer3.errors(y),\n        givens={\n            x: test_set_x[index * batch_size: (index + 1) * batch_size],\n            y: test_set_y[index * batch_size: (index + 1) * batch_size]\n        }\n    )\n\n    validate_model = theano.function(\n        [index],\n        layer3.errors(y),\n        givens={\n            x: valid_set_x[index * batch_size: (index + 1) * batch_size],\n            y: valid_set_y[index * batch_size: (index + 1) * batch_size]\n        }\n    )\n\n    # create a list of all model parameters to be fit by gradient descent\n    params = layer3.params + layer2.params + layer1.params + layer0.params\n\n    # create a list of gradients for all model parameters\n    grads = T.grad(cost, params)\n\n    # train_model is a function that updates the model parameters by\n    # SGD Since this model has many parameters, it would be tedious to\n    # manually create an update rule for each model parameter. We thus\n    # create the updates list by automatically looping over all\n    # (params[i], grads[i]) pairs.\n    updates = [\n        (param_i, param_i - learning_rate * grad_i)\n        for param_i, grad_i in zip(params, grads)\n    ]\n\n    train_model = theano.function(\n        [index],\n        cost,\n        updates=updates,\n        givens={\n            x: train_set_x[index * batch_size: (index + 1) * batch_size],\n            y: train_set_y[index * batch_size: (index + 1) * batch_size]\n        }\n    )\n\n我们把进行实际训练和early-stopping代码取出了。因为它和MLP中是一样的。有兴趣的读者，可以阅读教程开头的源代码。\n运行代码\n在一台Core i7-2600K CPU clocked at 3.40GHz上，我们使用floatX=float32，获得如下的输出：\nOptimization complete.\nBest validation score of 0.910000 % obtained at iteration 17800,with test\nperformance 0.920000 %\nThe code for file convolutional_mlp.py ran for 380.28m\n在GeForce GTX 285上，我们获得了如下：\nOptimization complete.\nBest validation score of 0.910000 % obtained at iteration 15500,with test\nperformance 0.930000 %\nThe code for file convolutional_mlp.py ran for 46.76m\n在GeForce GTX 480上，获得如下：\nOptimization complete.\nBest validation score of 0.910000 % obtained at iteration 16400,with test\nperformance 0.930000 %\nThe code for file convolutional_mlp.py ran for 32.52m\n可以观察到不同实验下验证误差和测试误差的不同，这是由不同硬件的取整结构不同造成的。可以忽略。\n技巧\n超参的选择\n卷积神经网络的训练相比与标准的MLP是相当困难的，因为它添加了更多的超参数。当我们在应用学习率和正则化的规则下，下面的方法也需要在优化CNNs被考虑：\n滤波器的数量\n当选择每层滤波器数量的时候，需要记住计算单卷积层的活性比传统的MLP会更加昂贵。\n假设第l-1层包含K(l-1)个特征映射和M*N个像素点（例如，位置数乘以特征映射数），然后第l层有K(l)个滤波器，尺寸为mn。那么计算一个特征映射（在(M-m)(N-n)个像素位置应用每个mn大小的滤波器）将消耗(M-m)(N-n)mn*K_(l-1)的计算量。然后总共要计算K_l次。如果不是所有的特征只与前一层的所有特征相连，那么事情就变得更加复杂啦。\n对标准MLP而言，第l层如果有Kl个神经元，那计算量只有K(k-1)*K_l。因此，CNNs中滤波器的数量通常比MLPs中隐单元的数量小很多，通常是基于特征映射的尺寸（输入图像的尺寸和滤波器的形状）。\n因为特征映射的尺寸会随着深度的增加而减小，靠近输入层的层将趋向于有更少的滤波器，而更高的层有更多的滤波器。事实上，为了平衡每一层的计算量，特征数和图像位置数的乘积在层的传递过程中都是基本一致的。为了保护输入信息，我们需要保证总的激活数量（特征映射数*像素位置数）在层间传递的时候是至于减少（当然我们在做监督学习的时候当然是希望它减小的）。特征映射的数量直接控制整个容量，同时它依赖于可用样例的数目和任务的复杂度。\n滤波器的尺寸\n通常在每个文献中滤波器的尺寸都有很大的不同，它常常是基于数据库的。MNIST在第一层的最好结果是55层滤波器。当自然图像（每维有几百个像素）趋向于使用更大的滤波器，例如1212，15*15。\n因此这个技巧事实上是去寻找正确等级的“粒度”，以便对给定的数据集去形成合适范围内的抽象。\n最大池化的尺寸\n经典的是22，或者没有最大池化。非常大的图可以在较低的层使用44的池化。但是需要记住的是，池化在通过16个因子减少信号维度的同时，也可能导致信号细节的大量丢失。\n技巧\n假如你想要在新的数据集上采用这个模型，下面的一些小技巧可能能让你获得更好的结果：\n\n白化(whitening)数据（例如，使用主成分分析）\n衰减每次迭代的学习速率。\n\n"},"5_Denoising_Autoencoders_降噪自动编码.html":{"url":"5_Denoising_Autoencoders_降噪自动编码.html","title":"5.降噪自动编码","keywords":"","body":"降噪自动编码机(Denoising Autoencoders)\n这一节假设读者一节阅读了使用逻辑回归进行MNIST分类，多层感知机。如果你需要在GPU上跑代码，你也需要阅读GPU。\n本节所有的代码都可用在这里下载。\n降噪自动编码机(denoising Autoencoders)是经典自动编码机的扩展。它在Vincent08中作为深度网络的一个构建块被介绍。我们通过简短的自动编码机来开始本教程。\n自动编码机\n在Bengio09的第4.6节中，有自动编码机的简介。一个自动编码机，由d维的[0,1]之间的输入向量x，通过第一层映射（使用一个编码器）来获得隐藏的d‘维度的[0,1]的输出表达y。通过如下的决定性映射：\n\n这里s是一个非线性的函数，例如sigmoid。这个潜在的表达y，或者码，被映射回一个重构机z，来重构x。这个映射通过下面的简单转换来实现：\n\n（这里撇号不代表矩阵转置）当y被给定时，z被看着是对x的预测。可选的，这个权重矩阵W‘的逆映射可用被约束为正向映射的转置：，这被称为捆绑权重。这个模型的所有参数（W，b，b‘，或者不使用捆绑权重W’）通过优化最小平均重构误差来实现训练。\n重建误差可以通过许多方法来度量，基于输入的分布假设。这个传统的平方误差是L(x,z)=||x-z||^2，可以被使用。假如这个输入是通过比特向量或者比特概率向量来表述，重构交叉熵([cross-entropy)可以被表示如下：\n\n我们希望这样，这个编码y是一个分布式表达，可以捕捉数据中主要因子变化的位置。这就类似与主成分凸出，金额也捕捉数据中主要因子的变化。事实上，假如这里有一个线性隐藏层（这个编码），并且平均平方误差准则被用以训练这个网络，然后这k个隐藏单元学习去凸出这个输入，在该数据的前k个主成分的范围中。假如这个隐藏层是非线性的，这个自动编码机表现的是与PCA不同的，它有着捕捉输入分布的多模态方面的能力。从PCA开始变得更加重要，当我们考虑堆叠混合编码机(stacking multiple encoders，在Hinton06中被用以构建一个深度自动编码机)。\n因为y是视为x的有损压缩(lossy compression)，它不可能对所有的x有好的压缩。优化可以使得训练样本有好的压缩，同时也希望对别的输入有好的压缩，但是不是对于任意输入。这里有一个对自动编码机的概括定义：它对于与训练样本有相似分布的测试样本有较低的重建误差，但对于随机的输入会有较高的重构误差。\n我们希望通过Theano中来实现自动编码机，作为一个类的形式，它可以在未来去构建一个层叠自动编码机。这个第一步是去创建自动编码机的共享变量参数（W，b，b‘）。\nclass dA(object):\n    \"\"\"Denoising Auto-Encoder class (dA)\n\n    A denoising autoencoders tries to reconstruct the input from a corrupted\n    version of it by projecting it first in a latent space and reprojecting\n    it afterwards back in the input space. Please refer to Vincent et al.,2008\n    for more details. If x is the input then equation (1) computes a partially\n    destroyed version of x by means of a stochastic mapping q_D. Equation (2)\n    computes the projection of the input into the latent space. Equation (3)\n    computes the reconstruction of the input, while equation (4) computes the\n    reconstruction error.\n\n    .. math::\n\n        \\tilde{x} ~ q_D(\\tilde{x}|x)                                     (1)\n\n        y = s(W \\tilde{x} + b)                                           (2)\n\n        x = s(W' y  + b')                                                (3)\n\n        L(x,z) = -sum_{k=1}^d [x_k \\log z_k + (1-x_k) \\log( 1-z_k)]      (4)\n\n    \"\"\"\n\n    def __init__(\n        self,\n        numpy_rng,\n        theano_rng=None,\n        input=None,\n        n_visible=784,\n        n_hidden=500,\n        W=None,\n        bhid=None,\n        bvis=None\n    ):\n        \"\"\"\n        Initialize the dA class by specifying the number of visible units (the\n        dimension d of the input ), the number of hidden units ( the dimension\n        d' of the latent or hidden space ) and the corruption level. The\n        constructor also receives symbolic variables for the input, weights and\n        bias. Such a symbolic variables are useful when, for example the input\n        is the result of some computations, or when weights are shared between\n        the dA and an MLP layer. When dealing with SdAs this always happens,\n        the dA on layer 2 gets as input the output of the dA on layer 1,\n        and the weights of the dA are used in the second stage of training\n        to construct an MLP.\n\n        :type numpy_rng: numpy.random.RandomState\n        :param numpy_rng: number random generator used to generate weights\n\n        :type theano_rng: theano.tensor.shared_randomstreams.RandomStreams\n        :param theano_rng: Theano random generator; if None is given one is\n                     generated based on a seed drawn from `rng`\n\n        :type input: theano.tensor.TensorType\n        :param input: a symbolic description of the input or None for\n                      standalone dA\n\n        :type n_visible: int\n        :param n_visible: number of visible units\n\n        :type n_hidden: int\n        :param n_hidden:  number of hidden units\n\n        :type W: theano.tensor.TensorType\n        :param W: Theano variable pointing to a set of weights that should be\n                  shared belong the dA and another architecture; if dA should\n                  be standalone set this to None\n\n        :type bhid: theano.tensor.TensorType\n        :param bhid: Theano variable pointing to a set of biases values (for\n                     hidden units) that should be shared belong dA and another\n                     architecture; if dA should be standalone set this to None\n\n        :type bvis: theano.tensor.TensorType\n        :param bvis: Theano variable pointing to a set of biases values (for\n                     visible units) that should be shared belong dA and another\n                     architecture; if dA should be standalone set this to None\n\n\n        \"\"\"\n        self.n_visible = n_visible\n        self.n_hidden = n_hidden\n\n        # create a Theano random generator that gives symbolic random values\n        if not theano_rng:\n            theano_rng = RandomStreams(numpy_rng.randint(2 ** 30))\n\n        # note : W' was written as `W_prime` and b' as `b_prime`\n        if not W:\n            # W is initialized with `initial_W` which is uniformely sampled\n            # from -4*sqrt(6./(n_visible+n_hidden)) and\n            # 4*sqrt(6./(n_hidden+n_visible))the output of uniform if\n            # converted using asarray to dtype\n            # theano.config.floatX so that the code is runable on GPU\n            initial_W = numpy.asarray(\n                numpy_rng.uniform(\n                    low=-4 * numpy.sqrt(6. / (n_hidden + n_visible)),\n                    high=4 * numpy.sqrt(6. / (n_hidden + n_visible)),\n                    size=(n_visible, n_hidden)\n                ),\n                dtype=theano.config.floatX\n            )\n            W = theano.shared(value=initial_W, name='W', borrow=True)\n\n        if not bvis:\n            bvis = theano.shared(\n                value=numpy.zeros(\n                    n_visible,\n                    dtype=theano.config.floatX\n                ),\n                borrow=True\n            )\n\n        if not bhid:\n            bhid = theano.shared(\n                value=numpy.zeros(\n                    n_hidden,\n                    dtype=theano.config.floatX\n                ),\n                name='b',\n                borrow=True\n            )\n\n        self.W = W\n        # b corresponds to the bias of the hidden\n        self.b = bhid\n        # b_prime corresponds to the bias of the visible\n        self.b_prime = bvis\n        # tied weights, therefore W_prime is W transpose\n        self.W_prime = self.W.T\n        self.theano_rng = theano_rng\n        # if no input is given, generate a variable representing the input\n        if input is None:\n            # we use a matrix because we expect a minibatch of several\n            # examples, each example being a row\n            self.x = T.dmatrix(name='input')\n        else:\n            self.x = input\n\n        self.params = [self.W, self.b, self.b_prime]\n\n注意，我们将input作为一个参数来传递给自动编码机。我们可以串联自动编码机来实现深度网络：第k层的输出(y)可以变成第k+1层的输入。\n现在，我们可以预计去重构信号的潜在表达的计算量。\n    def get_hidden_values(self, input):\n        \"\"\" Computes the values of the hidden layer \"\"\"\n        return T.nnet.sigmoid(T.dot(input, self.W) + self.b)\n\n    def get_reconstructed_input(self, hidden):\n        \"\"\"Computes the reconstructed input given the values of the\n        hidden layer\n\n        \"\"\"\n        return T.nnet.sigmoid(T.dot(hidden, self.W_prime) + self.b_prime)\n\n然后我们通过这些函数可以计算一个随机梯度下降步骤的cost和更新。\n    def get_cost_updates(self, corruption_level, learning_rate):\n        \"\"\" This function computes the cost and the updates for one trainng\n        step of the dA \"\"\"\n\n        tilde_x = self.get_corrupted_input(self.x, corruption_level)\n        y = self.get_hidden_values(tilde_x)\n        z = self.get_reconstructed_input(y)\n        # note : we sum over the size of a datapoint; if we are using\n        #        minibatches, L will be a vector, with one entry per\n        #        example in minibatch\n        L = - T.sum(self.x * T.log(z) + (1 - self.x) * T.log(1 - z), axis=1)\n        # note : L is now a vector, where each element is the\n        #        cross-entropy cost of the reconstruction of the\n        #        corresponding example of the minibatch. We need to\n        #        compute the average of all these to get the cost of\n        #        the minibatch\n        cost = T.mean(L)\n\n        # compute the gradients of the cost of the `dA` with respect\n        # to its parameters\n        gparams = T.grad(cost, self.params)\n        # generate the list of updates\n        updates = [\n            (param, param - learning_rate * gparam)\n            for param, gparam in zip(self.params, gparams)\n        ]\n\n        return (cost, updates)\n\n我们现在可以定义一个函数来实现重复的更新参数W，b，b‘，直到这个重构消耗大约是最小的。\n    da = dA(\n        numpy_rng=rng,\n        theano_rng=theano_rng,\n        input=x,\n        n_visible=28 * 28,\n        n_hidden=500\n    )\n\n    cost, updates = da.get_cost_updates(\n        corruption_level=0.,\n        learning_rate=learning_rate\n    )\n\n    train_da = theano.function(\n        [index],\n        cost,\n        updates=updates,\n        givens={\n            x: train_set_x[index * batch_size: (index + 1) * batch_size]\n        }\n    )\n\n假设除了最小化重构误差外没有别的的限制，一个有n个输入和n（或者更大）维编码学习能力的自动编码机定义函数，将倾向于去映射出它的输入副本。这种自动编码机将无法从训练样本的分布中区分任何测试样例。（无效编码机：输出与输入完全相同）。\n让人惊讶地，在Bengio07的实验指出，在实践中，当通过随机梯度下降训练时，有比输入更多的隐藏单元（称为超完备）的非线性的自动编码机可以产生有效的表达。（这里，有效指的是编码作为网络的输入获得了更低的分类误差）。\n一个简单的解释是，使用early-stopping的随机梯度下降是与参数的L2正则化相似的。为了去实现对连续性输入有更好的重建，包含非线性隐藏单元的单隐藏层的自动编码机需要非常小的权值在第一（编码）层，以使得将非线性隐藏单元进入他们的线性区域（参考sigmoid函数），然后在第二（解码）层有更大的权值。对于二进制输入，非常大的权值也需要彻底的最小化重构误差。因为隐性的或者显性的正则化将使得获得大权值的解决方案变得困难，这个最优化算法发现在训练样本中表现好的编码。这意味着，表达是利用训练集的统计规律来实现的，而不仅仅是复制输入。\n这里有其他方法，使得一个有比输入有更多隐藏单元的自动编码机，去避免只学习它本身，而是在输入的隐藏表达中捕捉到有用的东西。一个是添加稀疏性（迫使许多隐单元是0或者接近0）。稀疏性已经被很成功的发挥了Ranzato07Lee08。另一个是，在输入到重建过程中，增加从输入到重建的转换中的随机性。这个技术在受限玻尔兹曼机中被使用（Restricted Boltzmann Machines，在后面的章节中讨论），还有降噪自动编码机，在后面讨论。\n降噪自动编码机\n降噪自动编码机的思想是很简单饿。为了迫使隐藏层去发现更加鲁棒性的特征，避免它只是去简单的学习定义，我们训练自动编码机去重建被破坏的输入版本的数据。\n这个降噪自动编码机是自动编码机的随机版本。直观上讲，一个降噪自动编码机做2件事情：尝试对输入进行编码（保护输入信息），然后尝试去消除输入中的随机差错产生的影响。后者可以通过捕捉输入间的统计相关性来实现。降噪自动编码机可以从不到的角度来理解（流行学习角度，随机操作角度，自下而上的信息论角度，自上而下的生成模型角度），所有的这些在Vincent08中被解释。在Bengio09的第7.2节有自动编码机的综述。\n在Vincent08中，随机差错进程随机的设定部分（也可以是一半）输入为0。因此降噪自动编码机尝试去从未被污染的值中去预测被污染的（丢失）的值，通过随机的选择丢失模式下的仔鸡。注意如何能预测从剩下的变量的任意子集是一个充分条件，去完全捕获一组变量之间的联合分布（这是Gibbs采样工作）。\n从自动编码机的类转换为降噪自动编码机，我们需要去增加一个随机误差步骤去应用到输入中。这个输入可以通过许多方法来污染，但在这个教程中，我们将支持以输入的随机性来腐化原始数据，使它趋向于0。代码如下：\nfrom theano.tensor.shared_randomstreams import RandomStreams\n\ndef get_corrupted_input(self, input, corruption_level):\n      \"\"\" This function keeps ``1-corruption_level`` entries of the inputs the same\n      and zero-out randomly selected subset of size ``coruption_level``\n      Note : first argument of theano.rng.binomial is the shape(size) of\n             random numbers that it should produce\n             second argument is the number of trials\n             third argument is the probability of success of any trial\n\n              this will produce an array of 0s and 1s where 1 has a probability of\n              1 - ``corruption_level`` and 0 with ``corruption_level``\n      \"\"\"\n      return  self.theano_rng.binomial(size=input.shape, n=1, p=1 - corruption_level) * input\n\n在层叠自动编码机类(层叠自动编码机)中，dA类中的权值不得不和相应的sigmoid层共享。因为这个原因，dA的构建也将Theano变量指向了共享参数。假如这些参数被设置为None，新的参数会被构建。\n最后的降噪自动编码机类就变成了这样：\nclass dA(object):\n   \"\"\"Denoising Auto-Encoder class (dA)\n\n   A denoising autoencoders tries to reconstruct the input from a corrupted\n   version of it by projecting it first in a latent space and reprojecting\n   it afterwards back in the input space. Please refer to Vincent et al.,2008\n   for more details. If x is the input then equation (1) computes a partially\n   destroyed version of x by means of a stochastic mapping q_D. Equation (2)\n   computes the projection of the input into the latent space. Equation (3)\n   computes the reconstruction of the input, while equation (4) computes the\n   reconstruction error.\n\n   .. math::\n\n       \\tilde{x} ~ q_D(\\tilde{x}|x)                                     (1)\n\n       y = s(W \\tilde{x} + b)                                           (2)\n\n       x = s(W' y  + b')                                                (3)\n\n       L(x,z) = -sum_{k=1}^d [x_k \\log z_k + (1-x_k) \\log( 1-z_k)]      (4)\n\n   \"\"\"\n\n   def __init__(self, numpy_rng, theano_rng=None, input=None, n_visible=784, n_hidden=500,\n              W=None, bhid=None, bvis=None):\n       \"\"\"\n       Initialize the dA class by specifying the number of visible units (the\n       dimension d of the input ), the number of hidden units ( the dimension\n       d' of the latent or hidden space ) and the corruption level. The\n       constructor also receives symbolic variables for the input, weights and\n       bias. Such a symbolic variables are useful when, for example the input is\n       the result of some computations, or when weights are shared between the\n       dA and an MLP layer. When dealing with SdAs this always happens,\n       the dA on layer 2 gets as input the output of the dA on layer 1,\n       and the weights of the dA are used in the second stage of training\n       to construct an MLP.\n\n       :type numpy_rng: numpy.random.RandomState\n       :param numpy_rng: number random generator used to generate weights\n\n       :type theano_rng: theano.tensor.shared_randomstreams.RandomStreams\n       :param theano_rng: Theano random generator; if None is given one is generated\n                    based on a seed drawn from `rng`\n\n       :type input: theano.tensor.TensorType\n       :paran input: a symbolic description of the input or None for standalone\n                     dA\n\n       :type n_visible: int\n       :param n_visible: number of visible units\n\n       :type n_hidden: int\n       :param n_hidden:  number of hidden units\n\n       :type W: theano.tensor.TensorType\n       :param W: Theano variable pointing to a set of weights that should be\n                 shared belong the dA and another architecture; if dA should\n                 be standalone set this to None\n\n       :type bhid: theano.tensor.TensorType\n       :param bhid: Theano variable pointing to a set of biases values (for\n                    hidden units) that should be shared belong dA and another\n                    architecture; if dA should be standalone set this to None\n\n       :type bvis: theano.tensor.TensorType\n       :param bvis: Theano variable pointing to a set of biases values (for\n                    visible units) that should be shared belong dA and another\n                    architecture; if dA should be standalone set this to None\n\n\n       \"\"\"\n       self.n_visible = n_visible\n       self.n_hidden = n_hidden\n\n       # create a Theano random generator that gives symbolic random values\n       if not theano_rng :\n           theano_rng = RandomStreams(rng.randint(2 ** 30))\n\n       # note : W' was written as `W_prime` and b' as `b_prime`\n       if not W:\n           # W is initialized with `initial_W` which is uniformely sampled\n           # from -4.*sqrt(6./(n_visible+n_hidden)) and 4.*sqrt(6./(n_hidden+n_visible))\n           # the output of uniform if converted using asarray to dtype\n           # theano.config.floatX so that the code is runable on GPU\n           initial_W = numpy.asarray(numpy_rng.uniform(\n                     low=-4 * numpy.sqrt(6. / (n_hidden + n_visible)),\n                     high=4 * numpy.sqrt(6. / (n_hidden + n_visible)),\n                     size=(n_visible, n_hidden)), dtype=theano.config.floatX)\n           W = theano.shared(value=initial_W, name='W')\n\n       if not bvis:\n           bvis = theano.shared(value = numpy.zeros(n_visible,\n                                        dtype=theano.config.floatX), name='bvis')\n\n       if not bhid:\n           bhid = theano.shared(value=numpy.zeros(n_hidden,\n                                             dtype=theano.config.floatX), name='bhid')\n\n       self.W = W\n       # b corresponds to the bias of the hidden\n       self.b = bhid\n       # b_prime corresponds to the bias of the visible\n       self.b_prime = bvis\n       # tied weights, therefore W_prime is W transpose\n       self.W_prime = self.W.T\n       self.theano_rng = theano_rng\n       # if no input is given, generate a variable representing the input\n       if input == None:\n           # we use a matrix because we expect a minibatch of several examples,\n           # each example being a row\n           self.x = T.dmatrix(name='input')\n       else:\n           self.x = input\n\n       self.params = [self.W, self.b, self.b_prime]\n\n   def get_corrupted_input(self, input, corruption_level):\n       \"\"\" This function keeps ``1-corruption_level`` entries of the inputs the same\n       and zero-out randomly selected subset of size ``coruption_level``\n       Note : first argument of theano.rng.binomial is the shape(size) of\n              random numbers that it should produce\n              second argument is the number of trials\n              third argument is the probability of success of any trial\n\n               this will produce an array of 0s and 1s where 1 has a probability of\n               1 - ``corruption_level`` and 0 with ``corruption_level``\n       \"\"\"\n       return  self.theano_rng.binomial(size=input.shape, n=1, p=1 - corruption_level) * input\n\n\n   def get_hidden_values(self, input):\n       \"\"\" Computes the values of the hidden layer \"\"\"\n       return T.nnet.sigmoid(T.dot(input, self.W) + self.b)\n\n   def get_reconstructed_input(self, hidden ):\n       \"\"\" Computes the reconstructed input given the values of the hidden layer \"\"\"\n       return  T.nnet.sigmoid(T.dot(hidden, self.W_prime) + self.b_prime)\n\n   def get_cost_updates(self, corruption_level, learning_rate):\n       \"\"\" This function computes the cost and the updates for one trainng\n       step of the dA \"\"\"\n\n       tilde_x = self.get_corrupted_input(self.x, corruption_level)\n       y = self.get_hidden_values( tilde_x)\n       z = self.get_reconstructed_input(y)\n       # note : we sum over the size of a datapoint; if we are using minibatches,\n       #        L will  be a vector, with one entry per example in minibatch\n       L = -T.sum(self.x * T.log(z) + (1 - self.x) * T.log(1 - z), axis=1 )\n       # note : L is now a vector, where each element is the cross-entropy cost\n       #        of the reconstruction of the corresponding example of the\n       #        minibatch. We need to compute the average of all these to get\n       #        the cost of the minibatch\n       cost = T.mean(L)\n\n       # compute the gradients of the cost of the `dA` with respect\n       # to its parameters\n       gparams = T.grad(cost, self.params)\n       # generate the list of updates\n       updates = []\n       for param, gparam in zip(self.params, gparams):\n           updates.append((param, param - learning_rate * gparam))\n\n       return (cost, updates)\n\n将它组合起来\n现在去构建一个dA类和训练它变得很简单了。\n# allocate symbolic variables for the data\nindex = T.lscalar()  # index to a [mini]batch\nx = T.matrix('x')  # the data is presented as rasterized images\n\n######################\n# BUILDING THE MODEL #\n######################\n\nrng = numpy.random.RandomState(123)\ntheano_rng = RandomStreams(rng.randint(2 ** 30))\n\nda = dA(numpy_rng=rng, theano_rng=theano_rng, input=x,\n        n_visible=28 * 28, n_hidden=500)\n\ncost, updates = da.get_cost_updates(corruption_level=0.2,\n                            learning_rate=learning_rate)\n\n\ntrain_da = theano.function([index], cost, updates=updates,\n     givens = {x: train_set_x[index * batch_size: (index + 1) * batch_size]})\n\nstart_time = time.clock()\n\n############\n# TRAINING #\n############\n\n# go through training epochs\nfor epoch in xrange(training_epochs):\n    # go through trainng set\n    c = []\n    for batch_index in xrange(n_train_batches):\n        c.append(train_da(batch_index))\n\n    print 'Training epoch %d, cost ' % epoch, numpy.mean(c)\n\nend_time = time.clock\n\ntraining_time = (end_time - start_time)\n\nprint ('Training took %f minutes' % (pretraining_time / 60.))\n\n为了了解网络学习了什么东西，我们将会描述出滤波器（通过权值矩阵来定义）。记住，事实上它没有提供完整的情况，因为我们忽略了偏置，并且画出的权值被乘以了常数（权值被转换到了0-1之间）。\n去画出我们的滤波器，我们需要title_raster_images(看Plotting Samples and Filters)，所以我们强烈建议读者去了解它。当然，也在PIL(python image library)的帮助下，下面行的代码将把滤波器保存为图像：\nimage = Image.fromarray(tile_raster_images(X=da.W.get_value(borrow=True).T,\n             img_shape=(28, 28), tile_shape=(10, 10),\n             tile_spacing=(1, 1)))\nimage.save('filters_corruption_30.png')\n\n运行这个代码\n当我们不使用任何噪声的时候，获得的滤波器如下：\n\n有30%噪声的时候，滤波器如下：\n\n"},"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html":{"url":"6_Stacked_Denoising_Autoencoders_层叠降噪自动编码机.html","title":"6.层叠降噪自动编码机","keywords":"","body":"层叠降噪自动编码机（Stacked Denoising Autoencoders (SdA)）\n在这一节，我们假设读者已经了解了使用逻辑回归进行MNIST分类和多层感知机。如果你需要在GPU上进行运算，你还需要了解GPU。\n本节的所有代码可以在这里下载。\n层叠降噪自动编码机（Stacked Denoising Autoencoder，SdA）是层叠自动编码机（Bengio07）的一个扩展，在Vincent08中被介绍。\n这个教程建立在前一个降噪自动编码机之上。我们建议，对于没有自动编码机经验的人应该阅读上述章节。\n层叠自动编码机\n降噪自动编码机可以被叠加起来形成一个深度网络，通过反馈前一层的降噪自动编码机的潜在表达（输出编码）作为当前层的输入。这个非监督的预学习结构一次只能学习一个层。每一层都被作为一个降噪自动编码机以最小化重构误差来进行训练。当前k个层被训练完了，我们可以进行k+1层的训练，因此此时我们才可以计算前一层的编码和潜在表达。当所有的层都被训练了，整个网络进行第二阶段训练，称为微调（fine-tuning）。这里，我们考虑监督微调，当我们需要最小化一个监督任务的预测误差吧。为此我们现在网络的顶端添加一个逻辑回归层（使输出层的编码更加精确）。然后我们像训练多层感知器一样训练整个网络。这里，我们考虑每个自动编码的机的编码模块。这个阶段是有监督的，因为我们在训练的时候使用了目标类别（更多细节请看多层感知机）\n\n这在Theano里面，使用之前定义的降噪自动编码机，可以轻易的被实现。我们可以将层叠降噪自动编码机看作两部分，一个是自动编码机链表，另一个是一个多层感知机。在预训练阶段，我们使用了第一部分，例如我们将模型看作一系列的自动编码机，然后分别训练每一个自动编码机。在第二阶段，我们使用第二部分。这个两个部分通过分享参数来实现连接。\nclass SdA(object):\n    \"\"\"Stacked denoising auto-encoder class (SdA)\n\n    A stacked denoising autoencoder model is obtained by stacking several\n    dAs. The hidden layer of the dA at layer `i` becomes the input of\n    the dA at layer `i+1`. The first layer dA gets as input the input of\n    the SdA, and the hidden layer of the last dA represents the output.\n    Note that after pretraining, the SdA is dealt with as a normal MLP,\n    the dAs are only used to initialize the weights.\n    \"\"\"\n\n    def __init__(\n        self,\n        numpy_rng,\n        theano_rng=None,\n        n_ins=784,\n        hidden_layers_sizes=[500, 500],\n        n_outs=10,\n        corruption_levels=[0.1, 0.1]\n    ):\n        \"\"\" This class is made to support a variable number of layers.\n\n        :type numpy_rng: numpy.random.RandomState\n        :param numpy_rng: numpy random number generator used to draw initial\n                    weights\n\n        :type theano_rng: theano.tensor.shared_randomstreams.RandomStreams\n        :param theano_rng: Theano random generator; if None is given one is\n                           generated based on a seed drawn from `rng`\n\n        :type n_ins: int\n        :param n_ins: dimension of the input to the sdA\n\n        :type n_layers_sizes: list of ints\n        :param n_layers_sizes: intermediate layers size, must contain\n                               at least one value\n\n        :type n_outs: int\n        :param n_outs: dimension of the output of the network\n\n        :type corruption_levels: list of float\n        :param corruption_levels: amount of corruption to use for each\n                                  layer\n        \"\"\"\n\n        self.sigmoid_layers = []\n        self.dA_layers = []\n        self.params = []\n        self.n_layers = len(hidden_layers_sizes)\n\n        assert self.n_layers > 0\n\n        if not theano_rng:\n            theano_rng = RandomStreams(numpy_rng.randint(2 ** 30))\n        # allocate symbolic variables for the data\n        self.x = T.matrix('x')  # the data is presented as rasterized images\n        self.y = T.ivector('y')  # the labels are presented as 1D vector of\n                                 # [int] labels\n\nself.sigmoid_layers将会储存多层感知机的sigmoid层，self.dA_layers将会储存连接多层感知机层的降噪自动编码机。\n下一步，我们构建n_layers个sigmoid层（我们使用在多层感知机中介绍的HiddenLayer类，唯一的更改是将原本的非线性函数tanh换成了logistic函数s=1/(1+exp(-x))）和n_layers个降噪自动编码机，当然n_layers就是我们模型的深度。我们连接sigmoid函数，使得他们形成一个MLP，构建每一个自动编码机和他们对应的sigmoid层，去共享编码部分的权值矩阵和偏执\n        for i in xrange(self.n_layers):\n            # construct the sigmoidal layer\n\n            # the size of the input is either the number of hidden units of\n            # the layer below or the input size if we are on the first layer\n            if i == 0:\n                input_size = n_ins\n            else:\n                input_size = hidden_layers_sizes[i - 1]\n\n            # the input to this layer is either the activation of the hidden\n            # layer below or the input of the SdA if you are on the first\n            # layer\n            if i == 0:\n                layer_input = self.x\n            else:\n                layer_input = self.sigmoid_layers[-1].output\n\n            sigmoid_layer = HiddenLayer(rng=numpy_rng,\n                                        input=layer_input,\n                                        n_in=input_size,\n                                        n_out=hidden_layers_sizes[i],\n                                        activation=T.nnet.sigmoid)\n            # add the layer to our list of layers\n            self.sigmoid_layers.append(sigmoid_layer)\n            # its arguably a philosophical question...\n            # but we are going to only declare that the parameters of the\n            # sigmoid_layers are parameters of the StackedDAA\n            # the visible biases in the dA are parameters of those\n            # dA, but not the SdA\n            self.params.extend(sigmoid_layer.params)\n\n            # Construct a denoising autoencoder that shared weights with this\n            # layer\n            dA_layer = dA(numpy_rng=numpy_rng,\n                          theano_rng=theano_rng,\n                          input=layer_input,\n                          n_visible=input_size,\n                          n_hidden=hidden_layers_sizes[i],\n                          W=sigmoid_layer.W,\n                          bhid=sigmoid_layer.b)\n            self.dA_layers.append(dA_layer)\n\n现在，我们需要在sigmoid层的上方添加逻辑层，所以我们将有一个MLP。我们将使用在使用逻辑回归进MNIST分类的LogisticRegression类。\n        # We now need to add a logistic layer on top of the MLP\n        self.logLayer = LogisticRegression(\n            input=self.sigmoid_layers[-1].output,\n            n_in=hidden_layers_sizes[-1],\n            n_out=n_outs\n        )\n\n        self.params.extend(self.logLayer.params)\n        # construct a function that implements one step of finetunining\n\n        # compute the cost for second phase of training,\n        # defined as the negative log likelihood\n        self.finetune_cost = self.logLayer.negative_log_likelihood(self.y)\n        # compute the gradients with respect to the model parameters\n        # symbolic variable that points to the number of errors made on the\n        # minibatch given by self.x and self.y\n        self.errors = self.logLayer.errors(self.y)\n\n这个类也提供一个方法去产生与不同层相关的降噪自动编码机的训练函数。它们以list的形式返回，第i个元素就是一个实现训练第i层的dA的函数。\n    def pretraining_functions(self, train_set_x, batch_size):\n        ''' Generates a list of functions, each of them implementing one\n        step in trainnig the dA corresponding to the layer with same index.\n        The function will require as input the minibatch index, and to train\n        a dA you just need to iterate, calling the corresponding function on\n        all minibatch indexes.\n\n        :type train_set_x: theano.tensor.TensorType\n        :param train_set_x: Shared variable that contains all datapoints used\n                            for training the dA\n\n        :type batch_size: int\n        :param batch_size: size of a [mini]batch\n\n        :type learning_rate: float\n        :param learning_rate: learning rate used during training for any of\n                              the dA layers\n        '''\n\n        # index to a [mini]batch\n        index = T.lscalar('index')  # index to a minibatch\n\n为了有能力在训练时，改变差错等级或者训练速率。我们用一个Theano变量来联系它们。\n        corruption_level = T.scalar('corruption')  # % of corruption to use\n        learning_rate = T.scalar('lr')  # learning rate to use\n        # begining of a batch, given `index`\n        batch_begin = index * batch_size\n        # ending of a batch given `index`\n        batch_end = batch_begin + batch_size\n\n        pretrain_fns = []\n        for dA in self.dA_layers:\n            # get the cost and the updates list\n            cost, updates = dA.get_cost_updates(corruption_level,\n                                                learning_rate)\n            # compile the theano function\n            fn = theano.function(\n                inputs=[\n                    index,\n                    theano.Param(corruption_level, default=0.2),\n                    theano.Param(learning_rate, default=0.1)\n                ],\n                outputs=cost,\n                updates=updates,\n                givens={\n                    self.x: train_set_x[batch_begin: batch_end]\n                }\n            )\n            # append `fn` to the list of functions\n            pretrain_fns.append(fn)\n\n        return pretrain_fns\n\n现在任何一个pretrain_fns[i]函数，可以将index，corruption——差错等级，lr——学习速率作为参数。注意，这些参数的名字是Theano变量的名字，而不是Python变量的名字（learning_rate或者corruption_level）。在使用Theano时，注意这一点。\n以相同的方式（fashion），我们创建了一个方法用于在微调（fine-tuning）时需要的构建函数（train_model，validate_model，test_model函数）。\n    def build_finetune_functions(self, datasets, batch_size, learning_rate):\n        '''Generates a function `train` that implements one step of\n        finetuning, a function `validate` that computes the error on\n        a batch from the validation set, and a function `test` that\n        computes the error on a batch from the testing set\n\n        :type datasets: list of pairs of theano.tensor.TensorType\n        :param datasets: It is a list that contain all the datasets;\n                         the has to contain three pairs, `train`,\n                         `valid`, `test` in this order, where each pair\n                         is formed of two Theano variables, one for the\n                         datapoints, the other for the labels\n\n        :type batch_size: int\n        :param batch_size: size of a minibatch\n\n        :type learning_rate: float\n        :param learning_rate: learning rate used during finetune stage\n        '''\n\n        (train_set_x, train_set_y) = datasets[0]\n        (valid_set_x, valid_set_y) = datasets[1]\n        (test_set_x, test_set_y) = datasets[2]\n\n        # compute number of minibatches for training, validation and testing\n        n_valid_batches = valid_set_x.get_value(borrow=True).shape[0]\n        n_valid_batches /= batch_size\n        n_test_batches = test_set_x.get_value(borrow=True).shape[0]\n        n_test_batches /= batch_size\n\n        index = T.lscalar('index')  # index to a [mini]batch\n\n        # compute the gradients with respect to the model parameters\n        gparams = T.grad(self.finetune_cost, self.params)\n\n        # compute list of fine-tuning updates\n        updates = [\n            (param, param - gparam * learning_rate)\n            for param, gparam in zip(self.params, gparams)\n        ]\n\n        train_fn = theano.function(\n            inputs=[index],\n            outputs=self.finetune_cost,\n            updates=updates,\n            givens={\n                self.x: train_set_x[\n                    index * batch_size: (index + 1) * batch_size\n                ],\n                self.y: train_set_y[\n                    index * batch_size: (index + 1) * batch_size\n                ]\n            },\n            name='train'\n        )\n\n        test_score_i = theano.function(\n            [index],\n            self.errors,\n            givens={\n                self.x: test_set_x[\n                    index * batch_size: (index + 1) * batch_size\n                ],\n                self.y: test_set_y[\n                    index * batch_size: (index + 1) * batch_size\n                ]\n            },\n            name='test'\n        )\n\n        valid_score_i = theano.function(\n            [index],\n            self.errors,\n            givens={\n                self.x: valid_set_x[\n                    index * batch_size: (index + 1) * batch_size\n                ],\n                self.y: valid_set_y[\n                    index * batch_size: (index + 1) * batch_size\n                ]\n            },\n            name='valid'\n        )\n\n        # Create a function that scans the entire validation set\n        def valid_score():\n            return [valid_score_i(i) for i in xrange(n_valid_batches)]\n\n        # Create a function that scans the entire test set\n        def test_score():\n            return [test_score_i(i) for i in xrange(n_test_batches)]\n\n        return train_fn, valid_score, test_score\n\n注意，这里返回的valid_score和test_score并不是Theano函数，而是Python函数，在整个验证集和测试集循环，以产生这些集合的损失数的list。\n将它组合起来\n下面的几行代码去构建层叠自动编码机：\n    numpy_rng = numpy.random.RandomState(89677)\n    print '... building the model'\n    # construct the stacked denoising autoencoder class\n    sda = SdA(\n        numpy_rng=numpy_rng,\n        n_ins=28 * 28,\n        hidden_layers_sizes=[1000, 1000, 1000],\n        n_outs=10\n    )\n\n在训练这个网络时，有两个阶段，一层是预训练，之后是微调。\n对于预训练阶段，我们将循环网络中的所有层。对于每一层，我们将使用编译的theano函数来实现SGD(随机梯度下降)，以实现权值优化，来见效每层的重构损失。这个函数将在训练集中被应用，并且是以pretraining_epochs中给出的固定次数的迭代。\n    #########################\n    # PRETRAINING THE MODEL #\n    #########################\n    print '... getting the pretraining functions'\n    pretraining_fns = sda.pretraining_functions(train_set_x=train_set_x,\n                                                batch_size=batch_size)\n\n    print '... pre-training the model'\n    start_time = time.clock()\n    ## Pre-train layer-wise\n    corruption_levels = [.1, .2, .3]\n    for i in xrange(sda.n_layers):\n        # go through pretraining epochs\n        for epoch in xrange(pretraining_epochs):\n            # go through the training set\n            c = []\n            for batch_index in xrange(n_train_batches):\n                c.append(pretraining_fns[i](index=batch_index,\n                         corruption=corruption_levels[i],\n                         lr=pretrain_lr))\n            print 'Pre-training layer %i, epoch %d, cost ' % (i, epoch),\n            print numpy.mean(c)\n\n    end_time = time.clock()\n\n    print >> sys.stderr, ('The pretraining code for file ' +\n                          os.path.split(__file__)[1] +\n                          ' ran for %.2fm' % ((end_time - start_time) / 60.))\n\n这个微调（fine-tuning）循环和多层感知机中的非常类似，唯一的不同是我们将使用在build_funetune_functions中给定的新函数。\n运行这个代码\n默认情况下，这个代码以块数目为1，每一层循环15次来进行预训练预训练。错差等级（corruption level）在第一层被设为0.1，第二层被设为0.2，第三层被设为0.3。预训练的学习速率为0.001，微调学习速率为0.1。预训练花了585.01分钟，平均每层13分钟。微调在36次迭代，444.2分钟后完成。平均每层迭代12.34分钟。最后的验证得分为1.39%，测试得分为1.3%。所有的结果都是在Intel Xeon E5430 @ 2.66GHz CPU，GotoBLAS下得出。\n技巧\n这里有一个方法去提高代码的运行速度（假定你有足够的可用内存），是去计算这个网络（直到第k-1层时）如何转换你的数据。换句话说，你通过训练你的第一个dA层来开始。一旦它被训练，你就可以为每一个数据节点计算隐单元的值然后将它们储存为一个新的数据集，以便你在第2层中训练dA。一旦你训练完第2层的dA，你以相同的方式计算第三层的数据。现在你可以明白，在这个时候，这个dAs被分开训练了，它们仅仅提供（一对一的）对输入的非线性转换。一旦所有的dAs被训练，你就可以开始微调整个模型了。\n"},"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html":{"url":"7_Restricted_Boltzmann_Machine_受限波尔兹曼机.html","title":"7.受限波尔兹曼机","keywords":"","body":"受限波尔兹曼机（Restricted Boltzmann Machines）\n在这一章节，我们假设读者已经阅读了使用逻辑回归进行MNIST分类和多层感知机。当然，假如你要使用GPU来运行代码，你还需要阅读GPU。\n本节的所有代码都可以在这里下载。\n基于能量模型（Energy-Based Models）\n基于能量的模型（EBM）把我们所关心变量的各种组合和一个标量能量联系在一起。训练模型的过程就是不断改变标量能量的过程，使其能量函数的形状满足期望的形状。比如，如果一个变量组合被认为是合理的，它同时也具有较小的能量。基于能量的概率模型通过能量函数来定义概率分布：\n\n其中归一化因子Z被称为分割函数：\n\n基于能量的模型可以利用使用梯度下降或随机梯度下降的方法来学习，具体而言，就是以先验（训练集）的负对数似然函数作为损失函数，就像在逻辑回归中我们定义的那样，\n\n其中随机梯度为，其中theta为模型的参数。\n包含隐藏单元的EBMs\n在很多情况下，我们无法观察到x样本的全部分布，或者我们需要引进一些没有观察到的变量，以增加模型的表达能力。因而我们考虑将模型分为2部分，一个可见部分（x的观察分布）和一个隐藏部分h，这样得到的就是包含隐含变量的EBM：\n\n同时我们受物理启发定义了自由能量（free energy）：\n\n然后我们可以写成如下公式：\n\n数据的服对数似然函数梯度就有如下有趣的形式：\n\n推倒公式如下：\n\n需要注意的是上述的梯度包含2个项，包括正相位和负相位。正和负的术语不指公式中的每个项的符号，而是反映其对模型所定义的概率密度的影响。第一项增加训练数据的概率（通过减少相关的自由能量），而第二项减小模型产生的样本的概率。\n通常我们很难精确计算这个梯度，因为式中第一项涉及到可见单元与隐含单元的联合分布，由于归一化因子Z(θ)的存在，该分布很难获取。 我们只能通过一些采样方法（如Gibbs采样）获取其近似值，其具体方法将在后文中详述。\n受限波尔兹曼机（RBM）\n波尔兹曼机是对数线性马尔可夫随机场（MRF）的一种特殊形式，例如这个能量函数在它的自由参数下是线性的。为了使得它们能更强力的表达复杂分布（从受限的参数设定到一个非参数设定），我们认为一些变量是不可见的（被称为隐藏）。通过拥有更多隐藏变量（也称之为隐藏单元），我们可以增加波尔兹曼机的模型容量。受限波尔兹曼机限制波尔兹曼机可视层和隐藏层的层内连接。RBM模型可以由下图描述：\n\nRBM的能量函数可以被定义如下：\n\n其中’表示转置，b,c,W为模型的参数，b,c分别为可见层和隐含层的偏置，W为可见层与隐含层的链接权重。\n自由能量为如下形式：\n\n由于RBM的特殊结构，可视层和隐藏层层间单元是相互独立的。利用这个特性，我们定义如下：\n\n二进制单元的RBMs\n在使用二进制单元（v和h都属于{0,1}）的普通研究情况时，概率版的普通神经激活函数表示如下：\n\n\n二进制单元RBMs的自由能力为：\n\n二进制单元的更新公式\n我们可以获得如下的一个二进制单元RBM的对数似然梯度：\n\n这个公式的更多细节推倒，读者可以阅读这一页，或者Learning Deep Architectures for AI的第五节。在这里，我们将不使用这些等式，而是通过Theano的T.grad来获取梯度。\n在RBM中进行采样\np(x)的样本可以通过运行马尔可夫链的汇聚、Gibbs采样的过渡来得到。\n由N个随机变量（S=(S1,S2,...Sn)）的联合分布的Gibbs采样，可以通过N个采样子步骤来实现,形式如Si～p(Si|S-i)，其中S-i表示集合S中除Si的N-1个随机变量。\n我们可以从X的一个任意状态(比如[x1(0),x2(0),…,xK(0)])开始，利用上述条件 分布，迭代的对其分量依次采样，随着采样次数的增加，随机变量[x1(n),x2(n),…,xK(n)]的概率分布将以n的几何级数的速度收敛于X的联合 概率分布P(X)。也就是说，我们可以在未知联合概率分布的条件下对其进行采样。\n对于RBMs来说，S包含了可视和隐藏单元的集合。然而，由于它们的条件独立性，可以执行块Gibbs抽样。在这个设定中，可视单元被采样，同时给出隐藏单元的固定值，同样的，隐藏单元也是如此：\n\n这里，h(n)表示马尔可夫链中第n布的隐藏单元的集合。这意味着，h(n+1)根据概率simg(W‘v(n)+ci)来随机地被选为0/1。类似地v(n+1)也是如此。这个过程可以通过下面地图来展现：\n\n当t趋向于无穷时，(v(t),h(t))将越加逼近正确样本的概率分布p(v,h)。\n在这个理论里面，每个参数在学习进程中的更新都需要运行这样几个链来趋近。毫无疑问这将耗费很大的计算量。一些新的算法已经被提出来，以有效的学习p(v,h)中的样本情况。\n对比散度算法（CD-k）\n对比散度算法，是一种成功的用于求解对数似然函数关于未知参数梯度的近似的方法。它使用两个技巧来技术采样过程：\n\n因为我们希望p(v)=p_train(v)（数据的真实、底层分布），所以我们使用一个训练样本来初始化马尔可夫链（例如，从一个被预计接近于p的分布，所以这个链已经开始去收敛这个最终的分布p）。\n对比梯度不需要等待链的收敛。样本在k步Gibbs采样后就可以获得。在实际中，k=1时就可以获得惊人的好的效果。\n\n持续的对比散度\n持续的对比散度Tieleman08使用了另外一种近似方法来从p(v,h)中采样。它建立在一个拥有持续状态的单马尔可夫链上（例如，不是对每个可视样例都重启链）。对每一次参数更新，我们通过简单的运行这个链k步来获得新的样本。然后保存链的状态以便后续的更新。\n一般直觉的是，如果参数的更新是足够小相比链的混合率，那么马尔科夫链应该能够“赶上”模型的变化。\n实现\n\n我们构建一个RBM类。这个网络的参数既可以通过构造函数初始化，也可以作为参数进行传入。当RBM被用于构建一个深度网络时，这个选项——权重矩阵和隐藏层偏置与一个MLP网络的相应的S形层共享，就是非常有用的。\nclass RBM(object):\n    \"\"\"Restricted Boltzmann Machine (RBM)  \"\"\"\n    def __init__(\n        self,\n        input=None,\n        n_visible=784,\n        n_hidden=500,\n        W=None,\n        hbias=None,\n        vbias=None,\n        numpy_rng=None,\n        theano_rng=None\n    ):\n        \"\"\"\n        RBM constructor. Defines the parameters of the model along with\n        basic operations for inferring hidden from visible (and vice-versa),\n        as well as for performing CD updates.\n\n        :param input: None for standalone RBMs or symbolic variable if RBM is\n        part of a larger graph.\n\n        :param n_visible: number of visible units\n\n        :param n_hidden: number of hidden units\n\n        :param W: None for standalone RBMs or symbolic variable pointing to a\n        shared weight matrix in case RBM is part of a DBN network; in a DBN,\n        the weights are shared between RBMs and layers of a MLP\n\n        :param hbias: None for standalone RBMs or symbolic variable pointing\n        to a shared hidden units bias vector in case RBM is part of a\n        different network\n\n        :param vbias: None for standalone RBMs or a symbolic variable\n        pointing to a shared visible units bias\n        \"\"\"\n\n        self.n_visible = n_visible\n        self.n_hidden = n_hidden\n\n        if numpy_rng is None:\n            # create a number generator\n            numpy_rng = numpy.random.RandomState(1234)\n\n        if theano_rng is None:\n            theano_rng = RandomStreams(numpy_rng.randint(2 ** 30))\n\n        if W is None:\n            # W is initialized with `initial_W` which is uniformely\n            # sampled from -4*sqrt(6./(n_visible+n_hidden)) and\n            # 4*sqrt(6./(n_hidden+n_visible)) the output of uniform if\n            # converted using asarray to dtype theano.config.floatX so\n            # that the code is runable on GPU\n            initial_W = numpy.asarray(\n                numpy_rng.uniform(\n                    low=-4 * numpy.sqrt(6. / (n_hidden + n_visible)),\n                    high=4 * numpy.sqrt(6. / (n_hidden + n_visible)),\n                    size=(n_visible, n_hidden)\n                ),\n                dtype=theano.config.floatX\n            )\n            # theano shared variables for weights and biases\n            W = theano.shared(value=initial_W, name='W', borrow=True)\n\n        if hbias is None:\n            # create shared variable for hidden units bias\n            hbias = theano.shared(\n                value=numpy.zeros(\n                    n_hidden,\n                    dtype=theano.config.floatX\n                ),\n                name='hbias',\n                borrow=True\n            )\n\n        if vbias is None:\n            # create shared variable for visible units bias\n            vbias = theano.shared(\n                value=numpy.zeros(\n                    n_visible,\n                    dtype=theano.config.floatX\n                ),\n                name='vbias',\n                borrow=True\n            )\n\n        # initialize input layer for standalone RBM or layer0 of DBN\n        self.input = input\n        if not input:\n            self.input = T.matrix('input')\n\n        self.W = W\n        self.hbias = hbias\n        self.vbias = vbias\n        self.theano_rng = theano_rng\n        # **** WARNING: It is not a good idea to put things in this list\n        # other than shared variables created in this function.\n        self.params = [self.W, self.hbias, self.vbias]\n\n下一步就是去定义函数来构建S图。代码如下：\n    def propup(self, vis):\n        '''This function propagates the visible units activation upwards to\n        the hidden units\n\n        Note that we return also the pre-sigmoid activation of the\n        layer. As it will turn out later, due to how Theano deals with\n        optimizations, this symbolic variable will be needed to write\n        down a more stable computational graph (see details in the\n        reconstruction cost function)\n\n        '''\n        pre_sigmoid_activation = T.dot(vis, self.W) + self.hbias\n        return [pre_sigmoid_activation, T.nnet.sigmoid(pre_sigmoid_activation)]\n\n    def sample_h_given_v(self, v0_sample):\n        ''' This function infers state of hidden units given visible units '''\n        # compute the activation of the hidden units given a sample of\n        # the visibles\n        pre_sigmoid_h1, h1_mean = self.propup(v0_sample)\n        # get a sample of the hiddens given their activation\n        # Note that theano_rng.binomial returns a symbolic sample of dtype\n        # int64 by default. If we want to keep our computations in floatX\n        # for the GPU we need to specify to return the dtype floatX\n        h1_sample = self.theano_rng.binomial(size=h1_mean.shape,\n                                             n=1, p=h1_mean,\n                                             dtype=theano.config.floatX)\n        return [pre_sigmoid_h1, h1_mean, h1_sample]\n\n    def propdown(self, hid):\n        '''This function propagates the hidden units activation downwards to\n        the visible units\n\n        Note that we return also the pre_sigmoid_activation of the\n        layer. As it will turn out later, due to how Theano deals with\n        optimizations, this symbolic variable will be needed to write\n        down a more stable computational graph (see details in the\n        reconstruction cost function)\n\n        '''\n        pre_sigmoid_activation = T.dot(hid, self.W.T) + self.vbias\n        return [pre_sigmoid_activation, T.nnet.sigmoid(pre_sigmoid_activation)]\n\n    def sample_v_given_h(self, h0_sample):\n        ''' This function infers state of visible units given hidden units '''\n        # compute the activation of the visible given the hidden sample\n        pre_sigmoid_v1, v1_mean = self.propdown(h0_sample)\n        # get a sample of the visible given their activation\n        # Note that theano_rng.binomial returns a symbolic sample of dtype\n        # int64 by default. If we want to keep our computations in floatX\n        # for the GPU we need to specify to return the dtype floatX\n        v1_sample = self.theano_rng.binomial(size=v1_mean.shape,\n                                             n=1, p=v1_mean,\n                                             dtype=theano.config.floatX)\n        return [pre_sigmoid_v1, v1_mean, v1_sample]\n\n现在，我们可以使用这些函数来定义一个Gibbs采样步骤的符号图。我们定义如下两个函数：\n\ngibbs_vhv表示从可视单元中开始的Gibbs采样的步骤。我们将可以看到这对于从RBM中采样是非常有用的。\ngibbs_hvh表示从隐藏单元中开始Gibbs采样的步骤。这个函数再实现CD和PCD更新中是非常有用的。\n代码如下：\n\n    def gibbs_hvh(self, h0_sample):\n        ''' This function implements one step of Gibbs sampling,\n            starting from the hidden state'''\n        pre_sigmoid_v1, v1_mean, v1_sample = self.sample_v_given_h(h0_sample)\n        pre_sigmoid_h1, h1_mean, h1_sample = self.sample_h_given_v(v1_sample)\n        return [pre_sigmoid_v1, v1_mean, v1_sample,\n                pre_sigmoid_h1, h1_mean, h1_sample]\n\n    def gibbs_vhv(self, v0_sample):\n        ''' This function implements one step of Gibbs sampling,\n            starting from the visible state'''\n        pre_sigmoid_h1, h1_mean, h1_sample = self.sample_h_given_v(v0_sample)\n        pre_sigmoid_v1, v1_mean, v1_sample = self.sample_v_given_h(h1_sample)\n        return [pre_sigmoid_h1, h1_mean, h1_sample,\n                pre_sigmoid_v1, v1_mean, v1_sample]\n\n    # start-snippet-2\n\n这个类还有一个函数去计算模型的自由能量，以便去计算参数的梯度。注意我们也会返回pre-sigmoid。\n    def free_energy(self, v_sample):\n        ''' Function to compute the free energy '''\n        wx_b = T.dot(v_sample, self.W) + self.hbias\n        vbias_term = T.dot(v_sample, self.vbias)\n        hidden_term = T.sum(T.log(1 + T.exp(wx_b)), axis=1)\n        return -hidden_term - vbias_term\n\n我们随后添加一个get_cost_update方法，目的是产生CD-k和PCD-k的更新的象征性梯度。\n    def get_cost_updates(self, lr=0.1, persistent=None, k=1):\n        \"\"\"This functions implements one step of CD-k or PCD-k\n\n        :param lr: learning rate used to train the RBM\n\n        :param persistent: None for CD. For PCD, shared variable\n            containing old state of Gibbs chain. This must be a shared\n            variable of size (batch size, number of hidden units).\n\n        :param k: number of Gibbs steps to do in CD-k/PCD-k\n\n        Returns a proxy for the cost and the updates dictionary. The\n        dictionary contains the update rules for weights and biases but\n        also an update of the shared variable used to store the persistent\n        chain, if one is used.\n\n        \"\"\"\n\n        # compute positive phase\n        pre_sigmoid_ph, ph_mean, ph_sample = self.sample_h_given_v(self.input)\n\n        # decide how to initialize persistent chain:\n        # for CD, we use the newly generate hidden sample\n        # for PCD, we initialize from the old state of the chain\n        if persistent is None:\n            chain_start = ph_sample\n        else:\n            chain_start = persistent\n\n注意get_cost_update作为参数被变量化为persistent。这允许我们去使用相同的代码来实现CD和PCD。为了使用PCD，persistent需要被关联到一个共享变量，它包含前一次迭代的Gibbs链的状态。\n假如persistent为None，则我们使用正相位时产生的隐藏样本来初始化Gibbs链，以此实现CD。当我们已经建立了这个链的开始点的时候，我们就可以计算这个Gibbs链的终点的样本，以及我们需要的去获得梯度的样本。为了获得这些，我们使用Theano提供的sacn操作，我们建议读者去阅读这个链接。\n        # perform actual negative phase\n        # in order to implement CD-k/PCD-k we need to scan over the\n        # function that implements one gibbs step k times.\n        # Read Theano tutorial on scan for more information :\n        # http://deeplearning.net/software/theano/library/scan.html\n        # the scan will return the entire Gibbs chain\n        (\n            [\n                pre_sigmoid_nvs,\n                nv_means,\n                nv_samples,\n                pre_sigmoid_nhs,\n                nh_means,\n                nh_samples\n            ],\n            updates\n        ) = theano.scan(\n            self.gibbs_hvh,\n            # the None are place holders, saying that\n            # chain_start is the initial state corresponding to the\n            # 6th output\n            outputs_info=[None, None, None, None, None, chain_start],\n            n_steps=k\n        )\n\n当你已经产生了这个链，我们在链的末尾的样例获得负相位的自由能量。注意，这个chain_end是模型参数项中的一个的象征性的Theano变量，当我们简单的求解T.grad的时候，这个函数将通过Gibbs链来得到这个梯度。这不是我们想要的（它会搞乱我们的梯度），因此我们需要指示T.grad，chain_end是一个常量。我们通过T.grad的consider_constant来做这个事情。\n        # determine gradients on RBM parameters\n        # note that we only need the sample at the end of the chain\n        chain_end = nv_samples[-1]\n\n        cost = T.mean(self.free_energy(self.input)) - T.mean(\n            self.free_energy(chain_end))\n        # We must not compute the gradient through the gibbs sampling\n        gparams = T.grad(cost, self.params, consider_constant=[chain_end])\n\n最后，我们增加由scan返回的更新字典（包含了随机状态的theano_rng更新规则）来获取参数更新。在PCD例子中，也需要更新包含Gibbs链状态的共享变量。\n        # constructs the update dictionary\n        for gparam, param in zip(gparams, self.params):\n            # make sure that the learning rate is of the right dtype\n            updates[param] = param - gparam * T.cast(\n                lr,\n                dtype=theano.config.floatX\n            )\n        if persistent:\n            # Note that this works only if persistent is a shared variable\n            updates[persistent] = nh_samples[-1]\n            # pseudo-likelihood is a better proxy for PCD\n            monitoring_cost = self.get_pseudo_likelihood_cost(updates)\n        else:\n            # reconstruction cross-entropy is a better proxy for CD\n            monitoring_cost = self.get_reconstruction_cost(updates,\n                                                           pre_sigmoid_nvs[-1])\n\n        return monitoring_cost, updates\n\n进展跟踪\nRBMs的训练是特别困难的。由于归一化函数Z，我们无法在训练的时候估计对数似然函数log(P(x))。因而我们没有直接可以度量超参数优化与否的方法。\n而下面的几个选项对用户是有用的。\n负样本的检查\n在训练中获得的负样本是可以可视化的。在训练进程中，我们知道由RBM定义的模型不断逼近真实分布，p_train(x)。负样例就可以视为训练集中的样本。显而易见的，坏的超参数将在这种方式下被丢弃。\n滤波器的可视化跟踪\n由模型训练的滤波器是可以可视化的。我们可以将每个单元的权值以灰度图的方式展示。滤波器应该选出数据中强的特征。对于任意的数据集，这个滤波器都是不确定的。例如，训练MNIST，滤波器就表现的像“stroke”检测器，而训练自然图像的稀疏编码的时候，则像Gabor滤波器。\n似然估计的替代\n此外，更加容易处理的函数可以被用于做似然估计的替代。当我们使用PCD来训练RBM的时候，可以使用伪似然估计来替代。伪似然估计（Pseudo-likeihood,PL）更加简于计算，因为它假设所有的比特都是相互独立的，因此有：\n\n主循环\n结果\n"}}}